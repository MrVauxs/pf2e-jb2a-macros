{"name":"Cone Hands","type":"script","author":"BHRwUaMa68cNSVcP","img":"systems/pf2e/icons/spells/burning-hands.webp","scope":"global","command":"const [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\nconst template = args[1]?.templateData ?? canvas.templates.placeables[canvas.templates.placeables.length - 1];\nconst [templateX, templateY] = [template.data.x, template.data.y];\n\nlet file = args[2]?.[0]\n\n// file = \"rainbow\"\n\nif (file === \"rainbow\") {\n    new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n        .effect()\n            .file(\"jb2a.cone_of_cold.green\", true)\n            .mask(template)\n            .atLocation(template)\n            .stretchTo(template)\n            .scale({y: 2})\n            .filter(\"ColorMatrix\", { hue: 50 }, \"light\")\n            .loopProperty(\n                \"effectFilters.light\",\n                \"hue\",\n                {\n                    from: 0,\n                    to: 360,\n                    duration: 1500\n                }\n            )\n        .effect()\n            .file(\"jb2a.cone_of_cold.green\", true)\n            .mask(template)\n            .atLocation(template)\n            .stretchTo(template)\n            .scale({y: 2})\n            .opacity(0.8)\n        .effect()\n            .file(\"jb2a.cone_of_cold.orange\", true)\n            .mask(template)\n            .atLocation(template)\n            .stretchTo(template)\n            .rotate(20)\n            .opacity(0.8)\n        .effect()\n            .file(\"jb2a.cone_of_cold.purple\", true)\n            .mask(template)\n            .atLocation(template)\n            .stretchTo(template)\n            .rotate(-20)\n            .opacity(0.8)\n        .effect()\n            .file(\"jb2a.cone_of_cold.purple\", true)\n            .mask(template)\n            .atLocation(template)\n            .stretchTo(template)\n            .rotate(-10)\n            .filter(\"ColorMatrix\", { contrast: 2, hue: -60 })\n            .opacity(0.8)\n        .effect()\n            .file(\"jb2a.cone_of_cold.orange\", true)\n            .mask(template)\n            .atLocation(template)\n            .stretchTo(template)\n            .rotate(10)\n            .filter(\"ColorMatrix\", { contrast: 2, hue: 120 })\n            .opacity(0.8)\n        .play()\n} else {\n    new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n        .effect()\n            .file(file, true)\n            .mask(template)\n            .atLocation(template)\n            .stretchTo(template)\n            .scale({y: 2})\n        .effect()\n            .file(file, true)\n            .mask(template)\n            .atLocation(template)\n            .stretchTo(template)\n            .rotate(20)\n        .effect()\n            .file(file, true)\n            .mask(template)\n            .atLocation(template)\n            .stretchTo(template)\n            .rotate(-20)\n        .play()\n}","flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"},"cf":{"id":"temp_sjnygaa08ij"}},"ownership":{"default":0,"BHRwUaMa68cNSVcP":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.4","coreVersion":"10.285","createdTime":1662948680058,"modifiedTime":1663243398330,"lastModifiedBy":"BHRwUaMa68cNSVcP"},"folder":null,"sort":0,"_id":"0O8rNzIVLo8p3tXj"}
{"_id":"1SwXNmbriolNG2ap","name":"Rebounding Toss","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/skills/ranged/shuriken-thrown-orange.webp","scope":"global","command":"// WIP!\n return // Comment me out to test\n\nlet targets = Array.from(game.user.targets);\nlet token = args[0].token;\nlet items = args[0].token._actor.items.filter(i => i.type === \"weapon\" && i.isHeld === true)\nlet weapons = []\n\ntoken.actor.sheet.minimize();\n\nlet imageProperties = [\n    \"padding: 1em 1em\",\n    \"border: none\",\n    \"width: 10em\",\n    \"height: auto\"\n]\n\nitems.forEach(x => weapons.push({label: `<img src=\"${x.img}\" style=\"${imageProperties.join(\";\")}\"><p>${x.name}</p>`, value: x}))\n\nlet weaponSelection = await warpgate.menu(\n    {\n        inputs: [\n            { \n                type: 'info', \n                label: 'Which weapon are you attacking with?'\n            },\n            { \n                type: 'info', \n                label: 'Only Equipped Weapons are shown, draw your weapon first if you want to attack with it!'\n            }\n        ],\n        buttons: weapons\n    }, \n    { \n        title: \"Rebounding Toss\"\n    }\n)\n\n\n// Second Throw BS\nlet distanceLimit = 10\nconst tokenCenter = targets[0];\nlet cachedDistance = 0;\n\nconst checkDistance = async(crosshairs) => {\n\n    while (crosshairs.inFlight) {\n        \n        //wait for initial render\n        await warpgate.wait(100);\n        \n        const ray = new Ray( tokenCenter, crosshairs );\n        \n        const distance = canvas.grid.measureDistances([{ray}], {gridSpaces:true})[0]\n\n        //only update if the distance has changed\n        if (cachedDistance !== distance) {\n          cachedDistance = distance;     \n          if(distance > distanceLimit) {\n              crosshairs.icon = 'icons/svg/hazard.svg'\n          } else {\n              crosshairs.icon = weaponSelection.buttons.img\n          }\n          crosshairs.draw()\n          crosshairs.label = `${distance} ft`\n        }\n    }\n}\n\nconst callbacks = {\n    show: checkDistance\n}\n\nif (weaponSelection.buttons) {\n    let weaponOfChoice = (actor.data.data.actions ?? []).filter(action => action.type === 'strike').find(strike => strike.name === weaponSelection.buttons.data.name)\n    \n    if (targets.length === 1) {\n        // Roll attack\n        weaponOfChoice?.attack();\n        \n        // Check if attack hit\n        const secondThrowLocation = warpgate.crosshairs.show({size: token.data.width, icon: token.data.img, label: '0 ft.'}, callbacks);\n                \n        // Handle fuckups\n        if (location.cancelled) {\n            ui.notifications.error('Cancelled Rebounding Toss\\'s second throw.');\n            return;\n        }\n        if (cachedDistance > distanceLimit) {\n            ui.notifications.error('Your Rebounding Toss can only attack a second target within 10 feet of the first one.')\n            return;\n        }\n        \n        const boundsContains = (bounds, point) =>\n            bounds.left <= point.x\n            && point.x <= bounds.right\n            && bounds.top <= point.y\n            && point.y <= bounds.bottom;\n    \n        const found = !!canvas.tokens.placeables.map(x => x.bounds).find(b => boundsContains(b, secondThrowLocation));\n    } else if (targets.length > 1) ui.notifications.info(\"Too many targets!\"); else ui.notifications.info(\"No Targets!\")\n}\n\ntoken.actor.sheet.maximize();","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.fdIIA40dPrWNfbyr"},"cf":{"id":"temp_9hsvsxrbtvj"}}}
{"_id":"1dUKN6KL7g3cdDdz","name":"Bouncing Lightning","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/electric-arc.webp","scope":"global","command":"// Affected by Interface Volume\n\nconst [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\nlet targetTokens = Array.from(game.user.targets)\nif (targetTokens.length === 0) return;\n\nlet sequence = new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n    .effect()\n        .file(\"jb2a.chain_lightning.primary.blue\", true)\n        .atLocation(tokenD) \n        .stretchTo(targetTokens[0]) \n        .waitUntilFinished(-1100)\n    .sound()\n        .volume(0.3)\n        .file(\"modules/soundfxlibrary/Combat/Single/Spell%20Impact%20Lightning/spell-impact-lightning-3.mp3\", true, true)\n        .fadeInAudio(500)\n        .fadeOutAudio(500)\n    .effect()\n        .file(\"jb2a.static_electricity.02.blue\", true)\n        .atLocation(targetTokens[0])\n        .scaleToObject(1.2)\n        .repeats(2)\n        .wait(100)\nfor (let i = 1; i < targetTokens.length; i++) {\n    sequence\n        .effect()\n            .file(\"jb2a.chain_lightning.secondary.blue\", true)\n            .repeats(2)\n            .atLocation(targetTokens[i - 1]) \n            .stretchTo(targetTokens[i])\n            .wait(200)\n        .sound()\n            .volume(0.3)\n            .file(\"modules/soundfxlibrary/Combat/Single/Spell%20Impact%20Lightning/spell-impact-lightning-4.mp3\", true, true)\n            .fadeInAudio(500)\n            .fadeOutAudio(500)\n        .effect()\n            .file(\"jb2a.static_electricity.02.blue\", true)\n            .atLocation(targetTokens[i])\n            .scaleToObject(1.2)\n            .repeats(2)\n            .wait(200)\n}\nsequence.play()","folder":null,"sort":0,"flags":{"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"},"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"cf":{"id":"temp_7rg2mnzpvsh"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.4.2","coreVersion":"10.291","createdTime":null,"modifiedTime":1670800767395,"lastModifiedBy":"SCUQoZ7lvePPTab6"}}
{"name":"Mirror Reflection","type":"script","scope":"global","author":"SCUQoZ7lvePPTab6","img":"systems/pf2e/icons/features/classes/Mirror.webp","command":"const [token, tokenScale] = await pf2eAnimations.macroHelpers(args)\nlet spawnArgs = {}\n\ntoken.actor.sheet.minimize();\nconst crosshairs = await pf2eAnimations.crosshairs({token}, {range: 15})\nif (crosshairs.cancelled) return;\n\nspawnArgs.location = (await canvas.scene.createEmbeddedDocuments('MeasuredTemplate', [crosshairs]))[0]\n\nspawnArgs.options = { ...spawnArgs.options, ...{ controllingActor: token.actor } }\n\nspawnArgs.origins = {tokenUuid: token.document.uuid, itemName: args[1].itemName}\nspawnArgs.actorName = token.actor.name\n\npf2eAnimations.debug(\"Requesting to GM\", spawnArgs)\nawait warpgate.event.notify(\"askGMforSummon\", spawnArgs)\ntoken.actor.sheet.maximize();","ownership":{"default":0,"SCUQoZ7lvePPTab6":3},"flags":{"advanced-macros":{"runAsGM":false,"runForEveryone":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.TCGcHbgpYSOjpCmP"},"cf":{"id":"temp_3t4j7cyld29"}},"_stats":{"systemId":"pf2e","systemVersion":"4.7.4","coreVersion":"10.291","createdTime":1667134397618,"modifiedTime":1676417313268,"lastModifiedBy":"SCUQoZ7lvePPTab6"},"folder":null,"sort":0,"_id":"4RJ2Whuc6uwQXJx1"}
{"name":"Opacity 1","type":"script","scope":"global","author":"SCUQoZ7lvePPTab6","img":"icons/svg/circle.svg","command":"pf2eAnimations.debug(\"Turning a token to opacity 1\", args)\nnew Sequence({moduleName: \"PF2e Animations\", softFail: true})\n\t.animation()\n\t\t.on(args[1].allTargets[0])\n\t\t.opacity(1)\n\t.play()\n\nif (game.modules.get(\"tokenmagic-automatic-wounds\")?.active) {\n\tawait TokenMagicAutomaticWounds.removeWoundsOnToken(args[1].allTargets[0])\n}","ownership":{"default":0,"SCUQoZ7lvePPTab6":3},"flags":{"advanced-macros":{"runAsGM":false,"runForEveryone":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.Z9Fh4fcYb9ds5EeO"}},"_stats":{"systemId":"pf2e","systemVersion":"4.5.1","coreVersion":"10.291","createdTime":1667671278150,"modifiedTime":1671549707796,"lastModifiedBy":"SCUQoZ7lvePPTab6"},"folder":null,"sort":0,"_id":"4iMplY0v8RTHCFgm"}
{"name":"Feral Shades","type":"script","scope":"global","author":"BHRwUaMa68cNSVcP","img":"systems/pf2e/icons/spells/feral-shades.webp","command":"const [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\nconst template = args[1]?.templateData ?? canvas.templates.placeables[canvas.templates.placeables.length - 1];\nconst [templateX, templateY] = [template.data.x, template.data.y];\nnew Sequence({moduleName: \"PF2e Animations\", softFail: true})\n    .effect()\n        .file('jb2a.darkness.black', true)\n        .mask(template)\n        .atLocation(tokenD)\n        .opacity(0.8)\n        .fadeIn(500)\n        .fadeOut(500)\n        .duration(10000)\n        .scale(0.2)\n        .animateProperty(\"sprite\", \"scale.x\", { from: 0, to: 2, duration: 2500, ease:\"easeOutCirc\"})\n        .animateProperty(\"sprite\", \"scale.y\", { from: 0, to: 2, duration: 2500, ease:\"easeOutCirc\"})\n    .effect()\n        .file('jb2a.energy_strands.range.standard.dark_purple.01', true)\n        .mask(template)\n        .atLocation(template)\n        .zIndex(1)\n        .stretchTo(template, {randomOffset: true})\n        .repeats(50, 0, 500)\n    .play()","ownership":{"default":0,"BHRwUaMa68cNSVcP":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.SPu9f0NvlJG9JL3m"},"cf":{"id":"temp_sjnygaa08ij"}},"_stats":{"systemId":"pf2e","systemVersion":"4.0.4","coreVersion":"10.285","createdTime":1663084951587,"modifiedTime":1663106253255,"lastModifiedBy":"BHRwUaMa68cNSVcP"},"folder":null,"sort":0,"_id":"62nzP4aLTMC5DNF7"}
{"_id":"6yeZBx2HjHHrQIRp","name":"Panache","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/features/classes/panache.webp","scope":"global","command":"const [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\n\nlet testArgs\n\nif (!args.length) testArgs = await Sequencer.EffectManager.getEffects({ origin: \"panache\", source: tokenD }).length ? \"off\" : \"on\";\n\nconst assets = game.modules.get(\"JB2A_DnD5e\")?.active\n    ? [\"jb2a.token_border.circle.static.blue.004\"]\n    : [\"jb2a.token_border.circle.static.blue.008\"];\n\nif (args[0] == \"on\" || testArgs === \"on\") {\n    new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n        .effect()\n            .file(\"jb2a.antilife_shell.blue_no_circle\", true)\n            .origin(\"panache\")\n            .name(tokenD.name + \"'s Panache\")\n            .attachTo(tokenD)\n            .tieToDocuments(args.length ? args[1].item : [])\n            .filter(\"ColorMatrix\", {\n                hue: 190\n            })\n            .scaleToObject(2 * tokenScale)\n            .waitUntilFinished(-1500)\n        .effect()\n            .file(\"jb2a.wind_stream.white\", true)\n            .origin(\"panache\")\n            .name(tokenD.name + \"'s Panache\")\n            .attachTo(tokenD)\n            .tieToDocuments(args.length ? args[1].item : [])\n            .scaleToObject(tokenScale)\n            .rotate(90)\n            .fadeOut(1500)\n            .mask()\n            .fadeIn(700)\n            .persist(true, { persistTokenPrototype: true })\n        .effect()\n            .file(assets[0], true)\n            .origin(\"panache\")\n            .name(tokenD.name + \"'s Panache\")\n            .attachTo(tokenD)\n            .tieToDocuments(args.length ? args[1].item : [])\n            .filter(\"ColorMatrix\", {\n                hue: 190\n            })\n            .fadeOut(3000)\n            .scaleToObject(2 * tokenScale)\n            .fadeIn(700)\n            .persist(true, { persistTokenPrototype: true })\n        .play()\n} else if (testArgs === \"off\") {\n    await Sequencer.EffectManager.endEffects({ origin: \"panache\", object: tokenD })\n}","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.rBz1gNwQkWu8TidN"},"cf":{"id":"temp_s3arecn2xs"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":null,"modifiedTime":1663589249622,"lastModifiedBy":"BHRwUaMa68cNSVcP"}}
{"_id":"7nrt0AppNUZDPmYk","name":"Humanoid Form","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/humanoid-form.webp","scope":"global","command":"// Original Author: EskieMoh#2969\n// Rebuilt by: MrVauxs#8622\n// To go back to your original form, click the Revert button at the top of the sheet that's been transformed.\n\nconst [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\n\nif (args[0] !== \"off\") {\n    let disguise\n    if (args[2].name || args[2].image || args[2].scale) {\n        if (args[2].bestiaryPack) {\n            args[2].image = game.modules.get(\"pf2e-tokens-bestiaries\") ? args[2].image : tokenD.document.texture.src\n        }\n        disguise = [\n                args[2].name ?? tokenD.name, \n                args[2].image ?? tokenD.document.texture.src, \n                args[2].scale ?? tokenD.document.texture.scaleX\n        ]\n    } else {\n        let tokenName = tokenD.name.toLowerCase().split(\"\").reverse().join(\"\")\n        tokenName = tokenName[0].toUpperCase() + tokenName.slice(1)\n\n        let disguiseDefault = [tokenName, tokenD.document.texture.src, tokenD.document.texture.scaleX]\n\n        if (Array.from(game.user.targets).length) {\n            disguiseDefault = [\n                Array.from(game.user.targets)[0].name, \n                Array.from(game.user.targets)[0].document.texture.src, \n                Array.from(game.user.targets)[0].document.texture.scaleX\n            ]\n        }\n\n        disguise = await warpgate.dialog([\n            {\n                type: 'text',\n                label: `🎩 ${game.i18n.localize(\"pf2e-jb2a-macros.macro.disguise.name\")}`,\n                options: `${disguiseDefault[0]}`\n            },\n            {\n                type: 'text',\n                label: `✨ ${game.i18n.localize(\"pf2e-jb2a-macros.macro.disguise.tokenImage\")} <u style=\"cursor: help;\" title=\"${game.i18n.localize(\"pf2e-jb2a-macros.macro.disguise.tokenImageHint\")}\">URL</u>`,\n                options: `${disguiseDefault[1]}`\n            },\n            {\n                type: 'text',\n                label: `📷 <u style=\"cursor: help;\" title=\"${game.i18n.localize(\"pf2e-jb2a-macros.macro.disguise.tokenScaleHint\")}\">${game.i18n.localize(\"pf2e-jb2a-macros.macro.disguise.tokenScale\")}</u>`,\n                options: `${disguiseDefault[2]}`\n            },\n        ],\n        game.i18n.localize(\"pf2e-jb2a-macros.macro.disguise.humanoidForm\"),\n        await game.i18n.localize(\"pf2e-jb2a-macros.macro.disguise.cast\"))\n\n        if (!disguise) return;\n\n        // No funny business with empty inputs.\n        disguise = disguise.map((x, index) => x.length === 0 ? disguiseDefault[index] : x)\n    }\n   \n    console.log(`PF2e x JB2A Macros | Transformed ${tokenD.name} into ${disguise[0]} with ${disguise[1]} image with scale of ${disguise[2]}.`)\n\n    new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n        .effect()\n            .origin(\"Humanoid Form\")\n            .name(\"Humanoid Form - Intro (Casting)\")\n            .attachTo(tokenD)\n            .file(\"jb2a.magic_signs.circle.02.transmutation.intro\", true)\n            .scaleToObject(1 * tokenScale)\n            .waitUntilFinished(-500)\n            .animateProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 3000, ease: \"easeOutExpo\"})\n        .effect()\n            .origin(\"Humanoid Form\")\n            .name(\"Humanoid Form - Intro (Transformation)\")\n            .file(disguise[1], true)\n            .scaleToObject(Number(disguise[2]))\n            .fadeIn(800)\n            .attachTo(tokenD)\n        /*.animation()\n            .on(tokenD)\n            .fadeOut(200)\n        .effect()\n            .origin(\"Humanoid Form\")\n            .name(\"Humanoid Form - Intro (Fade In)\")\n            .file(disguise[1], true)\n            .fadeIn(800)\n            .scaleToObject(Number(disguise[2]))\n            .duration(900)\n        .effect()\n            .origin(\"Humanoid Form\")\n            .name(\"Humanoid Form - Intro (Fade Out)\")\n            .from(tokenD)\n            .fadeOut(800)\n            .scaleToObject(Number(disguise[2]))\n            .waitUntilFinished(-50)\n        .animation()\n            .on(tokenD)\n            .opacity(1)*/\n        .thenDo(async () => {\n                let mutation = await warpgate.mutate(\n                    tokenD.document,\n                    {\n                        token: {\n                            name: disguise[0],\n                            texture: {\n                                src: disguise[1],\n                                scaleX: Number(disguise[2]),\n                                scaleY: Number(disguise[2])\n                            }\n                        }\n                    },\n                    {},\n                    {\n                        name: `Humanoid Form`,\n                        description: `This token has used the <a class=\"entity-link content-link\" draggable=\"true\" data-pack=\"pf2e.spells-srd\" data-id=\"2qGqa33E4GPUCbMV\"><i class=\"fas fa-suitcase\"></i> Humanoid Form</a> spell and has turned into ${disguise[0]}!`\n                    }\n                );\n                console.log(tokenD, mutation);\n                // See https://github.com/trioderegion/warpgate/issues/72\n                /* \n                await warpgate.event.trigger(\n                    warpgate.EVENT.REVERT,\n                    () => {\n                        new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n                        .effect()\n                            .origin(\"Humanoid Form\")\n                            .name(\"Humanoid Form - Exit\")\n                            .file(disguise[1], true)\n                            .scaleToObject(Number(disguise[2]))\n                            .attachTo(tokenD)\n                            .fadeOut(1000)\n                        .play()\n                    }\n                )\n                */\n            }\n        )\n        .play();\n} else if (args[0] === \"off\") {\n    Sequencer.EffectManager.endEffects({ origin: \"Humanoid Form\", object: tokenD })\n    warpgate.revert(tokenD.document, \"Humanoid Form\")\n}","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.0fUIZ0XifYGrR9oY"},"cf":{"id":"temp_xz48q3g0ej8"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.5.1","coreVersion":"10.291","createdTime":null,"modifiedTime":1671402705621,"lastModifiedBy":"SCUQoZ7lvePPTab6"}}
{"_id":"8M1lDOo679Hsj80q","name":"Aeon Stone","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/commodities/gems/gem-faceted-diamond-silver-.webp","scope":"global","command":"// Cannot be used standalone.\n\nconst tokenD = args[1].sourceToken\n\nif (!tokenD) return console.warn(\"PF2e Animations | Can't find token for Aeon Stone animation, exiting early.\");\n\nlet stone = \"jb2a.ioun_stones.01\"\nlet colors = {}\nlet stoneType = args[1].item.slug.replace(\"aeon-stone-\", \"\").replaceAll(\"-\", \" \").trim()\nlet stoneScale = 0.15\n\nif (args[0] === \"invested\") {\n\tswitch (stoneType) {\n\t\tcase \"clear spindle\": stone = \"jb2a.ioun_stones.01.white.regeneration\"; break;\n\t\tcase \"dull grey\": colors = { brightness: 0.9, saturate: -1 }; break;\n\t\tcase \"agate ellipsoid\": stone = \"jb2a.ioun_stones.02.purple.absorption\"; colors = { hue: 200 }; break;\n\t\tcase \"azure briolette\": stone = \"jb2a.ioun_stones.02.purple.absorption\"; colors = { hue: 670 }; break;\n\t\tcase \"black pearl\": stone = \"jb2a.ioun_stones.01.blue.insight\"; colors = { brightness: 0.2 }; break;\n\t\tcase \"orange prism\": stone = \"jb2a.ioun_stones.02.pink.fortitude\"; colors = { hue: 95 }; break;\n\t\tcase \"gold nodule\": stone = \"jb2a.ioun_stones.01.blue.awareness\"; colors = { hue: 525 }; break;\n\t\tcase \"clear quartz octagon\": stone = \"jb2a.ioun_stones.01.pink.protection\"; colors = { brightness: 1, saturate: -1 }; break;\n\t\tcase \"pearlescent pyramid\": stone = \"jb2a.ioun_stones.02.pink.fortitude\"; colors = { brightness: 1, saturate: -1 }; break;\n\t\tcase \"dusty rose prism\": stone = \"jb2a.ioun_stones.01.pink.fortitude\"; colors = { saturate: -0.2 }; break;\n\t\tcase \"lavender and green ellipsoid\": stone = \"jb2a.ioun_stones.02.purple.absorption\"; colors = { hue: 200 }; break;\n\t\tcase \"pale orange rhomboid\": stone = \"jb2a.ioun_stones.01.blue.strength\"; colors = { saturate: -0.2, hue: 200 }; break;\n\t\tcase \"pink rhomboid\": stone = \"jb2a.ioun_stones.01.blue.strength\"; colors = { hue: 490 }; break;\n\t\tcase \"tourmaline sphere\": stone = \"jb2a.ioun_stones.02.red.intellect\"; colors = { brightness: 1.6, hue: -60 }; break;\n\t\tcase \"western star\": stone = \"jb2a.twinkling_stars.points04.orange\"; stoneScale = 0.6; break;\n\t\tcase \"pale lavender ellipsoid\": stone = \"jb2a.ioun_stones.01.purple.absorption\"; colors = { brightness: 1.3 }; break;\n\t\tcase \"pearly white spindle\": stone = \"jb2a.ioun_stones.02.white.sustenance\"; break;\n\n\t\tdefault: console.warn(\"PF2e Animations | Cannot find '\" + stoneType + \"', picking a random ioun stone animation.\"); break;\n\t}\n\n\tawait Sequencer.Preloader.preloadForClients(stone)\n\n\tnew Sequence({moduleName: \"PF2e Animations\", softFail: true})\n\t\t.effect()\n\t\t\t.file(stone, true)\n\t\t\t.attachTo(tokenD, {followRotation: false})\n\t\t\t.scale(stoneScale)\n\t\t\t.spriteOffset({ y: 0.5 }, { gridUnits: true })\n\t\t\t.filter(\"ColorMatrix\", colors)\n\t\t\t.zeroSpriteRotation()\n\t\t\t.animateProperty(\"sprite\", \"position.y\", { from: 0, to: 0.5, duration: 3000, gridUnits: true })\n\t\t\t.animateProperty(\"sprite\", \"position.y\", { from: 0.5, to: 0, duration: 3000, gridUnits: true, fromEnd: true })\n\t\t\t.loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 6000})\n\t\t\t.loopProperty(\"sprite\", \"rotation\", { values: [0, -30, 0, 30], duration: 1500, pingPong: true})\n\t\t\t.scaleOut(0, 800)\n\t\t\t.scaleIn(0, 800)\n\t\t\t.tieToDocuments(args[1].item)\n\t\t\t.persist(true, {persistTokenPrototype: true})\n\t\t\t.name(`${args[1].sourceToken.name} - Aeon Stone - ${stoneType}`)\n\t\t\t.extraEndDuration(3000)\n\t\t.play()\n} else {\n\tawait Sequencer.EffectManager.endEffects({ name: `${args[1].sourceToken.name} - Aeon Stone - ${stoneType}`, object: tokenD })\n}","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.rBz1gNwQkWu8TidN"},"cf":{"id":"temp_uokxor3emwq"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.6.3","coreVersion":"10.291","createdTime":null,"modifiedTime":1673091286585,"lastModifiedBy":"SCUQoZ7lvePPTab6"}}
{"command":"if (args.length === 0) {\n    const actors = canvas.tokens.controlled.flatMap((token) => token.actor ?? []);\n    if (actors.length === 0 && game.user.character) actors.push(game.user.character);\n    if (actors.length === 0) {\n        const message = game.i18n.localize(\"PF2E.ErrorMessage.NoTokenSelected\");\n        return ui.notifications.error(message);\n    }\n\n    const ITEM_UUID = \"Compendium.pf2e-jb2a-macros.Actions.slQlwROqkytVGKKk\"; // Action Counter\n    const source = (await fromUuid(ITEM_UUID)).toObject();\n    source.flags = mergeObject(source.flags ?? {}, { core: { sourceId: ITEM_UUID } });\n\n    for (const actor of actors) {\n        const existing = actor.itemTypes.effect.find((e) => e.flags.core?.sourceId === ITEM_UUID);\n        if (existing) {\n            await existing.delete();\n        } else {\n            await actor.createEmbeddedDocuments(\"Item\", [source]);\n        }\n    }\n    return;\n};\n\nif (args[0] === \"off\") return;\n\nconst [token, tokenScale] = await pf2eAnimations.macroHelpers(args)\n\nfunction amountOfImages() { \n    return Sequencer.EffectManager.getEffects({origin: args[1].item.uuid}).length\n};\n\nHooks.off(\"preUpdateItem\", pf2eAnimations.hooks.actionCounter ?? 123);\n\nasync function updateImages(data, changes) {\n    if (!(changes?.system?.badge?.value)) return;\n    if (!(data.name === \"Action Counter\")) return;\n    \n    let badgeValue = changes.system.badge.value;\n\n    pf2eAnimations.debug(\"Action Counter\", {badgeValue, imagesOnScreen: amountOfImages()})\n\n    if (badgeValue < amountOfImages()) {\n        Sequencer.EffectManager.endEffects(\n            Sequencer.EffectManager.getEffects({origin: data.uuid}).at(-1).data\n        )\n    } else if (badgeValue > amountOfImages()) {\n        new Sequence({moduleName: \"PF2e Animations\", softFail: true}).addSequence(actionCounter(amountOfImages(), data)).play()\n    }\n}\n\nconst actionCounter = (number, origin) => new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n        .effect()\n        .name(token.name + \" Action \" + (1 + number))\n        .file(\"modules/pf2e-jb2a-macros/assets/actions/one.png\", true)\n        .origin(origin.uuid)\n        .fadeIn(1000)\n        .animateProperty(\"sprite\", `position.y`, \n            {\n                from: 0.3, \n                to: 0, \n                gridUnits: true, \n                duration: 1000 \n            }\n        )\n        .animateProperty(\"sprite\", `position.y`, \n            {\n                from: 0, \n                to: -0.3, \n                gridUnits: true,\n                duration: 1000, \n                fromEnd: true\n            }\n        )\n        .tieToDocuments([origin])\n        .fadeOut(500)\n        .attachTo(token, \n            { \n                align: \"top\", \n                edge: \"outer\", \n                offset: { x: [-0.25, 0, 0.25].at(number) }, \n                gridUnits: true, \n                followRotation: false \n            }\n        )\n        .persist(true)\n        .scaleToObject(0.2)\n        .aboveLighting()\n        .opacity(0.8)\n        .wait(250);\n\nconst seq = new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n\nseq.thenDo(async () => {\n    // hides the ugly icons in favour of our own\n    token.actor.items.find(x => x.uuid === args[1].item.uuid).update({\n            system: {\n                rules: []\n            }\n        }\n    )\n})\n\nfor (let i = 0; i < 3; i++) {\n    seq.addSequence(actionCounter(i, args[1].item))\n}\n\nseq.thenDo(async () => {\n    pf2eAnimations.hooks.actionCounter = Hooks.on(\"preUpdateItem\", updateImages);\n})\n\nseq.play()","name":"Action Counter","type":"script","img":"systems/pf2e/icons/actions/TwoThreeActions.webp","author":"SCUQoZ7lvePPTab6","scope":"global","ownership":{"default":0,"SCUQoZ7lvePPTab6":3},"flags":{"advanced-macros":{"runAsGM":false,"runForEveryone":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.qu0VlJMxVtF4fzdE"}},"_stats":{"systemId":"pf2e","systemVersion":"4.6.8","coreVersion":"10.291","createdTime":1671749626641,"modifiedTime":1674775091714,"lastModifiedBy":"SCUQoZ7lvePPTab6"},"folder":null,"sort":0,"_id":"9OXIrvvLr3djpsxE"}
{"name":"Tanglefoot","type":"script","author":"SCUQoZ7lvePPTab6","img":"systems/pf2e/icons/spells/tanglefoot.webp","scope":"global","command":"// Cannot be used standalone\n\nconst [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\nlet target = Array.from(game.user.targets)[0]\n\nconst assets = game.modules.get(\"JB2A_DnD5e\")?.active\n    ? [\"jb2a.eldritch_blast.purple\", { hue: 180 }, \"jb2a.entangle.green\"]\n    : [\"jb2a.eldritch_blast.lightgreen\", {}, \"jb2a.entangle.green02\"];\n\nif (typeof args[0] === \"string\") {\n    if (args[0] == \"on\") {\n        new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n            .effect()\n            .name(\"Tanglefoot\")\n            .scaleToObject(1.2)\n            .atLocation(tokenD)\n            .fadeOut(500)\n            .attachTo(tokenD)\n            .fadeIn(500)\n            .persist(true, { persistTokenPrototype: true })\n            .file(\"jb2a.entangle.green\", true)\n            .play()\n    } else if (args[0] == \"off\") {\n        await Sequencer.EffectManager.endEffects({ name: \"Tanglefoot\", object: tokenD })\n    }\n} else {\n    new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n        .effect()\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .file(assets[0], true)\n            .filter(\"ColorMatrix\", assets[1])\n            .waitUntilFinished(-3000)\n        .effect()\n            .scaleToObject(1.2)\n            .atLocation(target)\n            .attachTo(target)\n            .fadeOut(500)\n            .repeats(2)\n            .fadeIn(500)\n            .file(assets[2], true)\n        .play()\n}","flags":{"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"},"advanced-macros":{"runAsGM":false,"runForEveryone":false,"runForSpecificUser":""},"cf":{"id":"temp_6gsujam4gp6"}},"ownership":{"default":0,"SCUQoZ7lvePPTab6":3},"_stats":{"systemId":"pf2e","systemVersion":"4.6.8","coreVersion":"10.291","createdTime":1674740296449,"modifiedTime":1674740311291,"lastModifiedBy":"SCUQoZ7lvePPTab6"},"folder":null,"sort":0,"_id":"AtmVxd86VXE3PhQf"}
{"name":"Open AA","type":"script","scope":"global","author":"SCUQoZ7lvePPTab6","img":"icons/svg/door-closed-outline.svg","command":"Hooks.call('AutomaticAnimations.Open.Menu.New')","ownership":{"default":0,"SCUQoZ7lvePPTab6":3},"flags":{"advanced-macros":{"runAsGM":false,"runForEveryone":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.mG8E4zXZSHJC5YFy"},"cf":{"id":"temp_9hsvsxrbtvj"}},"_stats":{"systemId":"pf2e","systemVersion":"4.4.2","coreVersion":"10.291","createdTime":1665496217402,"modifiedTime":1670341210278,"lastModifiedBy":"SCUQoZ7lvePPTab6"},"folder":null,"sort":0,"_id":"AxZgxsk91WiYzQQo"}
{"name":"Brain Drain","type":"script","scope":"global","author":"SCUQoZ7lvePPTab6","img":"systems/pf2e/icons/spells/brain-drain.webp","command":"// Original Author: @Trueprophet#9165\n// Modified by: @MrVauxs#8622\n\nlet targets = Array.from(game.user.targets);\nlet [tokenD] = await pf2eAnimations.macroHelpers(args)\n\nif (!(args && args[2] && args[2].length)) args[2] = {color: \"orange\"} // or \"orange\"\n\nlet files = args[2]?.color === \"purple\" ? [\n    \"jb2a.divine_smite.caster.reversed.purplepink\",\n    \"jb2a.eldritch_blast.purple\",\n    \"jb2a.eyes.01.bluegreen.single.2\",\n    \"jb2a.eyes.01.bluegreen.single.2\",\n    \"jb2a.energy_strands.range.standard.purple\"\n] : [\n    \"jb2a.divine_smite.caster.reversed.orange\",\n    \"jb2a.eldritch_blast.yellow\",\n    \"jb2a.eyes.01.orangeyellow.single.2\",\n    \"jb2a.eyes.01.orangeyellow.single.2\",\n    \"jb2a.energy_strands.range.standard.orange\"\n]\n\nlet cyanToPurple = {\n    hue: 90\n}\n\nfor (let target of targets) {\n    new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n        .effect()\n            .file(files[0], true)\n            .fadeIn(200)\n            .atLocation(tokenD)\n            .playbackRate(3)\n            .scale(0.75)\n            .fadeOut(50)\n        .effect()\n            .file(files[1], true)\n            .fadeIn(200)\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeOut(200)\n            .wait(1000)\n        .effect()\n            .file(files[2], true)\n            .filter(\"ColorMatrix\", args[2]?.color === \"purple\" ? cyanToPurple : {})\n            .atLocation(tokenD)\n            .scale(0.3)\n            .scaleIn(0, 500, {ease: \"easeInCubic\", Delay: 100})\n            .moveTowards(target, {rotate:false, ease:\"easeInOutQuart\"})\n            .moveSpeed(500)\n            .fadeOut(200)\n            .waitUntilFinished(-120)\n        .effect()\n            .file(files[3], true)\n            .filter(\"ColorMatrix\", args[2]?.color === \"purple\" ? cyanToPurple : {})\n            .atLocation(target, {offset: {x: 0, y: -25}})\n            .fadeIn(100)\n            .scaleToObject(0.5)\n            .animateProperty(\"spriteContainer\", \"scale.x\", {from:0, to: 2, duration: 700})\n            .animateProperty(\"spriteContainer\", \"scale.y\", {from:0, to: 2, duration: 700})\n            .fadeOut(50)\n            .waitUntilFinished(-5000) \n        .effect()\n            .file(files[4], true)\n            .scale(0.8, 1)\n            .fadeIn(50)\n            .atLocation(target)\n            .stretchTo(tokenD)\n            .repeats(7, 300, 400)\n            .randomizeMirrorY()\n            .fadeOut(50)\n        .play()\n};","ownership":{"default":0,"SCUQoZ7lvePPTab6":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.r8oELkjUjXhMEDKw"},"cf":{"id":"temp_7rg2mnzpvsh"}},"_stats":{"systemId":"pf2e","systemVersion":"4.3.0","coreVersion":"10.288","createdTime":1666910964779,"modifiedTime":1666912641337,"lastModifiedBy":"SCUQoZ7lvePPTab6"},"folder":null,"sort":0,"_id":"BCeeFyLkQhbiqF4b"}
{"_id":"CtkjmTtEYfMPbtm4","name":"Heal","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/heal.webp","scope":"global","command":"// Cannot be used standalone.\nlet diceNumber = args[0].rolls[0].terms[0].number\nlet caster = args[1].sourceToken\nlet spellTarget = Array.from(game.user.targets)[0]\nlet doNotTargetCaster = false\n\nfunction getSpellVariant() {\n    const spellVariants = args[0]?.item?.overlays?.contents;\n    if (!spellVariants) return ui.notifications.error(\"No variants found! Check if you have updated your Heal spell to the newest version. It's been a while.\")\n    const originChatMessage = game.messages.filter(message => !message.isRoll && message.item?.original?.id === args[0].item.id).pop();\n    const chosenVariantId = originChatMessage.item.appliedOverlays.get('override');\n    let spellVariant = spellVariants.find(variant => variant._id === chosenVariantId);\n    if(spellVariant) {\n        if(spellVariant.system.time.value === \"1\") {\n            oneActionHeal();\n        } else if(spellVariant.system.time.value === \"2\") {\n            twoActionHeal()\n        } else if(spellVariant.system.time.value === \"3\") {\n            d3.render(true);\n        }\n    } else {\n        console.log('No spell variants found.')\n    }\n}\n\nfunction getModeOfBeing(actor) {\n    let modeOfBeing = actor.modeOfBeing;\n    if(actor.traits.find(trait => trait === 'automaton') || actor.ancestry?.name === 'Poppet') modeOfBeing = 'living';\n    if(actor.traits.find(trait => trait === 'dhampir')) modeOfBeing = 'undead';\n\n    return modeOfBeing;\n}\n\nlet d3 = new Dialog({\n    title: \"Heal\",\n    content: `<p>Do you want to target yourself?</p>`,\n    buttons: {\n    one: {\n    label: \"Yes\",\n    callback: () => {\n        doNotTargetCaster = false\n        threeActionHeal()\n        }\n    },\n    two: {\n    label: \"No\",\n    callback: () => {\n        doNotTargetCaster = true\n        threeActionHeal()\n        }\n    }\n    },\n    default: \"No\"\n})\n\nfunction main(){\n    if(caster != undefined){\n        getSpellVariant();\n    }else{\n        ui.notifications.error(`You must select the token of the caster!`)\n        return;\n    }    \n}\nmain();\n\n//Defining unique behavior for each kind of effect\nfunction oneActionHeal(){\n    //error checking for multiple targets\n    if (game.user.targets.size!= 1){\n        ui.notifications.error(\"Select only one target!\")\n        return;\n    }\n    if(canvas.grid.measureDistance(caster,spellTarget) < 7.5){\n        console.log(\"Close enough to touch!\")\n        // checks whether the target is undead or not\n        oneActionHealAnimation()\n    } else {\n        console.log(`Too far to touch!`); \n        ui.notifications.error(`Your target is further than touch distance away! Try again.`);\n        return;\n    }    \n}\n\nfunction twoActionHeal(){\n    //error checking for multiple targets\n    if (game.user.targets.size!= 1){\n        ui.notifications.error(\"Select only one target!\")\n        return;\n    }\n    if(canvas.grid.measureDistance(caster,spellTarget) <= 30){\n        console.log(\"Within 30 feet!\")\n        // checks whether the target is undead or not\n        twoActionHealAnimation()\n    }else{\n        console.log(`Farther than 30 feet!`); \n        ui.notifications.error(`Your target is further than 30 feet away! Try again.`);\n        return;\n    }\n}\n\nfunction threeActionHeal(){\n    //divide up all tokens within range into an array for living and an array for undead\n    let tokensOnMap = Array.from(canvas.tokens.placeables)\n    let tokensInRange = tokensOnMap.filter(distance => canvas.grid.measureDistance(distance,caster)<=30)\n    let undeadTokensInRange = []\n    let livingTokensInRange = []\n\n    for(let i=0;i<tokensInRange.length;i++){\n        if(getModeOfBeing(tokensInRange[i].actor) === 'undead'){\n            undeadTokensInRange.push(tokensInRange[i])\n        }else if(getModeOfBeing(tokensInRange[i].actor) === 'living'){\n            if (doNotTargetCaster) {\n                if (!(caster === tokensInRange[i])) livingTokensInRange.push(tokensInRange[i])\n            } else livingTokensInRange.push(tokensInRange[i])\n        } \n    }\n    console.log(undeadTokensInRange)\n    console.log(livingTokensInRange)\n    new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n        .effect()\n            .atLocation(caster)\n            .randomRotation()\n            .size(14, {gridUnits: true})\n            .file(\"jb2a.healing_generic.burst.greenorange\", true)\n            .waitUntilFinished(-1500)\n        .play()\n    for(let i=0;i<undeadTokensInRange.length;i++){\n        new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n            .effect()\n                .atLocation(undeadTokensInRange[i])\n                .randomRotation()\n                .scaleToObject(1.25)\n                .file(\"jb2a.divine_smite.target.greenyellow\", true)\n            .play()\n    }\n    for(let i=0;i<livingTokensInRange.length;i++){\n        new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n            .effect()\n                .atLocation(livingTokensInRange[i])\n                .randomRotation()\n                .scaleToObject(1.25)\n                .file(\"jb2a.healing_generic.200px.green\", true)\n            .play()\n    }\n}\n\n//Defining animations for each kind of effect\nfunction oneActionHealAnimation(){\n    if(getModeOfBeing(spellTarget.actor) === 'undead'){\n    //trigger energy strand from caster to target, then trigger healing burst on target\n    new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n        .effect()\n            .atLocation(spellTarget)\n            .randomRotation()\n            .scaleToObject(1.25)\n            .file(\"jb2a.divine_smite.target.greenyellow\", true)\n        .play()\n    }else if (getModeOfBeing(spellTarget.actor) === 'living') {\n    //trigger energy strand from caster to target, then trigger damaging burst on target\n    new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n        .effect()\n            .atLocation(spellTarget)\n            .randomRotation()\n            .scaleToObject(1.25)\n            .file(\"jb2a.healing_generic.200px.green\", true)\n        .play()\n    }\n}\nfunction twoActionHealAnimation(){\n    if(getModeOfBeing(spellTarget.actor) === 'undead'){\n        //trigger energy strand from caster to target, then trigger damaging burst on target\n        new Sequence({moduleName: \"PF2e Animations\", softFail: true})    \n            .effect()\n                .atLocation(caster)\n                .stretchTo(spellTarget)\n                .file(\"jb2a.energy_strands.range.standard.dark_purple\", true)\n                .waitUntilFinished(-1000)\n            .effect()\n                .atLocation(spellTarget)\n                .randomRotation()\n                .scaleToObject(1.25)\n                .file(\"jb2a.divine_smite.target.greenyellow\", true)\n            .play()\n    }else if(getModeOfBeing(spellTarget.actor) === 'living') {\n        //trigger energy strand from caster to target, then trigger healing burst on target\n        new Sequence({moduleName: \"PF2e Animations\", softFail: true})    \n            .effect()\n                .atLocation(caster)\n                .stretchTo(spellTarget)\n                .file(\"jb2a.energy_strands.range.standard.dark_green\", true)\n                .waitUntilFinished(-1000)\n            .effect()\n                .atLocation(spellTarget)\n                .randomRotation()\n                .scaleToObject(1.25)\n                .file(\"jb2a.healing_generic.200px.green\", true)\n            .play()\n    }\n}\nfunction threeActionHealAnimation(){\n    \n}","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false},"exportSource":{"world":"hogwarts","system":"pf2e","coreVersion":"9.269","systemVersion":"3.10.2.11602"},"core":{"sourceId":"Macro.1wpIPbvbCvQaueft"},"cf":{"id":"temp_6gsujam4gp6"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.2.6","coreVersion":"10.288","createdTime":null,"modifiedTime":1665873484532,"lastModifiedBy":"SCUQoZ7lvePPTab6"}}
{"_id":"E1eKr1GPbMu11gDZ","name":"Quickened","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/conditions/quickened.webp","scope":"global","command":"const [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\n\nlet testArgs\n\nif (!args.length) testArgs = await Sequencer.EffectManager.getEffects({ origin: \"quickened\", source: tokenD }).length ? \"off\" : \"on\";\n\nconst assets = game.modules.get(\"JB2A_DnD5e\")?.active\n    ? [\"jb2a.token_border.circle.static.blue.003\"]\n    : [\"jb2a.token_border.circle.static.blue.003\"];\n\nif (args[0] == \"on\" || testArgs === \"on\") {\n    new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n        .effect()\n            .file(\"jb2a.wind_stream.white\", true)\n            .origin(\"quickened\")\n            .name(\"Quickened\" + tokenD.name)\n            .attachTo(tokenD)\n            .tieToDocuments(args.length ? args[1].item : [])\n            .scaleToObject(tokenScale)\n            .rotate(90)\n            .tint(\"#00FFFF\")\n            .fadeOut(1500)\n            .mask()\n            .fadeIn(700)\n            .persist(true, { persistTokenPrototype: true })\n        .effect()\n            .file(assets[0], true)\n            .origin(\"quickened\")\n            .name(\"Quickened\" + tokenD.name)\n            .attachTo(tokenD)\n            .tieToDocuments(args.length ? args[1].item : [])\n            .fadeOut(3000)\n            .scaleToObject(2 * tokenScale)\n            .fadeIn(700)\n            .persist(true, { persistTokenPrototype: true })\n        .play()\n} else if (testArgs === \"off\") {\n    await Sequencer.EffectManager.endEffects({ origin: \"quickened\", object: tokenD })\n}","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.rBz1gNwQkWu8TidN"},"cf":{"id":"temp_s3arecn2xs"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.2.5","coreVersion":"10.288","createdTime":null,"modifiedTime":1665450216677,"lastModifiedBy":"SCUQoZ7lvePPTab6"}}
{"name":"Blur","type":"script","author":"SCUQoZ7lvePPTab6","img":"systems/pf2e/icons/spells/blur.webp","scope":"global","command":"const [token] = pf2eAnimations.macroHelpers(args)\nconst tokenMagic = game.settings.get(\"pf2e-jb2a-macros\", \"tmfx\")\nif (!args.length) args[0] = tokenMagic ? TokenMagic.hasFilterId(token, \"Blur\") ? \"off\" : \"on\" : null\n\nconst params =\n[{\n    filterType: \"blur\",\n    filterId: \"Blur\",\n    padding: 10,\n    quality: 4.0,\n    blur: 0,\n    blurX: 0,\n    blurY: 0,\n    animated:\n    {\n        blurX: \n        { \n           animType: \"syncCosOscillation\", \n           loopDuration: 500,\n           val1: 0.5, \n           val2: 6\n        },\n        blurY: \n        {\n           animType: \"syncCosOscillation\", \n           loopDuration: 750, \n           val1: 0.5,\n           val2: 6\n        }\n    }\n}];\n\npf2eAnimations.applyTokenMagic(args, params);","flags":{"core":{"sourceId":"Compendium.tokenmagic.tmMacros.CdFhWPKBMb5wj7cM"},"advanced-macros":{"runAsGM":false,"runForEveryone":false,"runForSpecificUser":""}},"ownership":{"default":0,"SCUQoZ7lvePPTab6":3},"_stats":{"systemId":"pf2e","systemVersion":"4.6.8","coreVersion":"10.291","createdTime":1675001858887,"modifiedTime":1675006069303,"lastModifiedBy":"SCUQoZ7lvePPTab6"},"folder":null,"sort":0,"_id":"FBgkeey7TaMLkegd"}
{"name":"Spiritual Weapon","type":"script","scope":"global","author":"SCUQoZ7lvePPTab6","img":"systems/pf2e/icons/spells/spiritual-weapon.webp","command":"/* Spiritual Weapon Animations for PF2e\n * The collect target part at the beginning of the macro is made by\n * MIT License (C) 2022 Matthew Haentschke\n * The rest is modified heavily by Jules | JB2A\n * And then heavily modified again by MrVauxs, perhaps to the point of this whole section not being really eligible.\n * \n * CANNOT be used standalone\n */\nlet [token, tokenScale, allTargets, hitTargets, targets, target, origin, actor] = await pf2eAnimations.macroHelpers(args)\n\nif (Object.keys(args[2]).length > 0) {\n    file = args[2].weapon ?? \"jb2a.spiritual_weapon.mace.spectral.blue\";\n    entry = args[2].entry ?? (file.startsWith(\"jb2a\") ? `jb2a.impact.003.${file.split(\".\").at(-1)}` : \"jb2a.impact.003.blue\");\n    exit = args[2].exit ?? (file.startsWith(\"jb2a\") ? `jb2a.misty_step.02.${file.split(\".\").at(-1)}` : \"jb2a.misty_step.02.blue\");\n    duration = Number(args[2].duration) ?? (3 * 60 * 1000);\n}\n\ntarget = allTargets[0]\n\nasync function spiritualWeaponIN() {\n    let position = await warpgate.crosshairs.show(\n        {\n            rememberControlled: true,\n            icon: Sequencer.Database.getEntry(file).file,\n            drawOutline: false,\n            label: args[1]?.item?.name ?? \"Spiritual Weapon\"\n        }\n    );\n    if (position.cancelled) return;\n\n    new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n        .effect()\n            .file(entry, true)\n            .atLocation(position)\n            .origin(origin)\n            .waitUntilFinished(-800)\n        .effect()\n            .file(file, true)\n            .atLocation(position)\n            .origin(origin)\n            .duration(duration)\n            .name(`${token.actor.name} - Spiritual Weapon`)\n            .scaleOut(0, (duration / 4))\n            .fadeOut(duration / 2)\n        .play()\n}\n\nasync function spiritualWeaponOUT() {\n    let persistentEffect = Sequencer.EffectManager.getEffects({ origin })[0];\n    new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n        .effect()\n            .file(exit, true)\n            .atLocation(persistentEffect, { cacheLocation: true })\n            .scale(0.4)\n            .waitUntilFinished(-4100)\n            .thenDo(async function () {\n                Sequencer.EffectManager.endEffects({ origin })\n                await spiritualWeaponIN()\n            })\n        .play()\n}\n\nif (!Sequencer.EffectManager.getEffects({ origin }).length) {\n    await spiritualWeaponIN()\n}\nelse {\n    await spiritualWeaponOUT()\n}","ownership":{"default":0,"SCUQoZ7lvePPTab6":3},"flags":{"advanced-macros":{"runAsGM":false,"runForEveryone":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.XnnGIg5MDfYBm7of"}},"_stats":{"systemId":"pf2e","systemVersion":"4.6.8","coreVersion":"10.291","createdTime":1671202932236,"modifiedTime":1673943731230,"lastModifiedBy":"SCUQoZ7lvePPTab6"},"folder":null,"sort":0,"_id":"FjmWOtfj64kCFydm"}
{"_id":"IaIxaOh0D7roiQz1","name":"Protective Ward","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/protective-ward.webp","scope":"global","command":"const [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\n\nif (!args.length) args[0] = await Sequencer.EffectManager.getEffects({ origin: \"protective-ward-aura\", source: tokenD }).length ? \"off\" : \"on\";\n\nconst auraRadius = tokenD.auras.get(\"aura-effect-bless\")?.radius\nconst gridUnits = 1.5 + 3 * (isNaN(auraRadius) ? 1 : auraRadius / 5)\n\nif (args[0] == \"on\") {\n    new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n        .effect()\n            .file(\"jb2a.shield.01.complete.01.yellow\", true)\n            .attachTo(tokenD)\n            .origin(\"protective-ward-aura\")\n            .name(\"Pf2e x JB2A Aura - Protective Ward\")\n            .persist()\n            .opacity(0.8)\n            .size(4.5, { gridUnits: true })\n        .play()\n} else if (args[0] == \"off\") {\n    await Sequencer.EffectManager.endEffects({ origin: \"protective-ward-aura\", source: tokenD })\n}","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.rBz1gNwQkWu8TidN"},"cf":{"id":"temp_o2l5kjd1mwj"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.0-beta3","coreVersion":"10.284","createdTime":null,"modifiedTime":1662722216974,"lastModifiedBy":"BHRwUaMa68cNSVcP"}}
{"_id":"JVtjNvoMoxsfddd7","name":"Illusory Disguise","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/illusory-disguise.webp","scope":"global","command":"// Original Author: EskieMoh#2969\n// Remastered by: MrVauxs#8622\n\nconst [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\n\nlet testArgs\n\nif (!args.length) testArgs = await Sequencer.EffectManager.getEffects({ origin: \"Illusory Disguise\", source: tokenD }).length ? \"off\" : \"on\";\n\nif (args[0] === \"on\" || testArgs === \"on\") {\n    let tokenName = tokenD.name.toLowerCase().split(\"\").reverse().join(\"\")\n    tokenName = tokenName[0].toUpperCase() + tokenName.slice(1)\n\n    let disguiseDefault = [tokenName, tokenD.document.texture.src, tokenD.document.texture.scaleX, false]\n\n    if (Array.from(game.user.targets).length) {\n        disguiseDefault = [\n            Array.from(game.user.targets)[0].name, \n            Array.from(game.user.targets)[0].document.texture.src, \n            Array.from(game.user.targets)[0].document.texture.scaleX\n        ]\n    }\n    \n    let disguise = await warpgate.dialog([\n        {\n            type: 'text',\n            label: `🎩 ${game.i18n.localize(\"pf2e-jb2a-macros.macro.disguise.name\")}`,\n            options: `${disguiseDefault[0]}`\n        },\n        {\n            type: 'text',\n            label: `✨ ${game.i18n.localize(\"pf2e-jb2a-macros.macro.disguise.tokenImage\")} <u style=\"cursor: help;\" title=\"${game.i18n.localize(\"pf2e-jb2a-macros.macro.disguise.tokenImageHint\")}\">URL</u>`,\n            options: `${disguiseDefault[1]}`\n        },\n        {\n            type: 'text',\n            label: `📷 <u style=\"cursor: help;\" title=\"${game.i18n.localize(\"pf2e-jb2a-macros.macro.disguise.tokenScaleHint\")}\">${game.i18n.localize(\"pf2e-jb2a-macros.macro.disguise.tokenScale\")}</u>`,\n            options: `${disguiseDefault[2]}`\n        },\n        {\n            type: 'checkbox',\n            label: `<u style=\"cursor: help;\" title=\"${game.i18n.localize(\"pf2e-jb2a-macros.macro.disguise.invisibleHint\")}\">${game.i18n.localize(\"pf2e-jb2a-macros.macro.disguise.invisible\")}</u>`,\n            options: true,\n            value: true\n        },\n    ],\n    game.i18n.localize(\"pf2e-jb2a-macros.macro.disguise.illusoryDisguise\"),\n    game.i18n.localize(\"pf2e-jb2a-macros.macro.disguise.cast\"))\n\n    if (!disguise) return;\n\n    if (args.length === 1) ui.notifications.info(\"PF2e x JB2A Macros | You are not using the Active Effect version of this spell, thus requiring you to remove the effect by going into the <i class='fas fa-film'></i> Sequencer Effect Manager.\");\n\n    // No funny business with empty inputs.\n    disguise = disguise.map((x, index) => x.length === 0 ? disguiseDefault[index] : x)\n   \n    console.log(`Transformed ${tokenD.name} into ${disguise[0]} with ${disguise[1]} image with scale of ${disguise[2]}.${disguise[3] ? \"The original token has been turned invisible.\" : \"\"}`)\n\n    new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n        .effect()\n            .file(\"jb2a.markers.circle_of_stars.blue\", true)\n            .atLocation(tokenD)\n            .delay(200)\n            .duration(8000)\n            .fadeIn(500)\n            .fadeOut(7500)\n            .scaleToObject(1.3 * Math.min(tokenD.document.texture.scaleX, 1))\n            .attachTo(tokenD)\n            .tieToDocuments(args.length ? args[1].item : [])\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 60000 })\n            .zIndex(1)\n        .effect()\n            .file(\"jb2a.sneak_attack.blue\", true)\n            .atLocation(tokenD)\n            .delay(200)\n            .scaleToObject(2 * Math.min(tokenD.document.texture.scaleX, 1))\n            .attachTo(tokenD)\n            .tieToDocuments(args.length ? args[1].item : [])\n            .playbackRate(1)\n            .zIndex(2)\n            .waitUntilFinished(-1000)\n        .animation()\n            .playIf(disguise[3])\n            .fadeOut(500)\n            .on(tokenD)\n        .effect()\n            .file(disguise[1], true)\n            .origin(\"Illusory Disguise\")\n            .name(\"Illusory Disguise\")\n            .scaleToObject(Number(disguise[2]))\n            .opacity(0.8)\n            .scaleIn(0, 200, { ease: \"easeOutCubic\" })\n            .attachTo(tokenD)\n            .tieToDocuments(args.length ? args[1].item : [])\n            .persist(true, { persistTokenPrototype: true })\n            .fadeIn(760)\n            .fadeOut(2500)\n        .effect()\n            .file(\"jb2a.particles.outward.purple.02.03\", true)\n            .origin(\"Illusory Disguise\")\n            .name(\"Illusory Disguise - Particles\")\n            .delay(200)\n            .scaleToObject(1.5 * Math.min(1, Number(disguise[2])))\n            .zIndex(2)\n            .scaleIn(0, 200, { ease: \"easeOutCubic\" })\n            .attachTo(tokenD)\n            .tieToDocuments(args.length ? args[1].item : [])\n            .persist(true, { persistTokenPrototype: true })\n            .fadeIn(760)\n            .fadeOut(2500)\n            .waitUntilFinished(-2500)\n        .animation()\n            .playIf(disguise[3])\n            .fadeIn(2500)\n            .on(tokenD)\n        .play();\n} else if (testArgs === \"off\") {\n    Sequencer.EffectManager.endEffects({ origin: \"Illusory Disguise\", object: tokenD })\n}","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.0fUIZ0XifYGrR9oY"},"cf":{"id":"temp_s3arecn2xs"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.3.4","coreVersion":"10.288","createdTime":null,"modifiedTime":1667658399229,"lastModifiedBy":"SCUQoZ7lvePPTab6"}}
{"_id":"KHYzBiPwMIY6WfYa","name":"Dancing Lights","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/magic/light/explosion-star-glow-yellow.webp","scope":"global","command":"const [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\n\nconst options = await warpgate.menu(\n\t\t\t{\n\t\t\t\tinputs: [\n\t\t\t\t\t{\n                        type: \"info\",\n                        label: game.i18n.localize(\"pf2e-jb2a-macros.macro.summoning.player.dancingLights\")\n                    },\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\tlabel: game.i18n.localize(\"pf2e-jb2a-macros.macro.summoning.player.amount\"),\n\t\t\t\t\t\toptions: 4\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: \"select\",\n\t\t\t\t\t\tlabel: \"Color\",\n\t\t\t\t\t\toptions: [\n                            { html: \"Blue-Teal\",     value: \"Blue-Teal\",         },\n                            { html: \"Blue-Yellow\",   value: \"Blue-Yellow\",       },\n                            { html: \"Green\",         value: \"Green\",             },\n                            { html: \"Pink\",          value: \"Pink\",              },\n                            { html: \"Purple-Green\",  value: \"Purple-Green\",      },\n                            { html: \"Red\",           value: \"Red\",               },\n                            { html: \"Yellow\",        value: \"Yellow\",            },\n                        ]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"Summon Anything\"\n\t\t\t}\n\t\t)\n\nif (!options.buttons) return;\n\nlet importedActor = await fromUuid(\"Compendium.pf2e-jb2a-macros.Actors.teCoIt8sjArsIl4D\");\n\nimportedActor.img = `modules/${game.modules.get(\"jb2a_patreon\") ? \"jb2a_patreon\" : \"JB2A_DnD5e\"}/Library/Cantrip/Dancing_Lights/DancingLights_01_${options.inputs[2].replace(\"-\", \"\")}_Thumb.webp`;\nimportedActor.prototypeToken.texture.src = `modules/${game.modules.get(\"jb2a_patreon\") ? \"jb2a_patreon\" : \"JB2A_DnD5e\"}/Library/Cantrip/Dancing_Lights/DancingLights_01_${options.inputs[2].replace(\"-\", \"\")}_200x200.webm`;\n\nawait pf2eAnimations.playerSummons({\n    args,\n    importedActor,\n    spawnArgs: {options: {duplicates: Math.min(Math.max(1, options.inputs[1]), 4)}}\n})","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"exportSource":{"world":"hogwarts","system":"pf2e","coreVersion":"9.269","systemVersion":"3.10.2.11602"},"core":{"sourceId":"Macro.1wpIPbvbCvQaueft"},"cf":{"id":"temp_3t4j7cyld29"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.6.8","coreVersion":"10.291","createdTime":null,"modifiedTime":1675293976181,"lastModifiedBy":"SCUQoZ7lvePPTab6"}}
{"_id":"KXoNTv1YkjM3D9NI","name":"Soul Siphon","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/soul-siphon.webp","scope":"global","command":"const [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\nlet target = Array.from(game.user.targets)[0]\nnew Sequence({moduleName: \"PF2e Animations\", softFail: true})\n    .effect()\n        .atLocation(token)\n        .stretchTo(target)\n        .origin(\"soul siphon\")\n        .name(\"Soul Siphon\")\n        .file(\"jb2a.energy_strands.range.standard.dark_red\", true)\n        .waitUntilFinished(-1500)\n    .effect()\n        .atLocation(target)\n        .stretchTo(token)\n        .origin(\"soul siphon\")\n        .name(\"Soul Siphon\")\n        .file(\"jb2a.energy_strands.range.standard.dark_red\", true)\n        .waitUntilFinished(-1500)\n    .effect()\n        .randomRotation()\n        .scaleToObject(2)\n        .origin(\"soul siphon\")\n        .name(\"Soul Siphon\")\n        .atLocation(token)\n        .file(\"jb2a.energy_strands.in.red.01.2\", true)\n    .play()","folder":null,"sort":0,"flags":{"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"},"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_7rg2mnzpvsh"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.0-beta3","coreVersion":"10.284","createdTime":null,"modifiedTime":1662742190007,"lastModifiedBy":"BHRwUaMa68cNSVcP"}}
{"name":"Variable Templates","type":"script","scope":"global","author":"BHRwUaMa68cNSVcP","img":"icons/magic/lightning/bolt-beam-strike-blue.webp","command":"// Not something you could even try using standalone.\n\nif (!args.length) return;\n\nconsole.log(args[1].templateData)\n\nconst animationName = args[1].animNameFinal + \" (\" + args[1].templateData + \")\"\n\npf2eAnimations.debug(\"Variable Templates\", [animationName, args])\n\n// Doesn't work yet with Automated Animations not allowing template data.\nAutoAnimations.playAnimation(\n    args[1].sourceToken, \n    [],\n    { name: animationName, templateData: args[1].templateData }\n)","ownership":{"default":0,"BHRwUaMa68cNSVcP":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.w8CEay4vmtDBeavi"},"cf":{"id":"temp_6gsujam4gp6"}},"_stats":{"systemId":"pf2e","systemVersion":"4.2.5","coreVersion":"10.288","createdTime":1663680578497,"modifiedTime":1665499835090,"lastModifiedBy":"SCUQoZ7lvePPTab6"},"folder":null,"sort":0,"_id":"LsHdd70Q1TpFTQf0"}
{"_id":"LxFkyULbmva8yGDm","name":"Bane","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/bane.webp","scope":"global","command":"const [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\n\nif (!args.length) args[0] = await Sequencer.EffectManager.getEffects({ origin: \"aura-effect-bane\", source: tokenD }).length ? \"off\" : \"on\";\n\nconst auraRadius = tokenD.auras.get(\"aura-effect-bane\")?.radius\nconst gridUnits = 1.5 + 3 * (isNaN(auraRadius) ? 1 : auraRadius / 5)\n\nif (args[0] == \"on\") {\n    new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n        .effect()\n            .file(\"jb2a.bless.400px.intro.purple\", true)\n            .scaleIn(0, 1000, {ease: \"easeInBounce\"})\n            .atLocation(tokenD)\n            .attachTo(tokenD)\n            .name(\"Pf2e x JB2A Aura - Bane Intro\")\n            .origin(\"aura-effect-bane\")\n            .opacity(0.9)\n            .size(gridUnits, { gridUnits: true })\n        .effect()\n            .delay(1500)\n            .file(\"jb2a.bless.400px.loop.purple\", true)\n            .atLocation(tokenD)\n            .fadeOut(500)\n            .persist(true, { persistTokenPrototype: true })\n            .attachTo(tokenD)\n            .belowTokens(true)\n            .origin(\"aura-effect-bane\")\n            .name(\"Pf2e x JB2A Aura - Bane\")\n            .scaleOut(2, 2500, {ease: \"easeOutCubic\"})\n            .fadeOut(1000)\n            .size(gridUnits, { gridUnits: true })\n        .play()\n} else if (args[0] == \"off\") {\n    await Sequencer.EffectManager.endEffects({ origin: \"aura-effect-bane\", source: tokenD })\n}","folder":null,"sort":0,"flags":{"core":{"sourceId":"Macro.eJJhPoLdv7ul62dc"},"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"cf":{"id":"temp_o2l5kjd1mwj"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.6.8","coreVersion":"10.291","createdTime":null,"modifiedTime":1674682363375,"lastModifiedBy":"SCUQoZ7lvePPTab6"}}
{"_id":"O0RE17QySMEMVdHd","name":"Unleash Psyche","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/features/classes/unleash-psyche.webp","scope":"global","command":"const [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\n\nlet testArgs\n\nif (!args.length) testArgs = await Sequencer.EffectManager.getEffects({ origin: \"UnleashPsyche\", source: tokenD }).length ? \"off\" : \"on\";\n\nconst assets = game.modules.get(\"JB2A_DnD5e\")?.active\n    ? [\"jb2a.particles.outward.greenyellow.01.03\", \"jb2a.token_border.circle.static.blue.007\"]\n    : [\"jb2a.particles.outward.orange.01.03\", \"jb2a.token_border.circle.static.orange.012\"];\n\nconst nameOfEffect = `${tokenD.name}'s Unleashed Psyche`\n\nlet preload = [\"jb2a.thunderwave.center.blue\", \"jb2a.particles.inward.greenyellow.01.02\", \"jb2a.particles.swirl.greenyellow.01.01\"].concat(assets)\n\nawait Sequencer.Preloader.preloadForClients(preload)\n\nif (args[0] == \"on\" || testArgs === \"on\") {\n    new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n        .effect()\n            .origin(\"UnleashPsyche\")\n            .name(nameOfEffect + \" - Explosion\")\n            .file(\"jb2a.thunderwave.center.blue\", true)\n            .attachTo(tokenD)\n            .tieToDocuments(args.length ? args[1].item : [])\n            .filter(\"ColorMatrix\", { hue: 100 })\n            .scaleToObject(3.5 * tokenScale)\n            .waitUntilFinished(-900)\n        .effect()\n            .origin(\"UnleashPsyche\")\n            .name(nameOfEffect + \" - Particles (Inward)\")\n            .file(\"jb2a.particles.inward.greenyellow.01.02\", true)\n            .attachTo(tokenD)\n            .tieToDocuments(args.length ? args[1].item : [])\n            .fadeOut(1500)\n            .filter(\"ColorMatrix\", { hue: 250 })\n            .scaleToObject(tokenScale)\n            .fadeIn(300)\n            .persist(true, { persistTokenPrototype: true })\n        .effect()\n            .origin(\"UnleashPsyche\")\n            .name(nameOfEffect + \" - Particles (Swirl)\")\n            .file(\"jb2a.particles.swirl.greenyellow.01.01\", true)\n            .attachTo(tokenD)\n            .tieToDocuments(args.length ? args[1].item : [])\n            .fadeOut(500)\n            .filter(\"ColorMatrix\", { hue: 250 })\n            .scaleToObject(1.7 * tokenScale)\n            .fadeIn(300)\n            .persist(true, { persistTokenPrototype: true })\n        .effect()\n            .origin(\"UnleashPsyche\")\n            .name(nameOfEffect + \" - Token Border\")\n            .file(assets[1], true)\n            .atLocation(tokenD)\n            .attachTo(tokenD)\n            .tieToDocuments(args.length ? args[1].item : [])\n            .opacity(0.6)\n            .fadeOut(3000)\n            .scaleToObject(2 * tokenScale)\n            .filter(\"ColorMatrix\", { hue: 250 })\n            .persist(true, { persistTokenPrototype: true })\n        .play()\n} else if (testArgs === \"off\") {\n    await Sequencer.EffectManager.endEffects({ origin: \"UnleashPsyche\", object: tokenD })\n}","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.rBz1gNwQkWu8TidN"},"cf":{"id":"temp_s3arecn2xs"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.2.6","coreVersion":"10.288","createdTime":null,"modifiedTime":1666272240196,"lastModifiedBy":"SCUQoZ7lvePPTab6"}}
{"_id":"OOKf1Stu6m8HZNWA","name":"Scorching Ray","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/scorching-ray.webp","scope":"global","command":"// Original Author: EskieMoh#2969\n// Remastered by: MrVauxs#8622\n\nconst assets = game.modules.get(\"JB2A_DnD5e\")?.active\n    ? [\"jb2a.particles.outward.greenyellow.02.05\", { saturate: -1 }]\n    : [\"jb2a.particles.outward.orange.02.05\", {}];\n\nconst [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\nlet targets = Array.from(game.user.targets);\n\nif (!tokenD) { ui.notifications.error(\"No token found.\"); return; }\n\nlet targetDialogue = []\nlet rayCount = []\n\nif (game.system.id === \"pf2e\") {\n\tfor (let i of targets.keys()) {\n\t\trayCount.push(1)\n\t}\n} else {\n\ttargetDialogue.push({\n\t\ttype: 'info',\n\t\tlabel: `Up to 10 each.`,\n\t})\n\tfor (let i of targets.keys()) {\n\t\ttargetDialogue.push({\n\t\t\ttype: 'number',\n\t\t\tlabel: `Rays to ${targets[i].name}`,\n\t\t})\n\t}\n\trayCount = await warpgate.dialog(targetDialogue, \"🔥Scorching Ray🔥\", \"Cast!\")\n}\n\nrayCount = rayCount.filter(Number).map(x => Math.min(x, 10))\n\nrayCount.map((ray, index) => {\n\tlet target = targets[index]\n\n\tnew Sequence({moduleName: \"PF2e Animations\", softFail: true})\n\t\t.effect()\n\t\t\t.file(\"jb2a.magic_signs.circle.02.evocation.loop.yellow\", true)\n\t\t\t.attachTo(tokenD, { offset: { x: -0.5 }, gridUnits: true, local: true })\n\t\t\t.fadeIn(500)\n\t\t\t.fadeOut(500)\n\t\t\t.scaleToObject(2.25)\n\t\t\t.rotateTowards(target, {attachTo: true})\n\t\t\t.duration(5000)\n\t\t\t.scale({ x: 1, y: 2 })\n\t\t\t.rotateIn(360, 2000, {ease: \"easeInOutBack\"})\n\t\t\t.scaleOut(0.2, 2000, {ease: \"easeOutQuint\", delay: -4000})\n\t\t.effect()\n\t\t\t.filter(\"ColorMatrix\", assets[1])\n\t\t\t.file(assets[0], true)\n\t\t\t.attachTo(tokenD, { offset: { x: -0.5 }, gridUnits: true, local: true })\n\t\t\t.fadeIn(500)\n\t\t\t.fadeOut(500)\n\t\t\t.scaleToObject(2.25)\n\t\t\t.rotateTowards(target, {attachTo: true})\n\t\t\t.duration(5000)\n\t\t\t.scale({ x: 1, y: 2 })\n\t\t\t.rotateIn(360, 2000, {ease: \"easeInOutBack\"})\n\t\t\t.scaleOut(0.3, 2000, {ease: \"easeOutQuint\", delay: -4000})\n\t\t.wait(3000)\n\t\t.effect()\n\t\t\t.from(tokenD)\n\t\t\t.filter(\"ColorMatrix\", { contrast: 1, saturate: 1 })\n\t\t\t.attachTo(tokenD)\n\t\t\t.duration(1500 + Math.abs(ray) * 300)\n\t\t\t.fadeIn(500)\n\t\t\t.scaleToObject(tokenD.document.data.scale)\n\t\t\t.fadeOut(500)\n\t\t\t.opacity(0.3)\n\t\t\t.filter(\"Blur\", { blurX: 10, blurY: 20 })\n\t\t\t.tint(\"#ffbd2e\")\n\t\t.effect()\n\t\t\t.file(\"jb2a.scorching_ray.orange\", true)\n\t\t\t.attachTo(tokenD, { offset: { x: 0.4 }, gridUnits: true, local: true })\n\t\t\t.stretchTo(target, {attachTo: true})\n\t\t\t.repeats(Math.abs(ray), 250, 250)\n\t\t\t.randomizeMirrorY()\n\t\t.wait(200)\n\t\t.effect()\n\t\t\t.from(target)\n\t\t\t.filter(\"ColorMatrix\", { contrast: 1, saturate: 1 })\n\t\t\t.attachTo(target)\n\t\t\t.duration(1500)\n\t\t\t.fadeIn(500)\n\t\t\t.fadeOut(500)\n\t\t\t.scaleToObject(target.document.data.scale)\n\t\t\t.opacity(0.3)\n\t\t\t.filter(\"Blur\", { blurX: 10, blurY: 20 })\n\t\t\t.tint(\"#ffbd2e\")\n\t\t.play()\n})","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false},"exportSource":{"world":"pathfinder","system":"pf2e","coreVersion":"9.269","systemVersion":"3.13.5.16"},"core":{"sourceId":"Macro.jNwOrcCo8TgMz6bI"},"cf":{"id":"temp_7rg2mnzpvsh"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.2.6","coreVersion":"10.288","createdTime":null,"modifiedTime":1666122099577,"lastModifiedBy":"SCUQoZ7lvePPTab6"}}
{"_id":"OOYnWts6o8nGdhC6","name":"Haunting Hymn","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/haunting-hymn.webp","scope":"global","command":"const [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\nconst template = args[1]?.templateData ?? canvas.templates.placeables[canvas.templates.placeables.length - 1];\nconst [templateX, templateY] = [template.data.x, template.data.y];\nnew Sequence({moduleName: \"PF2e Animations\", softFail: true})\n    .effect()\n        .file('jb2a.template_circle.out_pulse.01.burst', true)\n        .mask(template)\n        .atLocation(tokenD)\n        .randomRotation()\n    .play()","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"},"cf":{"id":"temp_sjnygaa08ij"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.4","coreVersion":"10.285","createdTime":null,"modifiedTime":1663106249759,"lastModifiedBy":"BHRwUaMa68cNSVcP"}}
{"name":"Sudden Charge","type":"script","scope":"global","author":"BHRwUaMa68cNSVcP","img":"icons/skills/movement/ball-spinning-blue.webp","command":"const [token, tokenScale] = await pf2eAnimations.macroHelpers(args)\n\nui.notifications.info(game.i18n.localize(\"pf2e-jb2a-macros.macro.suddenCharge.notif\"))\nawait Sequencer.Preloader.preloadForClients(\"jb2a.gust_of_wind.veryfast\")\n\ntoken.actor.sheet.minimize();\n\nfor (let i = 0; i < 2; i++) {\n    const location = await pf2eAnimations.crosshairs({ token }, {\n        crosshairConfig: {\n            label: `${game.i18n.localize(\"pf2e-jb2a-macros.macro.suddenCharge.suddenCharge\")} ` + (i + 1)\n        },\n        noCollisionType: \"move\"\n    })\n\n    if (location === false || location.cancelled) return;\n\n    await new Sequence({ moduleName: \"PF2e Animations\", softFail: true })\n        .animation()\n            .on(token)\n            .moveTowards(location)\n            .moveSpeed(400)\n            .snapToGrid()\n            //.offset({ x: -50, y: -50 })\n        .effect()\n            .file(\"jb2a.gust_of_wind.veryfast\", true)\n            .atLocation(token)\n            .stretchTo(location, { onlyX: true })\n            .randomizeMirrorY()\n            .belowTokens()\n            .fadeOut(1000)\n            .scale(0.5 * token.document.height)\n        .play()\n}\n\ntoken.actor.sheet.maximize();","ownership":{"default":0,"BHRwUaMa68cNSVcP":3},"flags":{"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.QcnNdQKVRelB8Sjk"},"cf":{"id":"temp_xz48q3g0ej8"}},"_stats":{"systemId":"pf2e","systemVersion":"4.7.4","coreVersion":"10.291","createdTime":1663734075594,"modifiedTime":1676419855363,"lastModifiedBy":"SCUQoZ7lvePPTab6"},"folder":null,"sort":0,"_id":"OrBFtL6vBRyDHgfV"}
{"name":"Dazzling Flash","type":"script","author":"BHRwUaMa68cNSVcP","img":"systems/pf2e/icons/spells/dazzling-flash.webp","scope":"global","command":"const [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\nconst template = args[1]?.templateData ?? canvas.templates.placeables[canvas.templates.placeables.length - 1];\nconst [templateX, templateY] = [template.data.x, template.data.y];\n\nnew Sequence({moduleName: \"PF2e Animations\", softFail: true})\n    .effect()\n        .file('jb2a.thunderwave.center.blue', true)\n        .mask(template)\n        .attachTo(tokenD)\n        .scale(args[1].item.level > 2 ? 2 : 1)\n    .play()","flags":{"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"},"cf":{"id":"temp_sjnygaa08ij"}},"ownership":{"default":0,"BHRwUaMa68cNSVcP":3},"_stats":{"systemId":"pf2e","systemVersion":"4.5.0","coreVersion":"10.291","createdTime":1662948680058,"modifiedTime":1671235834101,"lastModifiedBy":"SCUQoZ7lvePPTab6"},"folder":null,"sort":0,"_id":"PWAdvQ9qxwTcXCsu"}
{"_id":"PiernEW8sh3FaeG0","name":"Drain Bonded Item","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/magic/defensive/shield-barrier-blades-teal.webp","scope":"global","command":"const [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\n\nconst assets = game.modules.get(\"JB2A_DnD5e\")?.active\n    ? [\"jb2a.divine_smite.caster.blueyellow\", { saturate: -1 }, \"jb2a.shimmer.01.blue\"]\n    : [\"jb2a.divine_smite.caster.greenyellow\", {}, \"jb2a.shimmer.01.green\"];\n\nnew Sequence({moduleName: \"PF2e Animations\", softFail: true})\n    .effect()\n        .atLocation(tokenD)\n        .attachTo(tokenD)\n        .origin(\"drain bonded item\")\n        .filter(\"ColorMatrix\", assets[1])\n        .name(\"Drain Bonded Item - Energy Strands\")\n        .scaleToObject(2)\n        .file(\"jb2a.energy_strands.in.green.01.1\", true)\n    .effect()\n        .atLocation(tokenD)\n        .attachTo(tokenD)\n        .scaleToObject(2)\n        .origin(\"drain bonded item\")\n        .name(\"Drain Bonded Item - Charging\")\n        .filter(\"ColorMatrix\", assets[1])\n        .file(assets[0], true)\n        .waitUntilFinished(300)\n    .effect()\n        .atLocation(tokenD)\n        .attachTo(tokenD)\n        .origin(\"drain bonded item\")\n        .name(\"Drain Bonded Item - Shimmer\")\n        .filter(\"ColorMatrix\", assets[1])\n        .scaleToObject(1.5)\n        .file(assets[2], true)\n    .play()","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.0fUIZ0XifYGrR9oY"},"cf":{"id":"temp_xz48q3g0ej8"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.0-beta3","coreVersion":"10.284","createdTime":null,"modifiedTime":1662741468191,"lastModifiedBy":"BHRwUaMa68cNSVcP"}}
{"_id":"Q0hKSbLmADnVbKQB","name":"Persistent Conditions","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/skills/wounds/blood-drip-droplet-red.webp","scope":"global","command":"let tokenD = args[0].token\nlet type = args[0].flavor.match(/Received (regeneration|fast healing)/g) ? \"healing\" : args[0].rolls[0].formula.replace(/.+ /g, \"\").trim();\nlet color = \"jb2a.liquid.splash.red\"\nlet scale = 1.5\nlet below = false\n\nswitch (type.toLowerCase()) {\n    case \"piercing\":\n    case \"slashing\":\n    case \"bleed\": color = \"jb2a.liquid.splash.red\"; break;\n    case \"acid\": color = \"jb2a.liquid.splash.green\"; break;\n    case \"bludgeoning\": below = true; scale = 2.5; color = \"jb2a.impact.ground_crack.blue.03\"; break;\n    case \"good\": color = \"jb2a.divine_smite.caster.yellowwhite\"; break;\n    case \"evil\": color = \"jb2a.divine_smite.caster.dark_red\"; break;\n    case \"lawful\": color = \"jb2a.divine_smite.caster.orange\"; break;\n    case \"chaotic\": color = \"jb2a.divine_smite.caster.purplepink\"; break;\n    case \"sonic\": color = \"jb2a.thunderwave.center.blue\"; break;\n    case \"electricity\": scale = 2; color = \"jb2a.token_border.circle.static.blue.003\"; break;\n    case \"cold\": scale = 2; color = \"jb2a.impact_themed.ice_shard.blue\"; break;\n    case \"force\": below = true; scale = 3; color = \"jb2a.impact.ground_crack.blue.01\"; break; \n    case \"mental\": color = \"jb2a.magic_signs.rune.enchantment.intro.purple\"; break; \n    case \"poison\": color = \"jb2a.icon.poison.dark_green\"; break; \n    case \"negative\": color = \"jb2a.healing_generic.200px.purple\"; break; \n    case \"positive\": color = \"jb2a.healing_generic.400px.yellow\"; break;\n    case \"healing\": color = \"jb2a.healing_generic.400px.green\"; break;\n    case \"fire\": color = \"jb2a.shield_themed.below.fire.02.orange\"; break;\n    default: ui.notifications.error(`Can't find animation for ${type}`)\n}\n\nnew Sequence({moduleName: \"PF2e Animations\", softFail: true})\n    .effect()\n        .belowTokens(below)\n        .fadeIn(500)\n        .fadeOut(500)\n        .atLocation(tokenD)\n        .scaleToObject(scale)\n        .file(color, true)\n        .duration(1200)\n    .play()","folder":null,"sort":0,"flags":{"core":{"sourceId":"Macro.5PhqUehtnjxz35Gg"},"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"cf":{"id":"temp_xz48q3g0ej8"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.6.8","coreVersion":"10.291","createdTime":null,"modifiedTime":1675383418215,"lastModifiedBy":"SCUQoZ7lvePPTab6"}}
{"name":"Mirror Image","type":"script","scope":"global","author":"SCUQoZ7lvePPTab6","img":"systems/pf2e/icons/spells/mirror-image.webp","command":"const [token, tokenScale] = await pf2eAnimations.macroHelpers(args)\n\nif (args.length === 0) {\n    const actors = canvas.tokens.controlled.flatMap((token) => token.actor ?? []);\n    if (actors.length === 0 && game.user.character) actors.push(game.user.character);\n    if (actors.length === 0) {\n        const message = game.i18n.localize(\"PF2E.ErrorMessage.NoTokenSelected\");\n        return ui.notifications.error(message);\n    }\n\n    const ITEM_UUID = \"Compendium.pf2e-jb2a-macros.Actions.15XurJzUEax6FhA7\"; // Mirror Image\n    const source = (await fromUuid(ITEM_UUID)).toObject();\n    source.flags = mergeObject(source.flags ?? {}, { core: { sourceId: ITEM_UUID } });\n\n    for (const actor of actors) {\n        const existing = actor.itemTypes.effect.find((e) => e.flags.core?.sourceId === ITEM_UUID);\n        if (existing) {\n            await existing.delete();\n        } else {\n            await actor.createEmbeddedDocuments(\"Item\", [source]);\n        }\n    }\n    return;\n};\n\nif (args[0] === \"off\") return;\n\nfunction amountOfImages() { \n    return Sequencer.EffectManager.getEffects({origin: args[1].item.uuid}).length\n};\n\nHooks.off(\"preUpdateItem\", pf2eAnimations.hooks.mirrorImage ?? 123);\n\nasync function updateImages(data, changes) {\n    if (!(changes?.system?.badge?.value)) return;\n    if (!(data.name === \"Mirror Image\")) return;\n    \n    let badgeValue = changes.system.badge.value;\n\n    pf2eAnimations.debug(\"Mirror Image\", {badgeValue, imagesOnScreen: amountOfImages()})\n\n    if (badgeValue < amountOfImages()) {\n        Sequencer.EffectManager.endEffects(\n            Sequencer.EffectManager.getEffects({origin: data.uuid}).at(-1).data\n        )\n    } else if (badgeValue > amountOfImages()) {\n        new Sequence({moduleName: \"PF2e Animations\", softFail: true}).addSequence(mirrorImage(amountOfImages(), data)).play()\n    }\n}\n\nconst mirrorImage = (number, origin) => new Sequence({moduleName: \"PF2e Animations\", softFail: false})\n        .effect()\n        .name(\"Mirror Image Nr.\" + (1 + number))\n        .from(token)\n        .origin(origin.uuid)\n        .fadeIn(1000)\n        .tieToDocuments([origin])\n        .fadeOut(1000)\n        .attachTo(token, {followRotation: !token.document.lockRotation})\n        .persist(true, { persistTokenPrototype: true })\n        .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n        .loopProperty(\"sprite\", \"position.x\", { values: [0, -1], duration: Sequencer.Helpers.random_int_between(500, 4000), gridUnits: true, pingPong: true})\n        .spriteOffset({ x: 0.5 }, { gridUnits: true })\n        .rotate(120 * (1 + number))\n        .spriteRotation(120 * (1 + number))\n        .zeroSpriteRotation()\n        .scaleToObject(1 * token.document.texture.scaleX)\n        .opacity(0.5);\n\nconst seq = new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n    // Blast\n    .effect()\n        .file(\"jb2a.impact.004.blue\", true)\n        .atLocation(token)\n        .fadeIn(500)\n        .tieToDocuments([args[1].item])\n        .randomRotation()\n        .fadeOut(1500)\n    // Illusion Mark\n    .effect()\n        .file(\"jb2a.extras.tmfx.runes.circle.simple.illusion\", true)\n        .atLocation(token)\n        .duration(2000)\n        .fadeIn(500)\n        .fadeOut(1500)\n        .tieToDocuments([args[1].item])\n        .scale(0.5)\n        .filter(\"Glow\", {\n            color: 0x0096FF\n        })\n        .scaleIn(0, 500, {\n            ease: \"easeOutCubic\"\n        })\n        .waitUntilFinished(-1000);\n\nfor (let i = 0; i < 3; i++) {\n    seq.addSequence(mirrorImage(i, args[1].item))\n}\n\nseq.thenDo(async () => {\n    pf2eAnimations.hooks.mirrorImage = Hooks.on(\"preUpdateItem\", updateImages);\n})\n\nseq.play()","ownership":{"default":0,"SCUQoZ7lvePPTab6":3},"flags":{"advanced-macros":{"runAsGM":false,"runForEveryone":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.1QeWAkJB0CsfUxIU"}},"_stats":{"systemId":"pf2e","systemVersion":"4.6.8","coreVersion":"10.291","createdTime":1670364146909,"modifiedTime":1674774461293,"lastModifiedBy":"SCUQoZ7lvePPTab6"},"folder":null,"sort":0,"_id":"QNZOHlyOqO58lVdZ"}
{"name":"Manifest Eidolon","type":"script","scope":"global","author":"SCUQoZ7lvePPTab6","img":"systems/pf2e/icons/features/classes/eidolon.webp","command":"const [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\nlet spawnArgs = { eidolon: true }\n\nlet eidolons = game.actors.filter(v => v.class?.name === \"Eidolon\" && v.isOwner)\nspawnArgs.actorName = eidolons[0].name\n\nlet result\nif (eidolons.length > 1) {\n    result = await warpgate.menu(\n        {\n            inputs: [\n                {\n                    label: \"Pick your Eidolon\",\n                    type: \"select\",\n                    options: eidolons.map(v => v.name)\n                }\n            ],\n            buttons: [\n                {\n                    label: \"Confirm\",\n                    value: 1\n                },\n                {\n                    label: \"Cancel\",\n                    value: 0\n                }\n            ]\n        },\n        {\n            title: \"Too many Eidolons!\"\n        }\n    )\n    if (!result.buttons) return;\n    spawnArgs.actorName = result.inputs[0]\n}\n\nlet importedToken = game.actors.filter(v => v.class?.name === \"Eidolon\" && v.isOwner && v.name === spawnArgs.actorName)[0].prototypeToken\n\nlet crossHairConfig = {\n    label: importedToken.name,\n    interval: importedToken.height < 1 ? 4 : importedToken.height % 2 === 0 ? 1 : -1,\n    lockSize: true,\n    drawIcon: true,\n    size: importedToken.height,\n    icon: importedToken.texture.src\n}\ntokenD.actor.sheet.minimize();\nconst crosshairs = await warpgate.crosshairs.show(crossHairConfig)\nif (crosshairs.cancelled) return;\n\nspawnArgs.location = (await canvas.scene.createEmbeddedDocuments('MeasuredTemplate', [crosshairs]))[0]\n\nspawnArgs.options = { ...spawnArgs.options, ...{ controllingActor: tokenD.actor } }\n\nspawnArgs.origins = { tokenUuid: args[1].sourceToken.data.uuid, itemUuid: args[1].itemUuid, itemName: args[1].itemName }\n\npf2eAnimations.debug(\"Requesting to GM\", spawnArgs)\nawait warpgate.event.notify(\"askGMforSummon\", spawnArgs)\ntokenD.actor.sheet.maximize();","ownership":{"default":0,"SCUQoZ7lvePPTab6":3},"flags":{"advanced-macros":{"runAsGM":false,"runForEveryone":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.TCGcHbgpYSOjpCmP"},"cf":{"id":"temp_3t4j7cyld29"}},"_stats":{"systemId":"pf2e","systemVersion":"4.4.2","coreVersion":"10.290","createdTime":1667134397618,"modifiedTime":1669493957194,"lastModifiedBy":"SCUQoZ7lvePPTab6"},"folder":null,"sort":0,"_id":"Qyoalm1R3chywfE0"}
{"_id":"SaXHztUmj7Fh9G58","name":"Acid Flask","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/equipment/alchemical-items/alchemical-bombs/acid-flask.webp","scope":"global","command":"// Can be used standalone!\n\nlet tokenD = args[1]?.sourceToken ?? canvas.tokens.controlled[0]\nlet targets = args[1]?.allTargets ?? Array.from(game.user.targets)\nlet target = targets[0]\n\nif (!tokenD || !target) {\n    return ui.notifications.error(`Missing a ${!tokenD ? \"selected token\" : \"\"}${!tokenD && !target ? \" and \": \"\"}${!target ? \"target\" : \"\"}.`);\n}\n\nlet projectile = \"\"\nlet explosion = [\"\"]\nlet explosionRemains = [\"\"]\nlet seqe = new Sequence({moduleName: \"PF2e Animations\", softFail: true})\nlet splashBonus = 3\nlet mods = [{ \"label\": `No Modifications`, \"value\": 0 }]\nlet options\n\n// Special feats\n\nif (tokenD.actor.data.items.filter(x => x.name === \"Bomber\").length) mods.push({ \"label\": `<a class=\"entity-link content-link\" data-pack=\"pf2e.classfeatures\" data-id=\"7JbiaZ8bxODM5mzS\"><i class=\"fas fa-suitcase\"></i> Bomber</a>`, \"value\": \"Bomber\" });\nif (tokenD.actor.data.items.filter(x => x.name === \"Expanded Splash\").length) mods.push({ \"label\": `<a class=\"entity-link content-link\" data-pack=\"pf2e.feats-srd\" data-id=\"gyVcJfZTmBytLsXq\"><i class=\"fas fa-suitcase\"></i> Expanded Splash</a>`, \"value\": \"Expanded\" });\nif (tokenD.actor.data.items.filter(x => x.name === \"Directional Bombs\").length) mods.push({ \"label\": `<a class=\"entity-link content-link\" data-pack=\"pf2e.feats-srd\" data-id=\"ozvYhY4hG1deXly8\"><i class=\"fas fa-suitcase\"></i> Directional Bombs</a>`, \"value\": \"Directional\" });\n\nif (mods.length > 1) {\n    options = await warpgate.buttonDialog({buttons: mods}, 'column')\n}\n// check for Expanded Splash and Bomber's singular splash feature and add 3 to splashBonus\n\nseqe.effect()\n        .file(\"jb2a.throwable.throw.flask.03.green\", true)\n        .atLocation(tokenD)\n        .stretchTo(target)\n        .fadeIn(300)\n        .waitUntilFinished(-200)\n    .macro(\n        options == 'Directional' ? \"Compendium.pf2e-jb2a-macros.Macros.Cone Template\" : \"\",\n        target,\n        {},\n        [\n            \"jb2a.liquid.splash_side.bright_green\", \n            \"jb2a.explosion.side_fracture.flask.03\"\n        ]\n    )\n    .effect()\n        .playIf(options !== 'Directional')\n        .file(\"jb2a.liquid.splash.bright_green\", true)\n        .atLocation(target)\n        .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n    .effect()\n        .playIf(options !== 'Directional')\n        .file(\"jb2a.explosion.side_fracture.flask.03\", true)\n        .offset({ x: 0.5, y: 0.5 }, { gridUnits: true })\n        .atLocation(target)\n        .rotate(180)\n        .rotateTowards(token)\n    .play()","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.GK9NCgnOnTYxdETf"},"cf":{"id":"temp_9hsvsxrbtvj"}}}
{"_id":"Vug9mAtV6Zne3G6K","name":"Bombs","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/magic/fire/explosion-fireball-small-blue.webp","scope":"global","command":"// Cannot be used standalone.\n\nif (!args.length) return;\n\nlet tokenD = args[1].sourceToken\nlet targets = args[1].allTargets\nlet target = targets[0]\nlet rinsedName = args[1].rinsedName.replace(/\\(.+\\)/g, \"\")\n\nlet projectile = \"\"\nlet explosion = [\"\"]\nlet explosionRemains = [\"\"]\nlet seq = new Sequence({moduleName: \"PF2e Animations\", softFail: true})\nlet splashBonus = 3\nlet mods = [{ \"label\": `No Modifications`, \"value\": 0 }]\nlet ID = Sequencer.Helpers.random_int_between(100, 999)\n\n// Special feats\n/*\nif (tokenD.actor.data.items.filter(x => x.name === \"Bomber\").length) mods.push({ \"label\": `<a class=\"entity-link content-link\" data-pack=\"pf2e.classfeatures\" data-id=\"7JbiaZ8bxODM5mzS\"><i class=\"fas fa-suitcase\"></i> Bomber</a>`, \"value\": \"Bomber\" })\nif (tokenD.actor.data.items.filter(x => x.name === \"Expanded Splash\").length) mods.push({ \"label\": `<a class=\"entity-link content-link\" data-pack=\"pf2e.feats-srd\" data-id=\"gyVcJfZTmBytLsXq\"><i class=\"fas fa-suitcase\"></i> Expanded Splash</a>`, \"value\": \"Expanded Splash\" })\nif (tokenD.actor.data.items.filter(x => x.name === \"Directional Bombs\").length) mods.push({ \"label\": `<a class=\"entity-link content-link\" data-pack=\"pf2e.feats-srd\" data-id=\"ozvYhY4hG1deXly8\"><i class=\"fas fa-suitcase\"></i> Directional Bombs</a>`, \"value\": \"Directional Bombs\" })\n\nif (falsemods.length > 1) {\n    let options = await warpgate.buttonDialog({buttons: mods}, 'column')\n}\n*/\n\nswitch (rinsedName) {\n    case \"vexingvapor\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.flask.03.green\", true)\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .filter(\"ColorMatrix\", {\n                hue: 120\n            })\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.explosion.side_fracture.flask.03\", true)\n            .atLocation(target)\n            .rotate(180)\n            .rotateTowards(tokenD)\n        .effect()\n            .file(\"jb2a.fog_cloud.2.green\", true)\n            .scaleIn(0.25, 1000, { ease: \"easeInQuart\" })\n            .fadeIn(3000)\n            .fadeOut(1500)\n            .duration(8000)\n            .opacity(0.5)\n            .filter(\"ColorMatrix\", {\n                hue: 200\n            })\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        .wait(1000)\n        .effect()\n            .file(\"jb2a.markers.stun.purple.01\", true)\n            .fadeIn(3000)\n            .fadeOut(1500)\n            .duration(6500)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        break;\n    }\n    case \"tanglefootbag\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.grenade.02.blackyellow\", true)\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.grease.dark_brown.loop\", true)\n            .scaleIn(0.25, 1000, { ease: \"easeInQuart\" })\n            .fadeIn(1000)\n            .fadeOut(1000)\n            .duration(12000)\n            .scaleToObject(0.8)\n            .atLocation(target)\n            .belowTokens()\n        .effect()\n            .file(\"jb2a.grease.dark_brown.loop\", true)\n            .scaleIn(0.25, 1000, { ease: \"easeInQuart\" })\n            .fadeIn(1000)\n            .fadeOut(1000)\n            .duration(12000)\n            .randomizeMirrorX()\n            .randomizeMirrorY()\n            .scale(0.1)\n            .atLocation(target, {randomOffset: 1 })\n            .attachTo(target)\n            .mask(target)\n        .effect()\n            .file(\"jb2a.grease.dark_brown.loop\", true)\n            .scaleIn(0.25, 1000, { ease: \"easeInQuart\" })\n            .fadeIn(1000)\n            .fadeOut(1000)\n            .randomizeMirrorX()\n            .randomizeMirrorY()\n            .duration(12000)\n            .scale(0.1)\n            .atLocation(target, {randomOffset: 1 })\n            .attachTo(target)\n            .mask(target)\n        .effect()\n            .file(\"jb2a.grease.dark_brown.loop\", true)\n            .scaleIn(0.25, 1000, { ease: \"easeInQuart\" })\n            .fadeIn(1000)\n            .fadeOut(1000)\n            .randomizeMirrorX()\n            .randomizeMirrorY()\n            .duration(12000)\n            .scale(0.1)\n            .atLocation(target, {randomOffset: 1 })\n            .attachTo(target)\n            .mask(target)\n        .effect()\n            .file(\"jb2a.grease.dark_brown.loop\", true)\n            .scaleIn(0.25, 1000, { ease: \"easeInQuart\" })\n            .fadeIn(1000)\n            .randomizeMirrorX()\n            .randomizeMirrorY()\n            .fadeOut(1000)\n            .duration(12000)\n            .scale(0.1)\n            .atLocation(target, {randomOffset: 1 })\n            .attachTo(target)\n            .mask(target)\n        break;\n    }\n    case \"sulfurbomb\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.bomb.01.green\", true)\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .filter(\"ColorMatrix\", {\n                hue: -30\n            })\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.fog_cloud.2.green\", true)\n            .scaleIn(0.25, 1000, { ease: \"easeInQuart\" })\n            .fadeIn(3000)\n            .fadeOut(1500)\n            .duration(8000)\n            .opacity(0.5)\n            .filter(\"ColorMatrix\", {\n                hue: -30\n            })\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        break;\n    }\n    case \"pernicioussporebomb\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.bomb.01.green\", true)\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.explosion.08.green\", true)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n            .waitUntilFinished(-2500)\n        .effect()\n            .file(\"jb2a.spirit_guardians.green.particles\", true)\n            .fadeIn(500)\n            .fadeOut(500)\n            .duration(4000)\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 75000})\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        break;\n    }\n    case \"necroticbomb\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.bomb.01.black\", true)\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-150)\n        .effect()\n            .file(\"jb2a.explosion.03.bluewhite\", true)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        .wait(50)\n        .effect()\n            .file(\"jb2a.explosion.08.dark_green\", true)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        break;\n    }\n    case \"mudbomb\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.grenade.02.blackyellow\", true)\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.grease.dark_brown.loop\", true)\n            .size({ width: 3, height: 3 }, {gridUnits: true})\n            .scaleIn(0, 1000)\n            .fadeIn(1500)\n            .belowTokens()\n            .fadeOut(500)\n            .duration(4500)\n            .randomizeMirrorY()\n            .randomizeMirrorX()\n            .atLocation(target)\n        .effect()\n            .file(\"jb2a.explosion.shrapnel.grenade.02.black\", true)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        break;\n    }\n    case \"junkbomb\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.grenade.02.blackyellow\", true)\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.explosion.03.blueyellow\", true)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        .effect()\n            .file(\"jb2a.explosion.shrapnel.grenade.02.black\", true)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        break;\n    }\n    case \"ghostcharge\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.grenade.03.blackblue\", true)\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.explosion.07.tealyellow\", true)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        .effect()\n            .file(\"jb2a.explosion.shrapnel.grenade.03.black\", true)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        break;\n    }\n    case \"frostvial\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.flask.02.blue\", true)\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.impact_themed.ice_shard.blue\", true)\n            .scale(0.5)\n            .atLocation(target)\n        .effect()\n            .file(\"jb2a.explosion.05.bluewhite\", true)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        .effect()\n            .file(\"jb2a.explosion.side_fracture.flask.02\", true)\n            .atLocation(target)\n            .rotate(180)\n            .rotateTowards(tokenD)\n        break;\n    }\n    case \"dreadampoule\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.flask.03.green\", true)\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .filter(\"ColorMatrix\", {\n                hue: 120\n            })\n            .waitUntilFinished(-200)\n        .effect()\n            .origin(\"Dread Ampoule ID\" + ID)\n            .name(\"Dread Ampoule - Fog\")\n            .file(\"jb2a.fog_cloud.2.green\", true)\n            .scaleIn(0.25, 1000, { ease: \"easeInQuart\" })\n            .fadeIn(3000)\n            .fadeOut(1500)\n            .duration(8000)\n            .opacity(0.5)\n            .filter(\"ColorMatrix\", {\n                hue: 200\n            })\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        .effect()\n            .file(\"jb2a.explosion.side_fracture.flask.03\", true)\n            .atLocation(target)\n            .rotate(180)\n            .rotateTowards(tokenD)\n        .wait(1000)\n        .thenDo(function(){\n            for (let i = 0, iMax = 25; i <= iMax; i++) {\n                seq.effect()\n                    .origin(\"Dread Ampoule ID\" + ID)\n                    .name(`Dread Ampoule - Horror Effect ${i} / ${iMax}`)\n                    .fadeIn(1000)\n                    .fadeOut(1000)\n                    .scale(0.3)\n                    .animateProperty(\"sprite\", \"position.y\", { from: 0, to: -200, duration: 9000})\n                    .duration(3000)\n                    .file(\"jb2a.icon.horror.purple\", true)\n                    .atLocation(target, { randomOffset: 1.3 })\n                    .wait(200)\n            }\n        })\n        break;\n    }\n    case \"crystalshards\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.bomb.01.blue\", true)\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.explosion.04.blue\", true)\n            .zIndex(1)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n            .wait(50)\n        .effect()\n            .file(\"jb2a.explosion.shrapnel.bomb.01.blue\", true)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n            .zIndex(2)\n        break;\n    }\n    case \"bottledsunlight\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.flask.02.blue\", true)\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .filter(\"ColorMatrix\", {\n                hue: 100,\n                brightness: 1\n            })\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.markers.light.outro.yellow\", true)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .fadeIn(1000)\n            .fadeOut(1000)\n            .scaleIn(0, 2000, { ease: \"easeOutBack\" })\n            .atLocation(target)\n        .effect()\n            .file(\"jb2a.explosion.side_fracture.flask.02\", true)\n            .atLocation(target)\n            .rotate(180)\n            .filter(\"ColorMatrix\", {\n                hue: 100,\n                brightness: 1\n            })\n            .rotateTowards(tokenD)\n        break;\n    }\n    case \"bottledlightning\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.flask.02.blue\", true)\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.explosion.side_fracture.flask.02\", true)\n            .atLocation(target)\n            .rotate(180)\n            .rotateTowards(tokenD)\n        .effect()\n            .file(\"jb2a.explosion.02.blue\", true)\n            .atLocation(target)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .waitUntilFinished(-1000)\n        .effect()\n            .file(\"jb2a.static_electricity.02.blue\", true)\n            .attachTo(target)\n            .duration(2500)\n            .scaleToObject(1.3)\n        .effect()\n            .file(\"jb2a.static_electricity.03.blue\", true)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .duration(1500)\n            .atLocation(target)\n        break;\n    }\n    case \"waterbomb\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.bomb.01.blue\", true)\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.liquid.splash.blue\", true)\n            .atLocation(target)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n        .effect()\n            .playIf(false) // WIP\n            .file(\"jb2a.liquid.splash_side.blue\", true)\n            .atLocation(target)\n            .rotate(180)\n            .rotateTowards(tokenD)\n        .effect()\n            .file(\"jb2a.explosion.side_fracture.flask.03\", true)\n            .atLocation(target)\n            .rotate(180)\n            .rotateTowards(tokenD)\n        break;\n    }\n    case \"acidflask\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.flask.03.green\", true)\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.liquid.splash.bright_green\", true)\n            .atLocation(target)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n        .effect()\n            .playIf(false) // WIP\n            .file(\"jb2a.liquid.splash_side.bright_green\", true)\n            .atLocation(target)\n            .rotate(180)\n            .rotateTowards(tokenD)\n        .effect()\n            .file(\"jb2a.explosion.side_fracture.flask.03\", true)\n            .atLocation(target)\n            .rotate(180)\n            .rotateTowards(tokenD)\n        break;\n    }\n    case \"alchemist'sfire\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.flask.01.orange\", true)\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.explosion.01.orange\", true)\n            .atLocation(target)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n        .effect()\n            .file(\"jb2a.explosion.side_fracture.flask.01\", true)\n            .atLocation(target)\n            .rotate(180)\n            .rotateTowards(tokenD)\n        break;\n    }\n    case \"alignmentampoule\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.flask.02.blue\", true)\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .filter(\"ColorMatrix\", {\n                hue: 100,\n                brightness: 1\n            })\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.explosion.bluewhite.3\", true)\n            .atLocation(target)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n        .effect()\n            .file(\"jb2a.explosion.side_fracture.flask.02\", true)\n            .atLocation(target)\n            .rotate(180)\n            .filter(\"ColorMatrix\", {\n                hue: 100,\n                brightness: 1\n            })\n            .rotateTowards(tokenD)\n        break;\n    }\n    case \"redpitchbomb\":\n    case \"tallowbomb\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.bomb.01.black\", true)\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.explosion.01.orange\", true)\n            .atLocation(target)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n        .wait(50)\n        .effect()\n            .file(\"jb2a.explosion.shrapnel.bomb.01.black\", true)\n            .atLocation(target)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n        break;\n    }\n    case \"thunderstone\": {\n        seq.effect()\n            .file(\"jb2a.slingshot\", true)\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-1000)\n        .effect()\n            .file(\"jb2a.thunderwave.center.blue\", true)\n            .atLocation(target)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n        break;\n    }\n    default: {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.bomb.01.black\", true)\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.explosion.shrapnel.bomb.01.black\", true)\n            .atLocation(target)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n        .effect()\n            .file(\"jb2a.explosion.03.blueyellow\", true)\n            .atLocation(target)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n        break;\n    }\n}\n\nseq.play()","folder":null,"sort":0,"flags":{"core":{"sourceId":"Compendium.xdy-pf2e-workbench.asymonous-benefactor-macros-internal.u3dPC2egeK3IC26I"},"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_qfrxw4o5gm"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.1.2","coreVersion":"10.286","createdTime":null,"modifiedTime":1663880024875,"lastModifiedBy":"BHRwUaMa68cNSVcP"}}
{"command":"const template = args[1]?.templateData ?? canvas.templates.placeables[canvas.templates.placeables.length - 1];\nnew Sequence({moduleName: \"PF2e Animations\", softFail: true})\n    .effect()\n        .file('jb2a.web.01', true)\n        .mask(template)\n        .attachTo(template)\n        .persist()\n        .scaleToObject()\n        .belowTokens()\n        .name(\"Web Spell\")\n    .effect()\n        .file('jb2a.web.01', true)\n        .mask(template)\n        .attachTo(template)\n        .persist()\n        .opacity(0.3)\n        .scaleToObject()\n        .name(\"Web Spell\")\n    .play()","name":"Web","type":"script","img":"systems/pf2e/icons/spells/web.webp","flags":{"pf2e":{"itemMacro":true},"core":{"sourceId":"Macro.v3vq1FB1xGSmEbIQ"},"cf":{"id":"temp_8f8hkx7i8fo"},"advanced-macros":{"runAsGM":false}},"author":"BHRwUaMa68cNSVcP","scope":"global","ownership":{"default":0,"BHRwUaMa68cNSVcP":3},"_stats":{"systemId":"pf2e","systemVersion":"4.2.4","coreVersion":"10.287","createdTime":1664895290321,"modifiedTime":1665322340383,"lastModifiedBy":"BHRwUaMa68cNSVcP"},"folder":null,"sort":0,"_id":"X6PZ0lboOsQSY8KO"}
{"_id":"XSlxNRM032wVYBBw","name":"Clumsy","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/skills/movement/feet-winged-boots-brown.webp","scope":"global","command":"return // WIP\nlet token = args[1].sourceToken\nlet conditionOverhead = Sequencer.EffectManager.getEffects({ name: `${token.name} - Conditions Overhead*`, object: token })\n\nconsole.log(conditionOverhead)\n\nif (args[0] == \"on\") {\n    new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n        .effect()\n            .name(`${token.name} - Conditions Overhead - Clumsy`)\n            .attachTo(token, {bindAlpha: false})\n            .from(token)\n            .loopProperty(\"spriteContainer\", \"rotation\", { values: [0, 5, 0, -5], duration: 2000, pingPong: true})\n            .persist()\n            .fadeOut(500)\n        .animation()\n            .on(token)\n            .fadeOut(100)\n        .play()\n} else if (args[0] == \"off\") {\n    new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n        .animation()\n            .fadeIn(100)\n            .on(token)\n        .play()\n    await Sequencer.EffectManager.endEffects({ name: `${token.name} - Conditions Overhead - Clumsy`, object: token })\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"},"cf":{"id":"temp_s3arecn2xs"}}}
{"name":"Dismiss Selected Token","type":"script","scope":"global","author":"SCUQoZ7lvePPTab6","img":"icons/magic/fire/beam-strike-whip-red.webp","command":"const selected = canvas.tokens.controlled\nDialog.confirm({\n  title: \"Confirmation Title\",\n  content: \"Do you want to Dismiss the following tokens? \" + `<p><b>${selected.map(x => x.name).join(\", \")}</b></p>`,\n  yes: () => { return selected.forEach(x => warpgate.dismiss(x.id))},\n  no: () => { return },\n})","ownership":{"default":0,"SCUQoZ7lvePPTab6":3},"flags":{"advanced-macros":{"runAsGM":false,"runForEveryone":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.Q9J4KPPQw15Mbxky"}},"_stats":{"systemId":"pf2e","systemVersion":"4.6.0","coreVersion":"10.291","createdTime":1672553375655,"modifiedTime":1672553840014,"lastModifiedBy":"SCUQoZ7lvePPTab6"},"folder":null,"sort":0,"_id":"Z4NYhV3lBTkOJTSD"}
{"_id":"ZxnGGJn7z4fbBfcq","name":"Overdrive","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/features/feats/overdrive-success.webp","scope":"global","command":"const [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\n\nlet testArgs\n\nif (!args.length) testArgs = await Sequencer.EffectManager.getEffects({ origin: \"overdrive\", source: tokenD }).length ? \"off\" : \"on\";\n\nconst assets = game.modules.get(\"JB2A_DnD5e\")?.active\n    ? [\"jb2a.token_border.circle.static.blue.002\"]\n    : [\"jb2a.token_border.circle.static.blue.010\"];\n\nif (args[0] == \"on\" || testArgs === \"on\") {\n    new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n        .effect()\n            .file(\"jb2a.divine_smite.caster.blueyellow\", true)\n            .origin(\"overdrive\")\n            .name(tokenD.name + \"'s Overdrive\")\n            .filter(\"ColorMatrix\", {\n                hue: 100,\n                contrast: 1,\n                saturate: 0     \n            })\n            .tint(\"#7DF9FF\")\n            .attachTo(tokenD)\n            .tieToDocuments(args.length ? args[1].item : [])\n            .scaleToObject(2 * tokenScale)\n            .waitUntilFinished(-1500)\n        .effect()\n            .playIf(args[1]?.itemName.includes(\"Critical\"))\n            .file(\"jb2a.static_electricity.03.blue\", true)\n            .origin(\"overdrive\")\n            .name(tokenD.name + \"'s Overdrive\")\n            .attachTo(tokenD)\n            .tieToDocuments(args.length ? args[1].item : [])\n            .scaleToObject(1.5 * tokenScale)\n            .fadeOut(500)\n            .persist(true, { persistTokenPrototype: true })\n        .effect()\n            .file(assets[0], true)\n            .origin(\"overdrive\")\n            .name(tokenD.name + \"'s Overdrive\")\n            .attachTo(tokenD)\n            .tieToDocuments(args.length ? args[1].item : [])\n            .fadeOut(500)\n            .scaleToObject(2 * tokenScale)\n            .fadeIn(700)\n            .persist(true, { persistTokenPrototype: true })\n        .play()\n} else if (testArgs == \"off\") {\n    await Sequencer.EffectManager.endEffects({ origin: \"overdrive\", object: tokenD })\n}","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.rBz1gNwQkWu8TidN"},"cf":{"id":"temp_s3arecn2xs"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.6","coreVersion":"10.285","createdTime":null,"modifiedTime":1663588870732,"lastModifiedBy":"BHRwUaMa68cNSVcP"}}
{"name":"Resist Energy","type":"script","scope":"global","author":"SCUQoZ7lvePPTab6","img":"systems/pf2e/icons/spells/resist-energy.webp","command":"if (!args.length) {\n    const actors = canvas.tokens.controlled.flatMap((token) => token.actor ?? []);\n    if (actors.length === 0 && game.user.character) actors.push(game.user.character);\n    if (actors.length === 0) {\n        return ui.notifications.error(game.i18n.localize(\"PF2E.ErrorMessage.NoTokenSelected\"));\n    }\n\n    const ITEM_UUID = \"Compendium.pf2e.spell-effects.con2Hzt47JjpuUej\"; // Spell Effect: Resist Energy\n    const source = (await fromUuid(ITEM_UUID)).toObject();\n    source.flags = mergeObject(source.flags ?? {}, { core: { sourceId: ITEM_UUID } });\n\n    for (const actor of actors) {\n        const existing = actor.itemTypes.effect.find((e) => e.flags.core?.sourceId === ITEM_UUID);\n        if (existing) {\n            await existing.delete();\n        } else {\n            await actor.createEmbeddedDocuments(\"Item\", [source]);\n        }\n    }\n} else {\nif (args[0] === \"off\") return;\n\nconst colors = {\n    \"acid\": -80,\n    \"cold\": 45,\n    \"electricity\": -130,\n    \"fire\": -150,\n    \"sonic\": 0\n}\n\nconst item = args[1].item\nconst type = item.flags.pf2e.rulesSelections.resistEnergyType;\nconst [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args);\nconst color = colors[type]\n\nnew Sequence({moduleName: \"PF2e Animations\", softFail: true})\n    .effect()\n        .origin(item.uuid)\n        .tieToDocuments(item)\n        .attachTo(tokenD)\n        .persist()\n        .fadeIn(500)\n        .fadeOut(500)\n        .file(\"jb2a.energy_field.01.blue\", true)\n        .mask()\n        .scaleToObject(1.6 * tokenScale)\n        .loopProperty(\"spriteContainer\", \"scale.x\", { from: 0.9, to: 1.1, duration: 3000, pingPong: true, ease: \"easeInOutSine\" })\n        .loopProperty(\"spriteContainer\", \"scale.y\", { from: 0.9, to: 1.1, duration: 3000, pingPong: true, ease: \"easeInOutSine\" })\n        .filter(\"ColorMatrix\", { hue: color })\n    .effect()\n        .origin(item.uuid)\n        .attachTo(tokenD)\n        .persist()\n        .fadeIn(500)\n        .fadeOut(500)\n        .tieToDocuments(item)\n        .file(\"jb2a.energy_field.01.blue\", true)\n        .mask()\n        .scaleToObject(1.5 * tokenScale)\n        .filter(\"ColorMatrix\", { hue: color })\n    .effect()\n        .origin(item.uuid)\n        .attachTo(tokenD)\n        .persist()\n        .fadeIn(500)\n        .playIf(type === \"electricity\")\n        .fadeOut(500)\n        .tieToDocuments(item)\n        .file(\"jb2a.static_electricity.01.yellow\", true)\n        .mask()\n        .scaleToObject(1.2 * tokenScale)\n    .effect()\n        .origin(item.uuid)\n        .attachTo(tokenD)\n        .persist()\n        .fadeIn(500)\n        .playIf(type === \"cold\")\n        .fadeOut(500)\n        .tieToDocuments(item)\n        .loopProperty(\"sprite\", \"rotation\", { values: [0, 20, 0, -20, 0], duration: 2500})\n        .file(\"jb2a.shield_themed.above.ice.03.blue\", true)\n        .mask()\n        .scaleToObject(1.5 * tokenScale)\n    .effect()\n        .origin(item.uuid)\n        .attachTo(tokenD)\n        .persist()\n        .fadeIn(500)\n        .belowTokens()\n        .playIf(type === \"cold\")\n        .loopProperty(\"sprite\", \"rotation\", { values: [0, 20, 0, -20, 0], duration: 2500})\n        .fadeOut(500)\n        .tieToDocuments(item)\n        .file(\"jb2a.shield_themed.below.ice.03.blue\", true)\n        .mask()\n        .scaleToObject(1.5 * tokenScale)\n    .effect()\n        .origin(item.uuid)\n        .attachTo(tokenD)\n        .persist()\n        .fadeIn(500)\n        .repeats(3, 3000)\n        .playIf(type === \"acid\")\n        .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 4000})\n        .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 9000})\n        .spriteOffset({ x: 0.6 }, { gridUnits: true })\n        .fadeOut(500)\n        .zeroSpriteRotation()\n        .tieToDocuments(item)\n        .file(\"jb2a.liquid.blob.green\", true)\n        .scaleToObject(0.2 * tokenScale)\n        .waitUntilFinished(-500)\n    .effect()\n        .origin(item.uuid)\n        .attachTo(tokenD)\n        .fadeIn(500)\n        .playIf(type === \"acid\")\n        .fadeOut(500)\n        .belowTokens()\n        .zeroSpriteRotation()\n        .tieToDocuments(item)\n        .file(\"jb2a.liquid.splash.green\", true)\n        .scaleToObject(2 * tokenScale)\n        .waitUntilFinished()\n    .effect()\n        .origin(item.uuid)\n        .attachTo(tokenD, { align: \"top-right\" })\n        .fadeIn(500)\n        .persist()\n        .playIf(type === \"fire\")\n        .fadeOut(500)\n        .belowTokens()\n        .tieToDocuments(item)\n        .file(\"jb2a.fumes.fire.orange\", true)\n        .scaleToObject(1.5 * tokenScale)\n    .effect()\n        .origin(item.uuid)\n        .attachTo(tokenD)\n        .fadeIn(500)\n        .persist()\n        .playIf(type === \"sonic\")\n        .fadeOut(500)\n        .tieToDocuments(item)\n        .file(\"jb2a.extras.tmfx.border.circle.outpulse.02.normal\", true)\n        .scaleToObject(1.2 * tokenScale)\n    .play()\n}","ownership":{"default":0,"SCUQoZ7lvePPTab6":3},"flags":{"core":{"sourceId":"Macro.2pXIjgpMdn8VjgYS"},"advanced-macros":{"runAsGM":false,"runForEveryone":false,"runForSpecificUser":""}},"_stats":{"systemId":"pf2e","systemVersion":"4.5.0","coreVersion":"10.291","createdTime":1670340828319,"modifiedTime":1671041945085,"lastModifiedBy":"SCUQoZ7lvePPTab6"},"folder":null,"sort":0,"_id":"b8famAvfE5pMj2TM"}
{"_id":"blSU13HzwUtDVjJZ","name":"Bardic Cantripry","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/magic/sonic/scream-wail-shout-teal.webp","scope":"global","command":"// Cannot be used standalone.\n\nlet targets = args[1].hitTargets\nconst [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\nif (!args[1]?.item?.system?.slug) return;\nlet spellName = args[1]?.item?.system?.slug.replace(\"spell-effect-\", \"\").trim()\n\nif (typeof args[0] === \"string\") {\n    if (args[0] == \"on\") {\n        switch (spellName) {\n            case \"inspire-courage\": {\n                new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n                .wait(100, 5000)\n                .effect()\n                    .file(\"jb2a.wind_stream.white\", true)\n                    .name(spellName)\n                    .attachTo(tokenD)\n                    .scaleToObject(tokenScale)\n                    .rotate(90)\n                    .tieToDocuments(args.length ? args[1].item : [])\n                    .fadeOut(3000)\n                    .fadeIn(500)\n                    .mask()\n                    .filter(\"ColorMatrix\", {saturate: 1})\n                    .tint(\"#FF0000\")\n                    .persist(true, { persistTokenPrototype: true })\n                .effect()\n                    .file(\"jb2a.token_border.circle.static.blue.001\", true)\n                    .name(spellName)\n                    .attachTo(tokenD)\n                    .opacity(0.6)\n                    .tieToDocuments(args.length ? args[1].item : [])\n                    .fadeOut(3000)\n                    .fadeIn(500)\n                    .scaleToObject(2 * tokenScale)\n                    .filter(\"ColorMatrix\", {saturate: 1})\n                    .tint(\"#FF0000\")\n                    .persist(true, { persistTokenPrototype: true })\n                .play()\n                break;\n            }\n            case \"inspire-defense\": {\n                let randomD = Sequencer.Helpers.random_int_between(0, 360)\n                new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n                .wait(100, 5000)\n                .effect()\n                    .file(\"jb2a.shield_themed.below.ice.01.blue\", true)\n                    .name(spellName)\n                    .belowTokens()\n                    .rotate(randomD)\n                    .tieToDocuments(args.length ? args[1].item : [])\n                    .attachTo(tokenD)\n                    .fadeIn(3000)\n                    .fadeOut(3000)\n                    .scaleToObject(1.5 * tokenScale)\n                    .persist(true, { persistTokenPrototype: true })\n                .effect()\n                    .file(\"jb2a.shield_themed.above.ice.01.blue\", true)\n                    .name(spellName)\n                    .attachTo(tokenD)\n                    .rotate(randomD)\n                    .tieToDocuments(args.length ? args[1].item : [])\n                    .fadeIn(3000)\n                    .fadeOut(3000)\n                    .scaleToObject(1.5 * tokenScale)\n                    .persist(true, { persistTokenPrototype: true })\n                .play()\n                break;\n            }\n        }\n    } else if (args[0] == \"off\") {\n        await Sequencer.EffectManager.endEffects({ name: spellName, object: token })\n    }\n} else {\n    let target = args[1].hitTargets[0] ?? args[1].sourceToken;\n\n    let songOfMarching = Sequencer.EffectManager.getEffects({ name: \"Song of Marching\", source: token })[0]\n    let dirgeOfDoom = Sequencer.EffectManager.getEffects({ name: \"Dirge of Doom\", source: token })[0]\n    if (songOfMarching || dirgeOfDoom) {\n        let menu = await warpgate.menu({\n            inputs: [{ type: 'info', label: `End ${songOfMarching ? \"Song of Marching\" : dirgeOfDoom ? \"Dirge of Doom\" : \"an unknown spell\"}?` },],\n            buttons: [{\n                label: 'End',\n                value: 1\n            }, {\n                label: 'Keep',\n                value: 2\n            }]\n        }, { title: \"Bard Cantrip\" })\n        if (menu.buttons === 1) {\n            Sequencer.EffectManager.endEffects({ name: `Bardic Cantrips - ${songOfMarching ? \"Song of Marching\" : dirgeOfDoom ? \"Dirge of Doom\" : \"*\"}`, source: token })\n        }\n    } else {\n        switch (spellName) {\n            case \"hymn-of-healing\": {\n                new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n                    .effect()\n                    .atLocation(tokenD)\n                    .scaleToObject(2)\n                    .file(\"jb2a.bardic_inspiration.greenorange\", true)\n                    .waitUntilFinished(-1000)\n                    .effect()\n                    .atLocation(target)\n                    .scaleToObject(1.5)\n                    .file(\"jb2a.healing_generic.400px.green\", true)\n                    .play()\n                break;\n            }\n            case \"inspire-competence\": {\n                new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n                    .effect()\n                    .atLocation(tokenD)\n                    .scaleToObject(2)\n                    .file(\"jb2a.bardic_inspiration.pink\", true)\n                    .effect()\n                    .atLocation(target)\n                    .scaleToObject(2)\n                    .file(\"jb2a.bardic_inspiration.pink\", true)\n                    .play()\n                break;\n            }\n            case \"inspire-courage\": {\n                let seq = new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n                    .effect()\n                    .atLocation(tokenD)\n                    .scaleToObject(2)\n                    .file(\"jb2a.bardic_inspiration.dark_red\", true)\n                targets.forEach((element, index) => {\n                    seq.effect()\n                        .atLocation(targets[index])\n                        .scaleToObject(1.5)\n                        .file(\"jb2a.divine_smite.caster.blueyellow\", true)\n                })\n                seq.play()\n                break;\n            }\n            case \"inspire-defense\": {\n                let seq = new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n                    .effect()\n                    .atLocation(tokenD)\n                    .scaleToObject(2)\n                    .file(\"jb2a.bardic_inspiration.blueyellow\", true)\n                targets.forEach((element, index) => {\n                    seq.effect()\n                        .atLocation(targets[index])\n                        .scaleToObject(1.5)\n                        .file(\"jb2a.divine_smite.caster.blueyellow\", true)\n                })\n                seq.play()\n                break;\n            }\n            case \"allegro\": {\n                new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n                    .effect()\n                    .atLocation(tokenD)\n                    .scaleToObject(2)\n                    .file(\"jb2a.bardic_inspiration.blueyellow\", true)\n                    .effect()\n                    .atLocation(target)\n                    .scaleToObject(1.5)\n                    .file(\"jb2a.divine_smite.caster.blueyellow\", true)\n                    .play()\n                break;\n            }\n            case \"song-of-marching\": {\n                new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n                    .effect()\n                    .atLocation(tokenD)\n                    .scaleToObject(2)\n                    .file(\"jb2a.bardic_inspiration.greenorange\", true)\n                    .effect()\n                    .atLocation(tokenD)\n                    .attachTo(tokenD)\n                    .belowTokens()\n                    .size({ width: 3, height: 3 }, { gridUnits: true })\n                    .scaleIn(0, 1000)\n                    .rotateIn(180, 1000)\n                    .scaleOut(0, 1000)\n                    .rotateOut(180, 1000)\n                    .persist()\n                    .opacity(0.5)\n                    .persist()\n                    .name(\"Bardic Cantrips - Song of Marching\")\n                    .file(\"jb2a.markers.music.greenorange\", true)\n                    .play()\n                ui.notifications.info(\"Persistent Effect created, once you don't want it playing you can remove it in <i class=\\\"fas fa-film\\\"></i> Sequencers Effect Manager.\")\n                break;\n            }\n            case \"dirge-of-doom\": {\n                new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n                    .effect()\n                    .atLocation(tokenD)\n                    .scaleToObject(2)\n                    .file(\"jb2a.bardic_inspiration.dark_red\", true)\n                    .effect()\n                    .atLocation(tokenD)\n                    .attachTo(tokenD)\n                    .belowTokens()\n                    .size({ width: 15, height: 15 }, { gridUnits: true })\n                    .scaleIn(0, 1000)\n                    .scaleOut(0, 1000)\n                    .fadeIn(900)\n                    .fadeOut(900)\n                    .persist()\n                    .opacity(0.5)\n                    .persist()\n                    .name(\"Bardic Cantrips - Dirge of Doom\")\n                    .file(\"jb2a.spirit_guardians.dark_red.ring\", true)\n                    .effect()\n                    .atLocation(tokenD)\n                    .attachTo(tokenD)\n                    .belowTokens()\n                    .persist()\n                    .scaleToObject(3)\n                    .noLoop(true)\n                    .scaleOut(0, 600)\n                    .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 6000 })\n                    .endTime(600)\n                    .name(\"Bardic Cantrips - Dirge of Doom\")\n                    .file(\"jb2a.divine_smite.caster.dark_red\", true)\n                    .play()\n                ui.notifications.info(\"Persistent Effect created, once you don't want it playing you can remove it in <i class=\\\"fas fa-film\\\"></i> Sequencers Effect Manager.\")\n                break;\n            }\n            case \"song-of-strength\": {\n                let seq = new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n                    .effect()\n                    .atLocation(tokenD)\n                    .scaleToObject(2)\n                    .file(\"jb2a.bardic_inspiration.greenorange\", true)\n                targets.forEach((element, index) => {\n                    seq.effect()\n                        .atLocation(targets[index])\n                        .scaleToObject(1.5)\n                        .file(\"jb2a.divine_smite.caster.greenyellow\", true)\n                })\n                seq.play()\n                break;\n            }\n            default: console.log(`Can't find \"${spellName}\", probably unimplemented!`)\n        }\n    }\n}","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.JX5DMXhKxzDOjyRw"},"cf":{"id":"temp_6gsujam4gp6"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.6.8","coreVersion":"10.291","createdTime":null,"modifiedTime":1675624430196,"lastModifiedBy":"SCUQoZ7lvePPTab6"}}
{"name":"Summon Anything","type":"script","scope":"global","author":"BHRwUaMa68cNSVcP","img":"icons/magic/earth/construct-stone.webp","command":"const [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\n\nawait pf2eAnimations.playerSummons({\n    args,\n    spawnArgs: {}\n})","ownership":{"default":2,"BHRwUaMa68cNSVcP":3},"flags":{"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.5MmsrQlckT9J5GGI"},"cf":{"id":"temp_3t4j7cyld29"}},"_stats":{"systemId":"pf2e","systemVersion":"4.3.4","coreVersion":"10.290","createdTime":1663028898956,"modifiedTime":1668524420765,"lastModifiedBy":"SCUQoZ7lvePPTab6"},"folder":null,"sort":0,"_id":"emzJwDdpyYpuYkcm"}
{"name":"Blacklist Animations","type":"script","scope":"global","author":"SCUQoZ7lvePPTab6","img":"icons/svg/cancel.svg","command":"const blacklist = await game.settings.get(\"pf2e-jb2a-macros\", \"blacklist\")\n\nconst options = await warpgate.menu(\n    {\n        inputs: [\n            {\n                type: \"header\",\n                label: \"Menu Wide Blacklists\"\n            },\n            {\n                type: \"info\",\n                label: \"For blacklisting entire sections of the PF2e Animations module.\"\n            },\n            {\n                type: \"checkbox\",\n                label: \"Melee\",\n                options: blacklist.menu.includes(\"melee\")\n            },\n            {\n                type: \"checkbox\",\n                label: \"Range\",\n                options: blacklist.menu.includes(\"range\")\n            },\n            {\n                type: \"checkbox\",\n                label: \"On Token\",\n                options: blacklist.menu.includes(\"ontoken\")\n            },\n            {\n                type: \"checkbox\",\n                label: \"Templates\",\n                options: blacklist.menu.includes(\"templatefx\")\n            },\n            {\n                type: \"checkbox\",\n                label: \"Preset\",\n                options: blacklist.menu.includes(\"preset\")\n            },\n            {\n                type: \"checkbox\",\n                label: \"Active Effects\",\n                options: blacklist.menu.includes(\"aefx\")\n            },\n            {\n                type: \"header\",\n                label: \"Specific Animation Names\"\n            },\n            {\n                type: \"info\",\n                label: \"For blacklisting specific animations from the PF2e Animations module. You can put multiple entries using <code>,</code> to separate them.\"\n            },\n            {\n                type: \"text\",\n                label: \"Specific Animations\",\n                options: blacklist.entries.join(\", \")\n            }\n        ],\n        buttons: [\n            {\n                label: \"Ok\",\n                value: 1\n            },\n            {\n                label: \"Ok and Update Animations\",\n                value: 2\n            }\n        ]\n    },\n    {\n        title: \"Change Blacklist Settings\"\n    }\n)\n\nconsole.log(options)\n\nif (options.buttons != false) {\n    const o = options.inputs\n    const newSettings = {\n        menu: [],\n        entries: [],\n    }\n\n    newSettings.menu.push(o[2] ? \"melee\" : null)\n    newSettings.menu.push(o[3] ? \"range\" : null)\n    newSettings.menu.push(o[4] ? \"ontoken\" : null)\n    newSettings.menu.push(o[5] ? \"templatefx\" : null)\n    newSettings.menu.push(o[6] ? \"preset\" : null)\n    newSettings.menu.push(o[7] ? \"aefx\" : null)\n\n    newSettings.entries = (o[10].split(\",\").map(x => x.trim()))\n\n    await game.settings.set(\"pf2e-jb2a-macros\", \"blacklist\", newSettings)\n\n    if (options.buttons === 2) {\n        new autorecUpdateFormApplication().render(true)\n    }\n}","ownership":{"default":0,"SCUQoZ7lvePPTab6":3},"flags":{"advanced-macros":{"runAsGM":false,"runForEveryone":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.bWQy4FsSHqIz5h5z"}},"_stats":{"systemId":"pf2e","systemVersion":"4.5.1","coreVersion":"10.291","createdTime":1671039912167,"modifiedTime":1671735866149,"lastModifiedBy":"SCUQoZ7lvePPTab6"},"folder":null,"sort":0,"_id":"esYTq7TExwwQwodx"}
{"_id":"gU05Ao19uKUf5H2h","name":"Rage","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/skills/wounds/injury-face-impact-orange.webp","scope":"global","command":"// Original Author: EskieMoh#2969\n// Remastered by: MrVauxs#8622\n\nconst [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\n\nlet testArgs\n\nif (!args.length) testArgs = await Sequencer.EffectManager.getEffects({ origin: \"rage\", source: tokenD }).length ? \"off\" : \"on\";\n\nconst assets = game.modules.get(\"JB2A_DnD5e\")?.active\n    ? [\"jb2a.particles.outward.greenyellow.01.03\", \"jb2a.token_border.circle.static.blue.007\"]\n    : [\"jb2a.particles.outward.orange.01.03\", \"jb2a.token_border.circle.static.orange.012\"];\n\nlet preload = [\"jb2a.extras.tmfx.outpulse.circle.02.normal\", \"jb2a.impact.ground_crack.orange.01\", \"jb2a.impact.ground_crack.still_frame.01\", \"jb2a.wind_stream.white\"].concat(assets)\n\nawait Sequencer.Preloader.preloadForClients(preload)\n\nif (args[0] === \"on\" || testArgs === \"on\") {\n    new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n        .effect()\n            .file(\"jb2a.extras.tmfx.outpulse.circle.02.normal\", true)\n            .atLocation(tokenD)\n            .size(4, {gridUnits: true})\n            .opacity(0.25)\n        .effect()\n            .file(\"jb2a.impact.ground_crack.orange.01\", true)\n            .atLocation(tokenD)\n            .belowTokens()\n            .filter(\"ColorMatrix\", {hue: -15,saturate: 1})\n            .size(3.5, {gridUnits: true})\n            .zIndex(1)\n        .effect()\n            .file(\"jb2a.impact.ground_crack.still_frame.01\", true)\n            .atLocation(tokenD)\n            .belowTokens()\n            .fadeIn(2000)\n            .filter(\"ColorMatrix\", {hue: -15,saturate: 1})\n            .size(3.5, {gridUnits: true})\n            .fadeOut(20000)\n            .zIndex(0)\n        .effect()\n            .file(\"jb2a.wind_stream.white\", true)\n            .atLocation(tokenD, {offset: {y:-75}})\n            .size(1.75, {gridUnits: true})\n            .rotate(90)\n            .opacity(0.9)\n            .filter(\"ColorMatrix\", {saturate: 1})\n            .tint(\"#FF0000\")\n            .loopProperty(\"sprite\", \"position.y\", { from: -5, to: 5, duration: 50, pingPong: true})\n            .duration(8000)\n            .fadeOut(3000)\n        .effect()\n            .file(assets[0], true)\n            .atLocation(tokenD)\n            .scaleToObject(2.5)\n            .filter(\"ColorMatrix\", {hue: -15,saturate: 1})\n            .opacity(1)\n            .fadeIn(200)\n            .tint(assets[0] === \"jb2a.particles.outward.greenyellow.01.03\" ? \"#FF0000\" : \"\")\n            .fadeOut(3000)\n            .loopProperty(\"sprite\", \"position.x\", { from: -5, to: 5, duration: 50, pingPong: true})\n            .animateProperty(\"sprite\", \"position.y\", { from: 0, to: -100, duration: 6000, pingPong: true, delay:2000})\n            .duration(8000)\n        .effect()\n            .file(\"jb2a.wind_stream.white\", true)\n            .atLocation(tokenD)\n            .origin(\"rage\")\n            .name(tokenD.name + \"'s Rage\")\n            .attachTo(tokenD)\n            .tieToDocuments(args.length ? args[1].item : [])\n            .scaleToObject(tokenScale)\n            .rotate(90)\n            .fadeOut(3000)\n            .opacity(1)\n            .mask()\n            .filter(\"ColorMatrix\", {saturate: 1})\n            .tint(\"#FF0000\")\n            .persist(true, { persistTokenPrototype: true })\n        .effect()\n            .file(assets[1], true)\n            .atLocation(tokenD)\n            .origin(\"rage\")\n            .name(tokenD.name + \"'s Rage\")\n            .attachTo(tokenD)\n            .tieToDocuments(args.length ? args[1].item : [])\n            .opacity(0.6)\n            .fadeOut(3000)\n            .scaleToObject(2 * tokenScale)\n            .filter(\"ColorMatrix\", {saturate: 1})\n            .tint(\"#FF0000\")\n            .persist(true, { persistTokenPrototype: true })\n        .play()\n} else if (testArgs === \"off\") {\n    Sequencer.EffectManager.endEffects({ origin: \"rage\", source: tokenD })\n}","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.hqr7muUDzlQbaZfg"},"cf":{"id":"temp_s3arecn2xs"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.2.5","coreVersion":"10.288","createdTime":null,"modifiedTime":1665496945364,"lastModifiedBy":"SCUQoZ7lvePPTab6"}}
{"_id":"j1cUixlhlZBbeM1r","name":"Lightning Bolt","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/lightning-bolt.webp","scope":"global","command":"// Original Author: EskieMoh#2969\n// Rebuilt by: MrVauxs#8622\n// Requires a pre-placed template.\n\nconst [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\n\nconst template = args[1]?.templateData ?? canvas.templates.placeables[canvas.templates.placeables.length - 1];\nnew Sequence({moduleName: \"PF2e Animations\", softFail: true})\n    .effect()\n        .file(\"jb2a.divine_smite.caster.blueyellow\", true)\n        .filter(\"ColorMatrix\", {\n            hue: 100,\n            contrast: 1,\n            saturate: 0     \n        })\n        .tint(\"#7DF9FF\")\n        .attachTo(tokenD)\n        .scaleToObject(2 * tokenScale)\n        .zIndex(2)\n        .waitUntilFinished(-500)\n    .effect()\n        .file(\"jb2a.static_electricity.03.blue\", true)\n        .attachTo(tokenD)\n        .scaleToObject(1.5 * tokenScale)\n        .fadeOut(500)\n        .repeats(2, 4000, 4000)\n    .effect()\n        .file(\"jb2a.lightning_ball.blue\", true)\n        .atLocation(tokenD)\n        .fadeOut(500)\n        .duration(3000)\n        .scale(0.3)\n        .center()\n        .animateProperty(\"spriteContainer\", \"position.x\", { from: 0, to: 0.32, duration: 1000, delay: 500, gridUnits: true, ease: \"easeOutBack\" })\n        .rotateTowards(template, {cacheLocation: true})\n        .zIndex(1)\n        .waitUntilFinished(-1000)\n    .effect()\n        .file(\"jb2a.lightning_ball.blue\", true)\n        .atLocation(tokenD)\n        .fadeIn(500)\n        .fadeOut(500)\n        .anchor({x:0.24})\n        .duration(3000)\n        .scale(0.3)\n        .rotateTowards(template, {cacheLocation: true})\n        .zIndex(4)\n    .wait(2000)\n    .effect()\n        .file(\"jb2a.impact.011.blue\", true)\n        .atLocation(tokenD) \n        .anchor({x:0.15})\n        .scale(0.3)\n        .rotateTowards(template, {cacheLocation: true})\n        .zIndex(3)\n    .effect()\n        .file(\"jb2a.lightning_bolt.wide.blue\", true)\n        .atLocation(template, {cacheLocation: true})\n        .scale(0.45)\n        .stretchTo(template, {onlyX: true, tiling: true, cacheLocation: true})\n        .zIndex(3)\n    .play();","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.0fUIZ0XifYGrR9oY"},"cf":{"id":"temp_brzxllxt18s"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.4","coreVersion":"10.285","createdTime":null,"modifiedTime":1663184759756,"lastModifiedBy":"BHRwUaMa68cNSVcP"}}
{"name":"Dimension Door","type":"script","scope":"global","author":"SCUQoZ7lvePPTab6","img":"systems/pf2e/icons/spells/dimension-door.webp","command":"if (!game.modules.get(\"jb2a_patreon\")?.active) {\n    return ui.notifications.error(pf2eAnimations.localize(\"notifications.noPrem\"))\n}\n\nconst [token, tokenScale] = await pf2eAnimations.macroHelpers(args)\n\nlet spellLevel = args[0]?.data?.flags?.pf2e?.casting?.level ?? 11;\n\nif (spellLevel === 11 && args.length !== 0) pf2eAnimations.debug(\"Dimension Door Macro\", \"I have args yet I don't have a proper spell level, defaulting to 11, help?\");\n\nlet range = spellLevel < 5 ? 120 : 1000\n\nconst location = await pf2eAnimations.crosshairs(\n    { token, item: args[1]?.item },\n    { range, openSheet: false, noCollision: spellLevel < 5 }\n)\n\nif (!location) return;\n\nawait Sequencer.Preloader.preloadForClients([\"jb2a.magic_signs.rune.conjuration.intro.blue\", \"jb2a.portals.vertical.vortex.blue\"])\nconst portalScale = token.w / canvas.grid.size * 0.6;\nnew Sequence({moduleName: \"PF2e Animations\", softFail: true})\n    .effect()\n        .file('jb2a.magic_signs.rune.conjuration.intro.blue', true)\n        .atLocation(token)\n        .scale(portalScale * 0.7)\n        .opacity(0.7)\n        .waitUntilFinished(-200)\n    .effect()\n        .file('jb2a.portals.vertical.vortex.blue', true)\n        .atLocation(token, {cacheLocation: true})\n        .name(\"Portal In\")\n        .center()\n        .spriteOffset({ y: -0.5 }, { gridUnits: true })\n        .rotateTowards(location, {rotationOffset: 90})\n        .scale(portalScale)\n        .duration(1200)\n        .fadeIn(200)\n        .fadeOut(500)\n        .belowTokens()\n    .effect() //location.rotationFromOrigin\n        .from(token)\n        .atLocation(token)\n        .shape(\"circle\", { radius: 0.8, gridUnits: true, fillColor: \"#ffffff\", isMask: true })\n        .rotate(-location.rotationFromOrigin)\n        .spriteRotation(-location.rotationFromOrigin)\n        .duration(1000)\n        .animateProperty(\"sprite\", \"position.y\", { from: 0, to: -1, duration: 750, gridUnits: true, fromEnd: true})\n        .scale(token.document.toObject().scale)\n        .waitUntilFinished(-750)\n    .animation()\n        .on(token)\n        .opacity(0)\n    .effect()\n        .file('jb2a.portals.vertical.vortex.blue', true)\n        .atLocation(location)\n        .name(\"Portal Out\")\n        .center()\n        .spriteOffset({ y: -0.5 }, { gridUnits: true })\n        .rotateTowards(token, {rotationOffset: 90})\n        .scale(portalScale)\n        .duration(1200)\n        .fadeIn(200)\n        .fadeOut(500)\n        .belowTokens()\n     .effect() //location.rotationFromOrigin\n        .from(token)\n        .scale(token.document.toObject().scale)\n        .atLocation(location)\n        .shape(\"circle\", { radius: 0.8, gridUnits: true, fillColor: \"#ffffff\", isMask: true })\n        .rotate(-location.rotationFromOrigin)\n        .spriteRotation(-location.rotationFromOrigin)\n        .animateProperty(\"sprite\", \"position.y\", { from: 1, to: 0, duration: 750, gridUnits: true})\n        .duration(1000)\n        .waitUntilFinished(-250)\n    .animation()\n        .teleportTo(location) // Teleport to location\n        .snapToGrid()\n        .on(token)\n        .opacity(1)\n    .thenDo(() => {\n        token.actor.sheet.maximize()\n    })\n    .play()","ownership":{"default":0,"SCUQoZ7lvePPTab6":3},"flags":{"advanced-macros":{"runAsGM":false,"runForEveryone":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.OduYqAgHeH3btTZP"}},"_stats":{"systemId":"pf2e","systemVersion":"4.6.8","coreVersion":"10.291","createdTime":1671570393247,"modifiedTime":1675627634139,"lastModifiedBy":"SCUQoZ7lvePPTab6"},"folder":null,"sort":0,"_id":"kwbdUhAzZv8mv1cX"}
{"_id":"kz6IN257FJ58SgmE","name":"Harm","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/harm.webp","scope":"global","command":"// Cannot be used standalone.\nlet diceNumber = args[0].rolls[0].terms[0].number\nlet caster = args[1].sourceToken\nlet spellTarget = Array.from(game.user.targets)[0]\nlet doNotTargetCaster = false\n\nfunction getSpellVariant() {\n    const spellVariants = args[0]?.item?.overlays?.contents;\n    if (!spellVariants) return ui.notifications.error(\"No variants found! Check if you have updated your Harm spell to the newest version. It's been a while.\")\n    const originChatMessage = game.messages.filter(message => !message.isRoll && message.item?.original?.id === args[0].item.id).pop();\n    const chosenVariantId = originChatMessage.item.appliedOverlays.get('override');\n    let spellVariant = spellVariants.find(variant => variant._id === chosenVariantId);\n    if (spellVariant) {\n        if (spellVariant.system.time.value === \"1\") {\n            oneActionHarm();\n        } else if (spellVariant.system.time.value === \"2\") {\n            twoActionHarm()\n        } else if (spellVariant.system.time.value === \"3\") {\n            d3.render(true);\n        }\n    } else {\n        console.log('No spell variants found.')\n    }\n}\n\nfunction getModeOfBeing(actor) {\n    let modeOfBeing = actor.modeOfBeing;\n    if (actor.traits.find(trait => trait === 'automaton') || actor.ancestry?.name === 'Poppet') modeOfBeing = 'living';\n    if (actor.traits.find(trait => trait === 'dhampir')) modeOfBeing = 'undead';\n\n    return modeOfBeing;\n}\n\nlet d3 = new Dialog({\n    title: \"Harm\",\n    content: `<p>Do you want to target yourself?</p>`,\n    buttons: {\n        one: {\n            label: \"Yes\",\n            callback: () => {\n                doNotTargetCaster = false\n                threeActionHarm()\n            }\n        },\n        two: {\n            label: \"No\",\n            callback: () => {\n                doNotTargetCaster = true\n                threeActionHarm()\n            }\n        }\n    },\n    default: \"No\"\n})\n\nfunction main() {\n    if (caster != undefined) {\n        getSpellVariant();\n    } else {\n        ui.notifications.error(`You must select the token of the caster!`)\n        return;\n    }\n}\nmain();\n\n//Defining unique behavior for each kind of effect\nfunction oneActionHarm() {\n    //error checking for multiple targets\n    if (game.user.targets.size != 1) {\n        ui.notifications.error(\"Select only one target!\")\n        return;\n    }\n    if (canvas.grid.measureDistance(caster, spellTarget) < 7.5) {\n        console.log(\"Close enough to touch!\")\n        // checks whether the target is undead or not\n        oneActionHarmAnimation()\n    } else {\n        console.log(`Too far to touch!`);\n        ui.notifications.error(`Your target is further than touch distance away! Try again.`);\n        return;\n    }\n}\n\nfunction twoActionHarm() {\n    //error checking for multiple targets\n    if (game.user.targets.size != 1) {\n        ui.notifications.error(\"Select only one target!\")\n        return;\n    }\n    if (canvas.grid.measureDistance(caster, spellTarget) <= 30) {\n        console.log(\"Within 30 feet!\")\n        // checks whether the target is undead or not\n        twoActionHarmAnimation()\n    } else {\n        console.log(`Farther than 30 feet!`);\n        ui.notifications.error(`Your target is further than 30 feet away! Try again.`);\n        return;\n    }\n}\n\nfunction threeActionHarm() {\n    //divide up all tokens within range into an array for living and an array for undead\n    let tokensOnMap = Array.from(canvas.tokens.placeables)\n    let tokensInRange = tokensOnMap.filter(distance => canvas.grid.measureDistance(distance, caster) <= 30)\n    let undeadTokensInRange = []\n    let livingTokensInRange = []\n\n    for (let i = 0; i < tokensInRange.length; i++) {\n        if (getModeOfBeing(tokensInRange[i].actor) === 'undead') {\n            undeadTokensInRange.push(tokensInRange[i])\n        } else if (getModeOfBeing(tokensInRange[i].actor) === 'living') {\n            if (doNotTargetCaster) {\n                if (!(caster === tokensInRange[i])) livingTokensInRange.push(tokensInRange[i])\n            } else livingTokensInRange.push(tokensInRange[i])\n        }\n    }\n    console.log(undeadTokensInRange)\n    console.log(livingTokensInRange)\n    new Sequence({ moduleName: \"PF2e Animations\", softFail: true })\n        .effect()\n        .atLocation(caster)\n        .randomRotation()\n        .size(14, { gridUnits: true })\n        .file(\"jb2a.healing_generic.burst.purplepink\", true)\n        .waitUntilFinished(-1500)\n        .play()\n    for (let i = 0; i < undeadTokensInRange.length; i++) {\n        new Sequence({ moduleName: \"PF2e Animations\", softFail: true })\n            .effect()\n            .atLocation(undeadTokensInRange[i])\n            .randomRotation()\n            .scaleToObject(1.25)\n            .file(\"jb2a.healing_generic.200px.purple\", true)\n            .play()\n    }\n    for (let i = 0; i < livingTokensInRange.length; i++) {\n        new Sequence({ moduleName: \"PF2e Animations\", softFail: true })\n            .effect()\n            .atLocation(livingTokensInRange[i])\n            .randomRotation()\n            .scaleToObject(1.25)\n            .file(\"jb2a.impact_themed.skull.pinkpurple\", true)\n            .play()\n    }\n}\n\n//Defining animations for each kind of effect\nfunction oneActionHarmAnimation() {\n    if (getModeOfBeing(spellTarget.actor) === 'undead') {\n        //trigger energy strand from caster to target, then trigger healing burst on target\n        new Sequence({ moduleName: \"PF2e Animations\", softFail: true })\n            .effect()\n            .atLocation(spellTarget)\n            .randomRotation()\n            .scaleToObject(1.25)\n            .file(\"jb2a.impact_themed.skull.pinkpurple\", true)\n            .play()\n    } else if (getModeOfBeing(spellTarget.actor) === 'living') {\n        //trigger energy strand from caster to target, then trigger damaging burst on target\n        new Sequence({ moduleName: \"PF2e Animations\", softFail: true })\n            .effect()\n            .atLocation(spellTarget)\n            .randomRotation()\n            .scaleToObject(1.25)\n            .file(\"jb2a.healing_generic.200px.purple\", true)\n            .play()\n    }\n}\nfunction twoActionHarmAnimation() {\n    if (getModeOfBeing(spellTarget.actor) === 'undead') {\n        //trigger energy strand from caster to target, then trigger damaging burst on target\n        new Sequence({ moduleName: \"PF2e Animations\", softFail: true })\n            .effect()\n            .atLocation(caster)\n            .stretchTo(spellTarget)\n            .file(\"jb2a.energy_strands.range.standard.dark_purple\", true)\n            .waitUntilFinished(-1000)\n            .effect()\n            .atLocation(spellTarget)\n            .randomRotation()\n            .scaleToObject(1.25)\n            .file(\"jb2a.healing_generic.200px.purple\", true)\n            .play()\n    } else if (getModeOfBeing(spellTarget.actor) === 'living') {\n        //trigger energy strand from caster to target, then trigger healing burst on target\n        new Sequence({ moduleName: \"PF2e Animations\", softFail: true })\n            .effect()\n            .atLocation(caster)\n            .stretchTo(spellTarget)\n            .file(\"jb2a.energy_strands.range.standard.dark_purple\", true)\n            .waitUntilFinished(-1000)\n            .effect()\n            .atLocation(spellTarget)\n            .randomRotation()\n            .scaleToObject(1.25)\n            .file(\"jb2a.impact_themed.skull.pinkpurple\", true)\n            .play()\n    }\n}\nfunction threeActionHarmAnimation() {\n\n}","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"exportSource":{"world":"hogwarts","system":"pf2e","coreVersion":"9.269","systemVersion":"3.10.2.11602"},"core":{"sourceId":"Macro.OHxEXANJvgNk9uTU"},"cf":{"id":"temp_6gsujam4gp6"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.6.8","coreVersion":"10.291","createdTime":null,"modifiedTime":1675515421961,"lastModifiedBy":"SCUQoZ7lvePPTab6"}}
{"_id":"lmKZBrfclq8V6sJI","name":"Dimension Jumps","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/magic/movement/pinwheel-turning-blue.webp","scope":"global","command":"// Cannot be used standalone.\n\nlet opts = {};\nlet seq = new Sequence({moduleName: \"PF2e Animations\", softFail: true})\nconst [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\nlet movementSpeed = args[0].actor.attributes.speed.total;\n\n// Determine spell level, this is BS though.\n// What I am basically doing is searching the latest messages for a spellLevel tag and see if they have it. Whichever is latest wins, rather than which one caused the damage roll.\n// The flag is also created by checking the HTML of the spell than the actual data, since there is no official spell level flag.\nlet spellLevel = args[0].data.flags.pf2e?.casting?.level ?? [...args[0].collection].filter(x => x.data.flags?.pf2e?.casting).slice(-1)[0].data.flags.pf2e.casting.level\n\n// Determine Spells Range\nswitch (args[0].item.system.slug) {\n    case \"dimensional-assault\": opts.range = movementSpeed / 2; break;\n    case \"snare-hopping\": opts.range = 10 * spellLevel; opts.reverseTeleport = true; break;\n    case \"abundant-step\": opts.range = Math.max(15, movementSpeed); break;\n    case \"blink-charge\": opts.range = (spellLevel - 4) * 60; break;\n    case \"collective-transposition\": opts.range = 30; opts.reverseTeleport = true; opts.possibleTargets = 2 + (spellLevel - 6); break;\n    case \"dimension-door\": opts.range = spellLevel < 5 ? 120 : 1000; break;\n    case \"dimensional-steps\": opts.range = 20 + 5 * (spellLevel - 4); break;\n    case \"shadow-jump\": opts.range = 120; break;\n    case \"teleport\": opts.range = 100 * (10 * (spellLevel - 6)); break;\n    case \"unexpected-transposition\": opts.range = 30; opts.switcheroo = true; ui.notifications.info(\"PF2e Animations | Select a target to switch places with!\"); break;\n    case \"terrain-transposition\": {\n        let rangeMenu = await warpgate.menu({\n            buttons: [{\n                label: 'Yes',\n                value: 2\n            }, {\n                label: 'No',\n                value: 1\n            }]\n        }, {\n            title: 'Are you in Favoured Terrain?'\n        })\n        opts.range = 90 * rangeMenu.buttons\n        break;\n    }\n}\n\nconsole.log(opts)\n\ntokenD.actor.sheet.minimize();\nconst tokenCenter = tokenD.center;\nlet cachedDistance = 0;\nconst checkDistance = async (crosshairs) => {\n\n    while (crosshairs.inFlight) {\n\n        //wait for initial render\n        await warpgate.wait(100);\n\n        const ray = new Ray(tokenCenter, crosshairs);\n\n        const distance = canvas.grid.measureDistances([{ ray }], { gridSpaces: true })[0]\n\n        //only update if the distance has changed\n        if (cachedDistance !== distance) {\n            cachedDistance = distance;\n            if (distance > opts.range) {\n                crosshairs.icon = 'icons/svg/hazard.svg'\n            } else {\n                crosshairs.icon = tokenD.data.texture.src\n            }\n            crosshairs.draw()\n            crosshairs.label = `${distance} ft`\n        }\n    }\n}\n\nconst callbacks = {\n    show: checkDistance\n}\n\nlet targetLocation = await warpgate.crosshairs.show({ size: tokenD.data.width, icon: tokenD.data.texture.src, label: '0 ft.', interval: tokenD.data.width % 2 === 0 ? 1 : -1 }, callbacks)\n\nif (targetLocation.cancelled) { tokenD.actor.sheet.maximize(); return; }\nif (cachedDistance > opts.range) {\n    ui.notifications.error(`Your teleport has a maximum range of ${opts.range} ft. Last try.`)\n    targetLocation = await warpgate.crosshairs.show({ size: tokenD.data.width, icon: tokenD.data.texture.src, label: '0 ft.', interval: -1 }, callbacks)\n}\nif (cachedDistance > opts.range) {\n    ui.notifications.error(`Your teleport has a maximum range of ${opts.range} ft.`)\n    return\n}\n\nlet targetToken = warpgate.crosshairs.collect(targetLocation).filter(token => !canvas.tokens.controlled.map(t => t.id).includes(tokenD.id))[0]?.object;\n\nswitch (args[0].item.system.slug) {\n    case \"dimensional-assault\": {\n        await Sequencer.Preloader.preloadForClients([\"jb2a.misty_step.02.purple\", \"jb2a.misty_step.01.purple\", \"jb2a.energy_strands.range.standard.purple.04\"])\n        seq.effect()\n            .file(\"jb2a.misty_step.01.purple\", true)\n            .atLocation(tokenD)\n            .scaleToObject(2)\n            .wait(600)\n        .animation()\n            .on(tokenD)\n            .opacity(0)\n            .waitUntilFinished()\n        .effect()\n            .file(\"jb2a.energy_strands.range.standard.purple.04\", true)\n            .atLocation(tokenD)\n            .stretchTo(targetLocation)\n        .animation()\n            .on(tokenD)\n            .teleportTo(targetLocation)\n            .snapToGrid()\n            .waitUntilFinished()\n        .effect()\n            .file(\"jb2a.misty_step.02.purple\", true)\n            .attachTo(tokenD)\n            .scaleToObject(2)\n            .wait(1500)\n        .animation()\n            .on(tokenD)\n            .opacity(1.0)\n        break;\n    };\n    case \"snare-hopping\": {\n        break;\n    };\n    case \"ki-rush\":\n    case \"abundant-step\": {\n        seq.effect()\n            .file(tokenD.data.texture.src, true)\n            .atLocation(tokenD)\n            .attachTo(tokenD, {bindAlpha: false})\n            .loopProperty(\"spriteContainer\", \"position.x\", { values: [0, 15, 0 -15], duration: 50})\n            .loopProperty(\"spriteContainer\", \"position.y\", { values: [0, -15, 0, 15], duration: 50})\n            .from(tokenD)\n            .filter(\"Blur\", { blurX: 5, blurY: 0, quality: 5 })\n            .fadeIn(500)\n            .fadeOut(500)\n            .wait(300)\n        .animation()\n            .opacity(0)\n            .on(tokenD)\n            .moveTowards(targetLocation)\n            .moveSpeed(50)\n            .snapToGrid()\n            .waitUntilFinished()\n        .animation()\n            .opacity(1)\n            .on(tokenD)\n        break;\n    };\n    case \"dimension-door\": {\n        await Sequencer.Preloader.preloadForClients([\"jb2a.magic_signs.rune.conjuration.intro.blue\", \"jb2a.portals.vertical.vortex.blue\"])\n        const portalScale = tokenD.w / canvas.grid.size * 0.7;\n        seq.effect()\n            .file('jb2a.magic_signs.rune.conjuration.intro.blue', true)\n            .atLocation(tokenD)\n            .scale(portalScale * 0.7)\n            .opacity(0.5)\n            .waitUntilFinished(-600)\n        .effect()\n            .file('jb2a.portals.vertical.vortex.blue', true)\n            .atLocation(tokenD, {offset: {y: -(tokenD.h)}})\n            .scale(portalScale)\n            .duration(1200)\n            .fadeIn(200)\n            .fadeOut(500)\n        .animation()\n            .on(tokenD)\n            .opacity(0)\n        .effect()\n            .from(tokenD)\n            .moveTowards({ x: tokenD.center.x, y: tokenD.center.y - tokenD.h }, { ease: 'easeInCubic', rotate: false })\n            .zeroSpriteRotation()\n            .fadeOut(500)\n            .scale(tokenD.document.texture.scaleX)\n            .duration(500)\n            .wait(250)\n        .effect()\n            .file('jb2a.portals.vertical.vortex.blue', true)\n            .atLocation(targetLocation, {offset: { y: -(tokenD.h)}})\n            .scale(portalScale)\n            .duration(1200)\n            .fadeOut(500)\n            .fadeIn(200)\n        .effect()\n            .from(tokenD)\n            .atLocation({ x: targetLocation.x, y: targetLocation.y - tokenD.h }, { ease: 'easeInCubic', rotate: false })\n            .scale(tokenD.document.texture.scaleX)\n            .fadeIn(500)\n            .duration(500)\n            .moveTowards(targetLocation)\n            .rotate(90)\n            .waitUntilFinished()\n        .animation()\n            .on(tokenD)\n            .teleportTo(targetLocation, { relativeToCenter: true })\n            .opacity(1)\n        break;\n    };\n    case \"dimensional-steps\": {\n        await Sequencer.Preloader.preloadForClients([\"jb2a.misty_step.02.blue\", \"jb2a.misty_step.01.blue\", \"jb2a.energy_strands.range.standard.blue.04\"])\n        seq.effect()\n            .file(\"jb2a.misty_step.01.blue\", true)\n            .atLocation(tokenD)\n            .scaleToObject(2)\n            .wait(600)\n        .animation()\n            .on(tokenD)\n            .opacity(0)\n            .waitUntilFinished()\n        .animation()\n            .on(tokenD)\n            .teleportTo(targetLocation)\n            .snapToGrid()\n            .waitUntilFinished()\n        .effect()\n            .file(\"jb2a.misty_step.02.blue\", true)\n            .attachTo(tokenD)\n            .scaleToObject(2)\n            .wait(1500)\n        .animation()\n            .on(tokenD)\n            .opacity(1.0)\n        break;\n    };\n    case \"blink-charge\": {\n        await Sequencer.Preloader.preloadForClients([\n            \"jb2a.misty_step.02.blue\",\n            \"jb2a.misty_step.01.blue\",\n            \"jb2a.energy_strands.range.standard.blue.04\",\n            \"jb2a.energy_strands.overlay.blue.01\"\n        ])\n        seq.effect()\n            .file(\"jb2a.energy_strands.overlay.blue.01\", true)\n            .atLocation(tokenD)\n            .attachTo(tokenD)\n            .fadeIn(500)\n            .scaleToObject(tokenScale)\n            .wait(600)\n        .effect()\n            .file(\"jb2a.misty_step.01.blue\", true)\n            .atLocation(tokenD)\n            .scaleToObject(2)\n            .wait(600)\n        .animation()\n            .on(tokenD)\n            .opacity(0)\n            .waitUntilFinished()\n        .effect()\n            .file(\"jb2a.energy_strands.range.standard.blue.04\", true)\n            .atLocation(tokenD)\n            .stretchTo(targetLocation)\n        .animation()\n            .on(tokenD)\n            .teleportTo(targetLocation)\n            .snapToGrid()\n            .waitUntilFinished()\n        .effect()\n            .file(\"jb2a.misty_step.02.blue\", true)\n            .attachTo(tokenD)\n            .scaleToObject(2)\n            .wait(1500)\n        .animation()\n            .on(tokenD)\n            .opacity(1.0)\n        if (Array.from(game.user.targets)[0]) {\n            await Sequencer.Preloader.preloadForClients([\"jb2a.divine_smite.target.blueyellow\"])\n            seq.effect()\n                .waitUntilFinished(-500)\n                .file(\"jb2a.divine_smite.target.blueyellow\", true)\n                .atLocation(Array.from(game.user.targets)[0])\n                .scale({ x: 1, y: 1 })\n        }\n        break;\n    };\n    case \"shadow-jump\": {\n        await Sequencer.Preloader.preloadForClients([\"jb2a.misty_step.02.dark_black\", \"jb2a.misty_step.01.dark_black\"])\n        seq.effect()\n            .file(\"jb2a.misty_step.01.dark_black\", true)\n            .atLocation(tokenD)\n            .scaleToObject(2)\n            .wait(600)\n        .animation()\n            .on(tokenD)\n            .opacity(0)\n            .waitUntilFinished()\n        .effect()\n            .file(\"jb2a.drop_shadow.dark_black\", true)\n            .atLocation(tokenD)\n            .moveTowards(targetLocation)\n            .scale({ x: 1, y: 1 })\n            .waitUntilFinished(-1500)\n        .animation()\n            .on(tokenD)\n            .teleportTo(targetLocation)\n            .snapToGrid()\n            .waitUntilFinished()\n        .effect()\n            .file(\"jb2a.misty_step.02.dark_black\", true)\n            .attachTo(tokenD)\n            .scaleToObject(2)\n            .wait(1500)\n        .animation()\n            .on(tokenD)\n            .opacity(1.0)\n        break;\n    };\n    case \"terrain-transposition\": {\n        await Sequencer.Preloader.preloadForClients([\"jb2a.swirling_leaves.complete.01.green.0\", \"jb2a.energy_strands.range.standard.dark_green.03\"])\n        seq.effect()\n            .file(\"jb2a.swirling_leaves.complete.01.green.0\", true)\n            .atLocation(tokenD)\n            .attachTo(tokenD)\n            .fadeIn(500)\n            .scaleToObject(tokenScale * 2)\n            .waitUntilFinished(-2000)\n            .fadeOut(500)\n        .effect()\n            .from(tokenD)\n            .fadeOut(500)\n            .atLocation(tokenD)\n            .attachTo(tokenD, {bindAlpha: false})\n        .animation()\n            .on(tokenD)\n            .fadeOut(500)\n            .opacity(0)\n            .waitUntilFinished()\n        .animation()\n            .on(tokenD)\n            .teleportTo(targetLocation)\n            .snapToGrid()\n        .effect()\n            .file(\"jb2a.energy_strands.range.standard.dark_green\", true)\n            .atLocation(tokenD)\n            .stretchTo(targetLocation)\n            .waitUntilFinished(-1300)\n        .animation()\n            .on(tokenD)\n            .fadeIn(500)\n            .opacity(1.0)\n        break;\n    };\n    case \"collective-transposition\": {\n        break;\n    };\n    case \"Teleport\": {\n        break;\n    };\n    case \"unexpected-transposition\": {\n        seq.effect()\n            .file(\"jb2a.smoke.puff.centered\", true)\n            .atLocation(tokenD)\n            .attachTo(tokenD)\n            .scaleToObject(2)\n        .effect()\n            .file(\"jb2a.smoke.puff.centered\", true)\n            .atLocation(targetToken)\n            .attachTo(targetToken)\n            .scaleToObject(2)\n        .animation()\n            .on(tokenD)\n            .opacity(0)\n        .animation()\n            .on(targetToken)\n            .opacity(0)\n        .animation()\n            .on(tokenD)\n            .teleportTo(targetToken)\n            .fadeIn(500)\n        .animation()\n            .on(targetToken)\n            .teleportTo(tokenD)\n            .fadeIn(500)\n        break;\n    };\n}\n\nawait seq.play()\n\ntokenD.actor.sheet.maximize();","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"},"cf":{"id":"temp_6gsujam4gp6"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.3.4","coreVersion":"10.290","createdTime":null,"modifiedTime":1668524234501,"lastModifiedBy":"SCUQoZ7lvePPTab6"}}
{"name":"Mirror Reflection Animation","type":"script","scope":"global","author":"SCUQoZ7lvePPTab6","img":"icons/magic/control/energy-stream-link-large-blue.webp","command":"const [\n    token,\n    tokenScale,\n    allTargets,\n    hitTargets,\n    targets,\n    target,\n    origin,\n    actor\n] = await pf2eAnimations.macroHelpers(args)\n\nlet copies = game.canvas.tokens.placeables.filter(x => x?.actor?.uuid === token.actor.uuid).filter(x => x !== target);\n\nfunction shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n}\n\nshuffleArray(copies);\n\nlet sequ = new Sequence()\n    .sound()\n    .file(\"modules/pf2e-jb2a-macros/assets/sounds/mirror_*.wav\")\n\ncopies.forEach((copyToken, index) => {\n    sequ.effect()\n        .from(copyToken)\n        .moveTowards(target, { rotate: false, ease: \"easeInOutBack\" })\n        .moveSpeed(200)\n        .loopProperty(\"alphaFilter\", \"alpha\", { values: [1, 0.6], duration: 500, pingPong: true })\n        .duration(2000)\n        .waitUntilFinished(index + 1 >= copies.length ? -200 : false)\n})\n\nsequ.animation()\n    .on(target)\n    .fadeIn(100)\n    .play()","ownership":{"default":0,"SCUQoZ7lvePPTab6":3},"flags":{"advanced-macros":{"runAsGM":false,"runForEveryone":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.TCGcHbgpYSOjpCmP"},"cf":{"id":"temp_3t4j7cyld29"}},"_stats":{"systemId":"pf2e","systemVersion":"4.7.4","coreVersion":"10.291","createdTime":1667134397618,"modifiedTime":1676239459690,"lastModifiedBy":"SCUQoZ7lvePPTab6"},"folder":null,"sort":0,"_id":"lnR41a9tdyiP4ipr"}
{"_id":"nA5gqHtwwwsyOtih","name":"Encumbered","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/commodities/stone/stone-pile-grey.webp","scope":"global","command":"const [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\n\nconst tokenMagic = game.settings.get(\"pf2e-jb2a-macros\", \"tmfx\")\n\nif (!args.length) args[0] = tokenMagic ? \n    TokenMagic.hasFilterId(tokenD, \"encumbered\") ? \"off\" : \"on\" : \n    Sequencer.EffectManager.getEffects(\n        { \n            name: `${tokenD.name} - Encumbered`, \n            source: tokenD \n        }\n    ).length ? \"off\" : \"on\";\n\nif (args[0] == \"on\") {\n    if (tokenMagic) {\n        let params = [{\n            filterId: \"encumbered\",\n            filterType: \"transform\",\n            animated: {\n                scaleY:\n                    {\n                        animType: \"cosOscillation\",\n                        val2: 1.05,\n                        val1: 1,\n                    },\n                scaleX:\n                    {\n                        animType: \"cosOscillation\",\n                        val2: 1.05,\n                        val1: 1,\n                    }\n            }\n        }]\n        TokenMagic.addFilters(tokenD, params)\n    } else {\n        const arrayOfThings = [1 * tokenD.document.data.scale, 0.9 * tokenD.document.data.scale]\n        new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n            .effect()\n                .name(`${tokenD.name} - Encumbered`)\n                .attachTo(tokenD, {bindAlpha: false})\n                .from(tokenD)\n                .persist()\n                .loopProperty(\"spriteContainer\", \"scale.x\", { values: arrayOfThings, duration: 2000, pingPong: true})\n                .loopProperty(\"spriteContainer\", \"scale.y\", { values: arrayOfThings, duration: 2000, pingPong: true})\n                .filter(\"Glow\", { color: 000000, distance: 20, outerStrength: 1, innerStrength: 0 })\n                .fadeOut(500)\n            .wait(100)\n            .animation()\n                .fadeOut(100)\n                .on(tokenD)\n            .play()\n    }\n} else if (args[0] == \"off\") {\n    if (tokenMagic) {\n     await TokenMagic.deleteFilters(tokenD, \"encumbered\")\n    } else {\n        new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n            .animation()\n                .fadeIn(100)\n                .on(tokenD)\n            .play()\n        await Sequencer.EffectManager.endEffects({ name: `${tokenD.name} - Encumbered`, object: tokenD });\n    }\n}","folder":null,"sort":0,"flags":{"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"},"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"cf":{"id":"temp_s3arecn2xs"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.6.8","coreVersion":"10.291","createdTime":null,"modifiedTime":1674772731727,"lastModifiedBy":"SCUQoZ7lvePPTab6"}}
{"name":"Heat Haze","type":"script","author":"SCUQoZ7lvePPTab6","img":"icons/magic/fire/flame-burning-embers-yellow.webp","scope":"global","command":"const [token] = pf2eAnimations.macroHelpers(args)\nconst tokenMagic = game.settings.get(\"pf2e-jb2a-macros\", \"tmfx\")\nif (!args.length) args[0] = tokenMagic ? TokenMagic.hasFilterId(token, \"Heat Haze\") ? \"off\" : \"on\" : null\n\nlet params =\n[{\n    filterType: \"blur\",\n    filterId: \"Heat Haze\",\n    padding: 10,\n    quality: 4.0,\n    blur: 3,\n},{\n    filterType: \"xfire\",\n    filterId: \"Heat Haze\",\n    time: 0,\n    color: 0xEB9144,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\" \n      }\n    }\n}];\n\npf2eAnimations.applyTokenMagic(args, params);","flags":{"core":{"sourceId":"Compendium.world.token-magic-dev.hC63QbO6aATjatSA"},"advanced-macros":{"runAsGM":false,"runForEveryone":false,"runForSpecificUser":""}},"ownership":{"default":0,"SCUQoZ7lvePPTab6":3},"_stats":{"systemId":"pf2e","systemVersion":"4.6.8","coreVersion":"10.291","createdTime":1675003551439,"modifiedTime":1675006077387,"lastModifiedBy":"SCUQoZ7lvePPTab6"},"folder":null,"sort":0,"_id":"nAlCUpxQIThxgtl4"}
{"name":"Pummeling Rubble","type":"script","scope":"global","author":"BHRwUaMa68cNSVcP","img":"systems/pf2e/icons/spells/pummeling-rubble.webp","command":"const [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\nconst template = args[1]?.templateData ?? canvas.templates.placeables[canvas.templates.placeables.length - 1];\nconst [templateX, templateY] = [template.data.x, template.data.y];\nnew Sequence({moduleName: \"PF2e Animations\", softFail: true})\n    .effect()\n        .file('jb2a.falling_rocks.side.1x1', true)\n        .mask(template)\n        .atLocation(tokenD)\n        .stretchTo(template, {offset: {x: 100}})\n        .fadeOut(400)\n        .scale({ x: 0.7, y: 1.0 })\n    .play()","ownership":{"default":0,"BHRwUaMa68cNSVcP":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.4F4OeHGpmWM8OqYF"},"cf":{"id":"temp_sjnygaa08ij"}},"_stats":{"systemId":"pf2e","systemVersion":"4.0.4","coreVersion":"10.285","createdTime":1662950452004,"modifiedTime":1663106252133,"lastModifiedBy":"BHRwUaMa68cNSVcP"},"folder":null,"sort":0,"_id":"nlYSBFttAhdWpyla"}
{"name":"Darkness","type":"script","scope":"global","author":"BHRwUaMa68cNSVcP","img":"systems/pf2e/icons/spells/darkness.webp","command":"// Just updates the template with perfect vision data.\n// If used standalone, it updates the latest placed template.\n\nconst flag = {\n    \"perfect-vision\": {\n        \"visionLimitation\": {\n            \"enabled\": true,\n            \"sight\": 0,\n            \"sound\": null,\n            \"move\": null,\n            \"other\": null,\n            \"detection\": {\n                \"basicSight\": 0,\n                \"feelTremor\": null,\n                \"hearing\": null,\n                \"seeAll\": 0,\n                \"seeInvisibility\": 0,\n                \"senseAll\": null,\n                \"senseInvisibility\": null\n            }\n        }\n    }\n}\n\nconst template = args.length ? args[1].templateData : canvas.templates.placeables[canvas.templates.placeables.length - 1].document\n\nawait template.update({\"flags\": flag})","ownership":{"default":0,"BHRwUaMa68cNSVcP":3},"flags":{"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.ZrTz8dusj2oVDRXi"},"cf":{"id":"temp_8f8hkx7i8fo"}},"_stats":{"systemId":"pf2e","systemVersion":"4.7.2","coreVersion":"10.291","createdTime":1664155646051,"modifiedTime":1675864920188,"lastModifiedBy":"SCUQoZ7lvePPTab6"},"folder":null,"sort":0,"_id":"ooHL5fVdUQbWIlIh"}
{"_id":"pC8bqYNdqGeeUoWO","name":"Grim Tendrils","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/magic/unholy/energy-smoke-pink.webp","scope":"global","command":"const template = args[1]?.templateData ?? canvas.templates.placeables[canvas.templates.placeables.length - 1];\nnew Sequence({moduleName: \"PF2e Animations\", softFail: true})\n    .effect()\n        .file('jb2a.energy_strands.range.multiple.purple.01', true)\n        .fadeIn(500)\n        .fadeOut(500)\n        .atLocation(template)\n        .rotateTowards(template)\n        .stretchTo(template, { offset: { x: 0, y: -50 }})\n        .scale({ x: 1.4 })\n        .spriteOffset({ x: -50 })\n    .play()","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false},"exportSource":{"world":"hogwarts","system":"pf2e","coreVersion":"9.269","systemVersion":"3.10.2.11602"},"core":{"sourceId":"Macro.1wpIPbvbCvQaueft"},"cf":{"id":"temp_brzxllxt18s"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.4","coreVersion":"10.285","createdTime":null,"modifiedTime":1663106276374,"lastModifiedBy":"BHRwUaMa68cNSVcP"}}
{"_id":"reYCOeWs6vFSD91T","name":"Cone Template","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/svg/dice-target.svg","scope":"global","command":"// Original by david (aka claudekennilol)#2244\n// Modified by MrVauxs#8622\n// requires warpgate, jb2a patreon, and sequencer\n\nconst tokenD = args[0] ?? token\nconst gridSize = canvas.grid.h;\nconst sourceSquare = (center, widthSquares, heightSquares) => {\n    const h = gridSize * heightSquares;\n    const w = gridSize * widthSquares;\n\n    const bottom = center.y + h / 2;\n    const left = center.x - w / 2;\n    const top = center.y - h / 2;\n    const right = center.x + w / 2;\n\n    const rightSpots = [...new Array(heightSquares)].map((_, i) => ({\n        direction: 0,\n        x: right,\n        y: top + gridSize / 2 + gridSize * i,\n    }));\n    const bottomSpots = [...new Array(widthSquares)].map((_, i) => ({\n        direction: 90,\n        x: right - gridSize / 2 - gridSize * i,\n        y: bottom,\n    }));\n    const leftSpots = [...new Array(heightSquares)].map((_, i) => ({\n        direction: 180,\n        x: left,\n        y: bottom - gridSize / 2 - gridSize * i,\n    }));\n    const topSpots = [...new Array(widthSquares)].map((_, i) => ({\n        direction: 270,\n        x: left + gridSize / 2 + gridSize * i,\n        y: top,\n    }));\n    const allSpots = [\n        ...rightSpots.slice(Math.floor(rightSpots.length / 2)),\n        { direction: 45, x: right, y: bottom },\n        ...bottomSpots,\n        { direction: 135, x: left, y: bottom },\n        ...leftSpots,\n        { direction: 225, x: left, y: top },\n        ...topSpots,\n        { direction: 315, x: right, y: top },\n        ...rightSpots.slice(0, Math.floor(rightSpots.length / 2)),\n    ];\n\n    return {\n        x: left,\n        y: top,\n        center,\n        top,\n        bottom,\n        left,\n        right,\n        h,\n        w,\n        heightSquares,\n        widthSquares,\n        allSpots,\n    };\n};\n\n// cast from source token, if no source token, then select a square to originate the cone from.\nlet square;\nif (typeof tokenD === 'undefined') {\n    const sourceConfig = {\n        drawIcon: true,\n        drawOutline: false,\n        interval: -1,\n        label: 'Cone Start',\n    };\n\n    const source = await warpgate.crosshairs.show(sourceConfig);\n    if (source.cancelled) {\n        return;\n    }\n    square = sourceSquare({ x: source.x, y: source.y }, 1, 1);\n}\nelse {\n    const width = Math.max(Math.round(tokenD.data.width), 1);\n    const height = Math.max(Math.round(tokenD.data.height), 1)\n    square = sourceSquare(tokenD.center, width, height);\n}\n\n// Template Data\nconst templateData = {\n    t: args[1]?.templateType ?? \"cone\",\n    distance: args[1]?.distance ?? 15,\n    fillColor: args[1]?.fillColor ?? '#000000',\n    angle: args[1]?.angle ?? 90,\n    ...square.allSpots[0],\n    user: game.userId,\n}\n\nlet template = (await canvas.scene.createEmbeddedDocuments('MeasuredTemplate', [templateData]))[0];\n\nconst targetConfig = {\n    drawIcon: false,\n    drawOutline: false,\n}\n\nlet currentSpotIndex = 0;\nconst updateTemplateLocation = async (crosshairs) => {\n    while (crosshairs.inFlight) {\n        await warpgate.wait(100);\n\n        const totalSpots = 4 + 2 * square.heightSquares + 2 * square.widthSquares;\n        const radToNormalizedAngle = (rad) => {\n            let angle = (rad * 180 / Math.PI) % 360;\n\n            // offset the angle for even-sided tokens, because it's centered in the grid it's just wonky without the offset\n            if (square.heightSquares % 2 === 0 && square.widthSquares % 2 === 0) {\n                angle -= (360 / totalSpots) / 2;\n            }\n            const normalizedAngle = Math.round(angle / (360 / totalSpots)) * (360 / totalSpots);\n            return normalizedAngle < 0\n                ? normalizedAngle + 360\n                : normalizedAngle;\n        }\n\n        const ray = new Ray(square.center, crosshairs);\n        const angle = radToNormalizedAngle(ray.angle);\n        const spotIndex = Math.ceil(angle / 360 * totalSpots);\n\n        if (spotIndex === currentSpotIndex) {\n            continue;\n        }\n\n        currentSpotIndex = spotIndex;\n        const spot = square.allSpots[currentSpotIndex];\n\n        template = await template.update({ ...spot });\n\n        const getCenterOfSquares = (t) => {\n            const x1 = t.x + gridSize / 2;\n            const y1 = t.y + gridSize / 2;\n            const tokenSquaresWidth = t.data.width;\n            const tokenSquaresHeight = t.data.height;\n            const centers = [];\n            for (let x = 0; x < tokenSquaresWidth; x++) {\n                for (let y = 0; y < tokenSquaresHeight; y++) {\n                    centers.push({ id: t.id, center: { x: x1 + x * gridSize, y: y1 + y * gridSize } });\n                }\n            }\n            return centers;\n        };\n        const centers = canvas.tokens.placeables\n            .map(t => t.actor.data.data.size <= 4\n                ? { id: t.id, center: t.center }\n                : getCenterOfSquares(t))\n            .flatMap(x => x);\n        const tokenIdsToTarget = centers.filter(o => canvas.grid.getHighlightLayer('Template.' + template.id).geometry.containsPoint(o.center)).map(x => x.id);\n        game.user.updateTokenTargets(tokenIdsToTarget);\n    }\n}\n\nconst rotateCrosshairs = await warpgate.crosshairs.show(\n    targetConfig,\n    {\n        show: updateTemplateLocation\n    });\nif (rotateCrosshairs.cancelled) {\n    await template.delete();\n    game.user.updateTokenTargets();\n    return;\n}\n\nconst seq = new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n\nseq.effect()\n    .playIf(!args[2]?.length)\n    .file('jb2a.magic_signs.rune.evocation.intro.red', true)\n    .atLocation(square)\n    .offset({ x: -square.w / 2, y: -square.h / 2 })\n    .scaleToObject(1.6)\n    .opacity(0.5)\n    .waitUntilFinished()\n.effect()\n    .playIf(!args[2]?.length)\n    .file('jb2a.burning_hands.02.orange', true)\n    .fadeIn(300)\n    .attachTo(template)\n    .stretchTo(template, {onlyX: true})\n    .rotateTowards(template)\n    .mask()\n    .waitUntilFinished()\n    .thenDo(async () => {\n        if (args && args[2]) {\n            args[2].forEach((element) => seq\n                .effect()\n                    .file(element, true)\n                    .fadeIn(300)\n                    .attachTo(template)\n                    .stretchTo(template, {onlyX: true})\n                    .rotateTowards(template)\n                    .mask()\n            )\n        }\n    })\n\nseq.thenDo(async function(){\n    await template.delete();\n})\n\nawait seq.play();","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"exportSource":{"world":"hogwarts","system":"pf2e","coreVersion":"9.269","systemVersion":"3.10.2.11602"},"core":{"sourceId":"Macro.1wpIPbvbCvQaueft"},"cf":{"id":"temp_9hsvsxrbtvj"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.5.0","coreVersion":"10.291","createdTime":null,"modifiedTime":1671210998813,"lastModifiedBy":"SCUQoZ7lvePPTab6"}}
{"name":"Concealed","type":"script","author":"SCUQoZ7lvePPTab6","img":"systems/pf2e/icons/conditions/concealed.webp","scope":"global","command":"const [token] = pf2eAnimations.macroHelpers(args)\nconst tokenMagic = game.settings.get(\"pf2e-jb2a-macros\", \"tmfx\")\n\nif (!args.length) args[0] = tokenMagic ? TokenMagic.hasFilterId(token, \"Concealed\") ? \"off\" : \"on\" : null\n\nif (TokenMagic.hasFilterId(token, \"Blur\") || TokenMagic.hasFilterId(token, \"Heat Haze\")) return;\n\nconst params =\n[{\n    filterType: \"xfire\",\n    filterId: \"Concealed\",\n    time: 0,\n    color: 0xBBDDEE,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\" \n      }\n    }\n}];\n\npf2eAnimations.applyTokenMagic(args, params);","flags":{"core":{"sourceId":"Compendium.world.token-magic-dev.hC63QbO6aATjatSA"},"advanced-macros":{"runAsGM":false,"runForEveryone":false,"runForSpecificUser":""}},"ownership":{"default":0,"SCUQoZ7lvePPTab6":3},"_stats":{"systemId":"pf2e","systemVersion":"4.7.2","coreVersion":"10.291","createdTime":1675005900477,"modifiedTime":1675789342440,"lastModifiedBy":"SCUQoZ7lvePPTab6"},"folder":null,"sort":0,"_id":"regre2pHDzP3YCnA"}
{"_id":"tItdi7rFVh3PEyKx","name":"Petrified","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/conditions/petrified.webp","scope":"global","command":"const [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\n\nconst tokenMagic = game.settings.get(\"pf2e-jb2a-macros\", \"tmfx\");\n\nif (!args.length) args[0] = tokenMagic ? \n    TokenMagic.hasFilterId(tokenD, \"petrified\") ? \"off\" : \"on\" : \n    Sequencer.EffectManager.getEffects(\n        { \n            origin: \"petrified\", \n            source: tokenD \n        }\n    ).length ? \"off\" : \"on\";\n\nif (args[0] == \"on\") {\n    Sequencer.Preloader.preloadForClients(\"jb2a.impact.ground_crack.still_frame.01\")\n    if (tokenMagic) {\n        let params = [{\n            filterId: \"petrified\",\n            filterType: \"adjustment\",\n            saturation: 0,\n        }]\n        TokenMagic.addFilters(token, params)\n    }\n    new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n        .effect()\n            .origin(\"petrified\")\n            .name(`${tokenD.name} - Petrified`)\n            .attachTo(tokenD, {bindAlpha: false})\n            .from(tokenD)\n            .playIf(!tokenMagic)\n            .filter(\"ColorMatrix\", { \n                hue: 0, \n                brightness: 1, \n                contrast: 0, \n                saturate: -1\n            })\n            .scaleToObject(tokenD.document.data.scale)\n            .persist()\n            .fadeOut(500)\n        .effect()\n            .origin(\"petrified\")\n            .name(`${tokenD.name} - Petrified`)\n            .attachTo(tokenD, {bindAlpha: false})\n            .file(\"jb2a.impact.ground_crack.still_frame.01\", true)\n            .scaleToObject(2)\n            .persist()\n            .zIndex(9999)\n            .opacity(0.5)\n            .mask(tokenD)\n            .fadeOut(500)\n        .animation()\n            .playIf(!tokenMagic)\n            .delay(100)\n            .on(tokenD)\n            .fadeOut(100)\n        .play()\n} else if (args[0] == \"off\") {\n    new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n        .animation()\n            .playIf(!tokenMagic)\n            .fadeIn(200)\n            .on(tokenD)\n        .play()\n    await Sequencer.EffectManager.endEffects({ origin: `petrified`, object: tokenD })\n    if (tokenMagic) {\n        await TokenMagic.deleteFilters(token, \"petrified\")\n    }\n}","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"},"cf":{"id":"temp_s3arecn2xs"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.6.8","coreVersion":"10.291","createdTime":null,"modifiedTime":1674778068083,"lastModifiedBy":"SCUQoZ7lvePPTab6"}}
{"_id":"uCRBEs5o1lFVhRqT","name":"Arcane Cascade","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/features/classes/arcane-cascade.webp","scope":"global","command":"// Requires drag and dropping the Stance onto a token.\n// Cannot be used standalone.\n\nconst [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\n\nif (!args.length) args[0] = await Sequencer.EffectManager.getEffects({ origin: \"arcane cascade\", source: tokenD }).length ? \"off\" : \"on\";\n\nconst assets = game.modules.get(\"JB2A_DnD5e\")?.active\n    ? [\"jb2a.token_border.circle.static.blue.002\", \"jb2a.divine_smite.caster.blueyellow\",\"jb2a.divine_smite.caster.blueyellow\",\"jb2a.divine_smite.caster.blueyellow\"]\n    : [\"jb2a.token_border.circle.static.blue.010\", \"jb2a.divine_smite.caster.yellowwhite\",\"jb2a.divine_smite.caster.orange\",\"jb2a.divine_smite.caster.purplepink\"];\n\nif (args[0] == \"on\") {\n    let seq = new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n    let damageType = args[1].item.flags.pf2e.rulesSelections.stanceArcaneCascade\n    switch (damageType) {\n        case \"sonic\": seq.effect()\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .file(\"jb2a.extras.tmfx.border.circle.outpulse.02.normal\", true)\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .scaleToObject(1.2 * tokenScale)\n                .fadeOut(1000)\n                .fadeIn(1000)\n                .belowTokens()\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .file(\"jb2a.extras.tmfx.border.circle.outpulse.02.normal\", true)\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .fadeOut(2000)\n                .fadeIn(2000)\n                .belowTokens()\n                .scaleToObject(1.3 * tokenScale)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .file(\"jb2a.extras.tmfx.border.circle.outpulse.02.normal\", true)\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .belowTokens()\n                .fadeOut(3000)\n                .fadeIn(3000)\n                .scaleToObject(1.4 * tokenScale)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .file(\"jb2a.extras.tmfx.border.circle.outpulse.02.normal\", true)\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .fadeOut(4000)\n                .fadeIn(4000)\n                .belowTokens()\n                .scaleToObject(1.5 * tokenScale)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .file(\"jb2a.extras.tmfx.border.circle.outpulse.02.normal\", true)\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .belowTokens()\n                .fadeOut(5000)\n                .fadeIn(5000)\n                .scaleToObject(1.6 * tokenScale)\n                .persist(true, { persistTokenPrototype: true })\n            .play();\n            break;\n        case \"poison\": seq.effect()\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .file(\"jb2a.icon.poison.dark_green\", true)\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .zIndex(10)\n                .scaleToObject(1 * tokenScale)\n                .animateProperty(\"sprite\", \"height\", { from: 1 * tokenScale, to: 1.5 * tokenScale, duration: 1500, gridUnits: true, ease: \"easeOutBack\"})\n                .animateProperty(\"sprite\", \"width\", { from: 1 * tokenScale, to: 1.5 * tokenScale, duration: 1500, gridUnits: true, ease: \"easeOutBack\"})\n                .fadeOut(1000)\n                .fadeIn(600)\n                .duration(2000)\n                .waitUntilFinished(-1500)\n            .effect()\n                .playIf(!game.modules.get(\"JB2A_DnD5e\")?.active)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .file(\"jb2a.fog_cloud.02.green\", true)\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .belowTokens()\n                .scaleToObject(2 * tokenScale)\n                .fadeOut(500)\n                .fadeIn(1500)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .playIf(!game.modules.get(\"JB2A_DnD5e\")?.active)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .file(\"jb2a.fog_cloud.02.green\", true)\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .opacity(0.3)\n                .scaleToObject(2 * tokenScale)\n                .fadeOut(500)\n                .fadeIn(1500)\n                .persist(true, { persistTokenPrototype: true })\n            .play();\n            break;\n        case \"positive\": seq.effect()\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .file(\"jb2a.energy_strands.in.green.01.2\", true)\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .scaleToObject(2 * tokenScale)\n                .waitUntilFinished(-500)\n            .effect()\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .file(\"jb2a.energy_strands.complete.blue.01\", true)\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .belowTokens()\n                .scaleToObject(2 * tokenScale)\n                .fadeOut(500)\n                .filter(\"ColorMatrix\", {\n                    hue: 240\n                })\n                .fadeIn(500)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .file(\"jb2a.energy_strands.overlay.blue.01\", true)\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .filter(\"ColorMatrix\", {\n                    hue: 240\n                })\n                .scaleToObject(2 * tokenScale)\n                .fadeOut(500)\n                .fadeIn(500)\n                .persist(true, { persistTokenPrototype: true })\n            .play();\n            break;\n        case \"negative\": seq.effect()\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .file(\"jb2a.energy_strands.in.purple.01.2\", true)\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .playIf(!game.modules.get(\"JB2A_DnD5e\")?.active)\n                .scaleToObject(2 * tokenScale)\n                .waitUntilFinished(-500)\n            .effect()\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .file(\"jb2a.energy_strands.complete.purple.01\", true)\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .belowTokens()\n                .scaleToObject(2 * tokenScale)\n                .fadeOut(500)\n                .playIf(!game.modules.get(\"JB2A_DnD5e\")?.active)\n                .fadeIn(500)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .playIf(!game.modules.get(\"JB2A_DnD5e\")?.active)\n                .file(\"jb2a.energy_strands.overlay.purple.01\", true)\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .scaleToObject(2 * tokenScale)\n                .fadeOut(500)\n                .fadeIn(500)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .file(\"jb2a.energy_strands.in.green.01.2\", true)\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .playIf(game.modules.get(\"JB2A_DnD5e\")?.active)\n                .filter(\"ColorMatrix\", {\n                    hue: -170\n                })\n                .scaleToObject(2 * tokenScale)\n                .waitUntilFinished(-500)\n            .effect()\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .file(\"jb2a.energy_strands.complete.blue.01\", true)\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .belowTokens()\n                .scaleToObject(2 * tokenScale)\n                .fadeOut(500)\n                .playIf(game.modules.get(\"JB2A_DnD5e\")?.active)\n                .filter(\"ColorMatrix\", {\n                    hue: 60\n                })\n                .fadeIn(500)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .playIf(game.modules.get(\"JB2A_DnD5e\")?.active)\n                .file(\"jb2a.energy_strands.overlay.blue.01\", true)\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .filter(\"ColorMatrix\", {\n                    hue: 60\n                })\n                .scaleToObject(2 * tokenScale)\n                .fadeOut(500)\n                .fadeIn(500)\n                .persist(true, { persistTokenPrototype: true })\n            .play();\n            break;\n        case \"mental\": seq.effect()\n                .file(assets[3], true)\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .scaleToObject(1.5 * tokenScale)\n                .waitUntilFinished(-2000)\n            .effect()\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .file(\"jb2a.magic_signs.rune.enchantment.intro.purple\", true)\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .zIndex(10)\n                .animateProperty(\"sprite\", \"height\", { from: 1 * tokenScale, to: 1.5 * tokenScale, duration: 1500, gridUnits: true, ease: \"easeOutBack\"})\n                .animateProperty(\"sprite\", \"width\", { from: 1 * tokenScale, to: 1.5 * tokenScale, duration: 1500, gridUnits: true, ease: \"easeOutBack\"})\n                .fadeOut(1500)\n                .fadeIn(700)\n            .effect()\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .file(\"jb2a.token_border.circle.static.purple.003\", true)\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .opacity(0.6)\n                .scaleToObject(2 * tokenScale)\n                .fadeOut(500)\n                .fadeIn(500)\n                .persist(true, { persistTokenPrototype: true })\n            .play();\n            break;\n        case \"lawful\": seq.effect()\n                .file(assets[2], true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .scaleToObject(2 * tokenScale)\n                .waitUntilFinished(-2000)\n            .effect()\n                .file(\"jb2a.wind_stream.white\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .scaleToObject(tokenScale)\n                .rotate(90)\n                .fadeOut(1500)\n                .mask()\n                .fadeIn(700)\n                .tint(\"#FFA500\")\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .file(\"jb2a.ward.rune.yellow.01\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .filter(\"ColorMatrix\", {\n                    hue: -20\n                })\n                .belowTokens()\n                .scaleToObject(2 * tokenScale)\n                .fadeOut(500)\n                .fadeIn(500)\n                .persist(true, { persistTokenPrototype: true })\n            .play();\n            break;\n        case \"good\": seq.effect()\n                .file(assets[1], true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .scaleToObject(1.5 * tokenScale)\n                .waitUntilFinished(-1400)\n            .effect()\n                .file(\"jb2a.bless.200px.intro.yellow\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .scaleToObject(1.7 * tokenScale)\n                .fadeOut(250)\n                .waitUntilFinished(-500)\n            .effect()\n                .file(\"jb2a.bless.200px.loop.yellow\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .belowTokens()\n                .scaleToObject(1.7 * tokenScale)\n                .fadeOut(500)\n                .persist(true, { persistTokenPrototype: true })\n            .play();\n            break;\n        case \"force\": seq.effect()\n                .file(\"jb2a.antilife_shell.blue_no_circle\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .scaleToObject(1.4 * tokenScale)\n                .waitUntilFinished(-1500)\n            .effect()\n                .file(\"jb2a.fireflies.many.01.blue\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .randomRotation()\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .scaleToObject(1.4 * tokenScale)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .file(\"jb2a.wall_of_force.sphere.blue\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .scaleToObject(1.3 * tokenScale)\n                .fadeIn(800)\n                .fadeOut(500)\n                .persist(true, { persistTokenPrototype: true })\n            .play();\n            break;\n        case \"fire\": seq.effect()\n            .file(\"jb2a.fireflies.many.01.green\", true)\n            .origin(\"Unlearcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n            .attachTo(tokenD)        \n                .tieToDocuments([args[1]?.item, tokenD])\n            .filter(\"ColorMatrix\", {\n                hue: 300\n            })\n            .randomRotation()\n            .scaleToObject(1.5 * tokenScale)\n            .fadeIn(500)\n            .fadeOut(500)\n            .opacity(0.7)\n            .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .file(\"jb2a.fumes.fire.orange\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .spriteAnchor({ x: 0.1, y: 0.9 })\n                .belowTokens()\n                .scaleToObject(1.5 * tokenScale)\n                .fadeIn(500)\n                .fadeOut(500)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .file(\"jb2a.token_border.circle.static.blue.005\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .fadeOut(3000)\n                .filter(\"ColorMatrix\", {\n                    hue: 190\n                })\n                .scaleToObject(2 * tokenScale)\n                .fadeIn(700)\n                .opacity(0.9)\n                .persist(true, { persistTokenPrototype: true })\n            .play()\n            break;\n        case \"electricity\": seq.effect()\n            .file(\"jb2a.divine_smite.caster.blueyellow\", true)\n            .origin(\"Unlearcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n            .filter(\"ColorMatrix\", {\n                hue: 100,\n                contrast: 1,\n                saturate: 0     \n            })\n            .tint(\"#7DF9FF\")\n            .attachTo(tokenD)        \n                .tieToDocuments([args[1]?.item, tokenD])\n            .scaleToObject(2 * tokenScale)\n            .waitUntilFinished(-1500)\n            .effect()\n                .file(\"jb2a.static_electricity.03.blue\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .scaleToObject(1.5 * tokenScale)\n                .fadeOut(500)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .file(assets[0], true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .fadeOut(3000)\n                .scaleToObject(2 * tokenScale)\n                .fadeIn(700)\n                .persist(true, { persistTokenPrototype: true })\n            .play()\n            break;\n        case \"evil\": seq.effect()\n                .file(\"jb2a.icon.fear.orange\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .fadeIn(500)\n                .fadeOut(500)\n                .duration(2000)\n                .scaleToObject(2 * tokenScale)\n            .effect()\n                .file(\"jb2a.wind_stream.white\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .scaleToObject(tokenScale)\n                .rotate(90)\n                .fadeOut(1500)\n                .mask()\n                .fadeIn(700)\n                .tint(\"#ff4500\")\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .file(\"jb2a.token_border.circle.static.blue.001\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .fadeOut(3000)\n                .opacity(0.6)\n                .scaleToObject(2 * tokenScale)\n                .fadeIn(700)\n                .tint(\"#ff4500\")\n                .persist(true, { persistTokenPrototype: true })\n            break;\n        case \"cold\": seq.effect()\n                .file(\"jb2a.ice_spikes.radial.burst.white\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .fadeIn(500)\n                .fadeOut(500)\n                .belowTokens()\n                .duration(2000)\n                .scaleToObject(4 * tokenScale)\n            .effect()\n                .file(\"jb2a.wind_stream.white\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .scaleToObject(tokenScale)\n                .rotate(90)\n                .fadeOut(1500)\n                .mask()\n                .fadeIn(700)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .file(\"jb2a.token_border.circle.static.blue.001\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .fadeOut(3000)\n                .opacity(0.6)\n                .scaleToObject(2 * tokenScale)\n                .fadeIn(700)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .file(\"jb2a.shield_themed.below.ice.01.blue\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .fadeOut(3000)\n                .opacity(0.6)\n                .belowTokens()\n                .scaleToObject(1.4 * tokenScale)\n                .fadeIn(700)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .file(\"jb2a.shield_themed.above.ice.01.blue\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .fadeOut(3000)\n                .scaleToObject(1.4 * tokenScale)\n                .fadeIn(700)\n                .persist(true, { persistTokenPrototype: true })\n         break;\n        case \"chaotic\": seq.effect()\n                .file(\"jb2a.icon.fear.dark_purple\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .fadeIn(500)\n                .fadeOut(500)\n                .duration(2000)\n                .scaleToObject(2 * tokenScale)\n            .effect()\n                .file(\"jb2a.wind_stream.white\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .scaleToObject(tokenScale)\n                .rotate(90)\n                .fadeOut(1500)\n                .mask()\n                .fadeIn(700)\n                .tint(\"#800080\")\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .file(\"jb2a.token_border.circle.static.blue.001\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .fadeOut(3000)\n                .opacity(0.6)\n                .scaleToObject(2 * tokenScale)\n                .fadeIn(700)\n                .tint(\"#800080\")\n                .persist(true, { persistTokenPrototype: true })\n            break;\n        case \"acid\": seq.effect()\n                .file(\"jb2a.liquid.splash.blue\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .atLocation(tokenD)\n                .fadeIn(500)\n                .fadeOut(500)\n                .tint(\"#8ffe09\")\n                .scaleToObject(2 * tokenScale)\n            .effect()\n                .file(\"jb2a.liquid.splash.blue\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .atLocation(tokenD)\n                .fadeIn(500)\n                .belowTokens()\n                .fadeOut(500)\n                .tint(\"#8ffe09\")\n                .scaleToObject(2 * tokenScale)\n            .effect()\n                .file(\"jb2a.wind_stream.white\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .scaleToObject(tokenScale)\n                .rotate(90)\n                .fadeOut(1500)\n                .mask()\n                .fadeIn(700)\n                .tint(\"#8ffe09\")\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .file(\"jb2a.token_border.circle.static.blue.001\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .fadeOut(3000)\n                .opacity(0.6)\n                .scaleToObject(2 * tokenScale)\n                .fadeIn(700)\n                .tint(\"#8ffe09\")\n                .persist(true, { persistTokenPrototype: true })\n            break;\n        case \"slashing\":\n        case \"piercing\":\n        case \"bludgeoning\": seq.effect()\n                .file(\"jb2a.extras.tmfx.outpulse.circle.02.normal\", true)\n                .atLocation(tokenD)\n                .size(4, {gridUnits: true})\n                .playIf(damageType == \"bludgeoning\")\n                .opacity(0.25)\n            .effect()\n                .file(\"jb2a.impact.ground_crack.orange.01\", true)\n                .atLocation(tokenD)\n                .belowTokens()\n                .playIf(damageType == \"bludgeoning\")\n                .filter(\"ColorMatrix\", {hue: -15,saturate: 1})\n                .size(3.5, {gridUnits: true})\n                .zIndex(1)\n                .tint(\"#808080\")\n            .effect()\n                .file(\"jb2a.impact.ground_crack.still_frame.01\", true)\n                .atLocation(tokenD)\n                .playIf(damageType == \"bludgeoning\")\n                .belowTokens()\n                .fadeIn(2000)\n                .filter(\"ColorMatrix\", {hue: -15,saturate: 1})\n                .size(3.5, {gridUnits: true})\n                .fadeOut(20000)\n                .tint(\"#808080\")\n                .zIndex(0)\n            .effect()\n                .file(\"jb2a.wind_stream.white\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .scaleToObject(tokenScale)\n                .rotate(90)\n                .fadeOut(1500)\n                .mask()\n                .fadeIn(700)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .file(\"jb2a.token_border.circle.static.blue.001\", true)\n                .origin(\"arcane cascade\")\n                .name(tokenD.name + \"'s Arcane Cascade\")\n                .attachTo(tokenD)            \n                .tieToDocuments([args[1]?.item, tokenD])\n                .fadeOut(3000)\n                .opacity(0.6)\n                .scaleToObject(2 * tokenScale)\n                .fadeIn(700)\n                .tint(\"#808080\")\n                .persist(true, { persistTokenPrototype: true })\n            break;\n    }\n    seq.play()\n} else if (args[0] == \"off\") {\n    await Sequencer.EffectManager.endEffects({ origin: \"arcane cascade\", object: tokenD })\n}","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.rBz1gNwQkWu8TidN"},"cf":{"id":"temp_s3arecn2xs"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.3.2","coreVersion":"10.288","createdTime":null,"modifiedTime":1667148553706,"lastModifiedBy":"SCUQoZ7lvePPTab6"}}
{"name":"Add Effect","type":"script","scope":"global","author":"SCUQoZ7lvePPTab6","img":"icons/svg/daze.svg","command":"pf2eAnimations.debug(\"Add Effect Macro\", args)\n\nlet effect;\nlet deleteTemplate = false;\n\nif (args[2].on) effect = args[2].on;\nif (args[2].on && args[2].deleteTemplate === \"on\") deleteTemplate = true;\n\nif (args[2].off && args[0] === \"off\") effect = args[2].off;\nif (args[2].off && args[2].deleteTemplate === \"off\") deleteTemplate = true;\n\n\nasync function ask(source, deleteTemplate) {\n\tif (!args[2].ask || game.settings.get(\"pf2e-jb2a-macros\", \"autoAccept\")) {\n\t\tawait args[1].sourceToken.actor.createEmbeddedDocuments(\"Item\", [source]);\n\t\tif (deleteTemplate && args[0].documentName === \"MeasuredTemplate\") args[0].delete();\n\t\treturn;\n\t} else {\n\t\tawait Dialog.wait({\n\t\t\ttitle: \"Add Effect?\",\n\t\t\tcontent: `\n\t\t\t<p>Do you want to add <b>\"${source.name}\"</b> to your character, <b>${args[1].sourceToken.actor.name}</b>?</p>\n\t\t\t<p><i>You can automatically accept these in PF2e Animations settings.</i></p>\n\t\t\t\t\t`,\n\t\t\tbuttons: {\n\t\t\t\tbutton1: {\n\t\t\t\t\tlabel: \"Accept\",\n\t\t\t\t\tcallback: async () => { \n\t\t\t\t\t\tawait args[1].sourceToken.actor.createEmbeddedDocuments(\"Item\", [source]);\n\t\t\t\t\t\tif (deleteTemplate && args[0].documentName === \"MeasuredTemplate\") args[0].delete();\n\t\t\t\t\t},\n\t\t\t\t\ticon: `<i class=\"fas fa-check\"></i>`\n\t\t\t\t},\n\t\t\t\tbutton2: {\n\t\t\t\t\tlabel: \"Decline\",\n\t\t\t\t\ticon: `<i class=\"fas fa-times\"></i>`\n\t\t\t\t}\n\t\t\t},\n\t\t}).render(true);\n\t}\n}\n\nif (!effect) return;\nconst ITEM_UUID = effect;\n\nlet source = await fromUuid(ITEM_UUID);\nif (!source) {\n\tif (args[2].deleteTemplate.includes(\"alt\")) {\n\t\tdeleteTemplate = true\n\t} else {\n\t\tdeleteTemplate = false\n\t}\n\tif ((args[2].altOff && effect === args[2].off) || (args[2].altOn && effect === args[2].on)) {\n\t\tsource = await fromUuid(effect === args[2].altOn ? args[2].altOn : args[2].altOff)\n\t} else {\n\t\treturn pf2eAnimations.debug(\"Add Effect - No Effect Found\", args)\n\t}\n}\n\nawait ask(source, deleteTemplate)","ownership":{"default":0,"SCUQoZ7lvePPTab6":3},"flags":{"advanced-macros":{"runAsGM":false,"runForEveryone":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.US5tGmPkyimygfcx"},"cf":{"id":"temp_6gsujam4gp6"}},"_stats":{"systemId":"pf2e","systemVersion":"4.6.8","coreVersion":"10.291","createdTime":1665450793356,"modifiedTime":1675298986965,"lastModifiedBy":"SCUQoZ7lvePPTab6"},"folder":null,"sort":0,"_id":"x3ZaL34wkz4LljPo"}
{"_id":"y2Hundr4PzbGNeys","name":"Bless","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/bless.webp","scope":"global","command":"const [tokenD, tokenScale] = await pf2eAnimations.macroHelpers(args)\n\nif (!args.length) args[0] = await Sequencer.EffectManager.getEffects({ origin: \"aura-effect-bless\", name: \"Pf2e x JB2A Aura - Bless*\", source: tokenD }).length ? \"off\" : \"on\";\n\nconst auraRadius = tokenD.auras.get(\"aura-effect-bless\")?.radius\nconst gridUnits = 1.5 + 3 * (isNaN(auraRadius) ? 1 : auraRadius / 5)\n\nif (args[0] == \"on\") {\n    new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n        .effect()\n            .file(\"jb2a.bless.400px.intro.yellow\", true)\n            .scaleIn(0, 1000, {ease: \"easeInBounce\"})\n            .atLocation(tokenD)\n            .attachTo(tokenD)\n            .name(\"Pf2e x JB2A Aura - Bless Intro\")\n            .origin(\"aura-effect-bless\")\n            .opacity(0.9)\n            .size(gridUnits, { gridUnits: true })\n            .waitUntilFinished(-2000)\n        .effect()\n            .delay(1500)\n            .file(\"jb2a.bless.400px.loop.yellow\", true)\n            .atLocation(tokenD)\n            .fadeOut(500)\n            .persist(true, { persistTokenPrototype: true })\n            .attachTo(tokenD)\n            .belowTokens(true)\n            .origin(\"aura-effect-bless\")\n            .name(\"Pf2e x JB2A Aura - Bless\")\n            .scaleOut(2, 2500, {ease: \"easeOutCubic\"})\n            .fadeOut(1000)\n            .size(gridUnits, { gridUnits: true })\n        .play()\n} else if (args[0] == \"off\") {\n    await Sequencer.EffectManager.endEffects({ origin: \"aura-effect-bless\", name: \"Pf2e x JB2A Aura - Bless*\", source: tokenD })\n}","folder":null,"sort":0,"flags":{"core":{"sourceId":"Macro.eJJhPoLdv7ul62dc"},"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_o2l5kjd1mwj"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.2.6","coreVersion":"10.288","createdTime":null,"modifiedTime":1665872439248,"lastModifiedBy":"SCUQoZ7lvePPTab6"}}
{"name":"Stumbling Stance","type":"script","scope":"global","author":"SCUQoZ7lvePPTab6","img":"systems/pf2e/icons/features/feats/stumbling-stance.webp","command":"if (!args || args.length === 0) {\n    const actors = canvas.tokens.controlled.flatMap((token) => token.actor ?? []);\n    if (actors.length === 0 && game.user.character) actors.push(game.user.character);\n    if (actors.length === 0) {\n        return ui.notifications.error(game.i18n.localize(\"PF2E.ErrorMessage.NoTokenSelected\"));\n    }\n\n    const ITEM_UUID = \"Compendium.pf2e.feat-effects.BCyGDKcplkJiSAKJ\"; // Stance: Stumbling Stance\n    const source = (await fromUuid(ITEM_UUID)).toObject();\n    source.flags = mergeObject(source.flags ?? {}, { core: { sourceId: ITEM_UUID } });\n\n    for (const actor of actors) {\n        const existing = actor.itemTypes.effect.find((e) => e.flags.core?.sourceId === ITEM_UUID);\n        if (existing) {\n            await existing.delete();\n        } else {\n            await actor.createEmbeddedDocuments(\"Item\", [source]);\n        }\n    }\n}\n\nconst [token, tokenScale] = await pf2eAnimations.macroHelpers(args)\n\nconst tokenMagic = game.settings.get(\"pf2e-jb2a-macros\", \"tmfx\")\n\nif (args[0] === \"on\") {\n    let bubbles = args[2]?.bubbles ?? 50\n    let sobriety = args[2]?.sobriety ?? 2000\n\n    if (tokenMagic) {\n        let params = [{\n            filterId: \"drunk-adjustment\",\n            filterType: \"adjustment\",\n            brightness: 1.75,\n            red: 0.52,\n            green: 0.37,\n            blue: 0.26\n        },\n        {\n            filterId: \"drunk-transform\",\n            filterType: \"transform\",\n            animated: {\n                rotation:\n                {\n                    animType: \"sinOscillation\",\n                    val1: 356,\n                    val2: 369,\n                }\n            }\n        }]\n        TokenMagic.addFilters(token, params)\n    }\n\n    new Sequence({moduleName: \"PF2e Animations\", softFail: true})\n        .effect()\n            .name(\"Stumbling Stance Token\")\n            .origin(args[1].item.uuid)\n            .tieToDocuments([args[1].item])\n            .from(token)\n            .playIf(!tokenMagic)\n            .zIndex(1)\n            .scaleToObject(token.document.texture.scaleX)\n            .attachTo(token, {followRotation: !token.document.lockRotation})\n            .preset(\"pf2eAnimations.fade\")\n            .loopProperty(\"sprite\", \"rotation\", { values: [0, -4, 0, 6, 0], duration: 1500})\n            .persist()\n        .wait(500)\n        .animation()\n            .on(token)\n            .playIf(!tokenMagic)\n            .opacity(0)\n        .effect()\n            .name(\"Stumbling Stance Bubble\")\n            .zIndex(3)\n            .origin(args[1].item.uuid)\n            .file(\"jb2a.markers.bubble.loop.blue\", true)\n            .atLocation(token, { randomOffset: 0.5 })\n            .repeats(bubbles, 100, sobriety)\n            .preset(\"pf2eAnimations.fade\")\n            .filter(\"ColorMatrix\", { hue: 210 })\n            .duration(3000)\n            .tieToDocuments([args[1].item])\n            .scaleIn(0, 500)\n            .scaleOut(10, 500)\n            .loopProperty(\"sprite\", \"position.y\", { from: 0, to: -50, duration: 3000})\n            .scaleToObject(0.1)\n        .effect()\n            .name(\"Stumbling Stance Token Drunk\")\n            .zIndex(2)\n            .origin(args[1].item.uuid)\n            .tieToDocuments([args[1].item])\n            .from(token)\n            .playIf(!tokenMagic)\n            .scaleToObject(token.document.texture.scaleX)\n            .attachTo(token, {followRotation: !token.document.lockRotation})\n            .opacity(0.35)\n            .preset(\"pf2eAnimations.fade\")\n            .tint(\"#8B4513\")\n            .loopProperty(\"sprite\", \"rotation\", { values: [0, -4, 0, 6, 0], duration: 1500})\n            .persist()\n            .waitUntilFinished(-500)\n        .animation()\n            .on(token)\n            .playIf(!tokenMagic)\n            .opacity(1)\n        .play()\n} else if (args[0] == \"off\" && tokenMagic) {\n    await TokenMagic.deleteFilters(token, \"drunk-transform\")\n    await TokenMagic.deleteFilters(token, \"drunk-adjustment\")\n}","ownership":{"default":0,"SCUQoZ7lvePPTab6":3},"flags":{"advanced-macros":{"runAsGM":false,"runForEveryone":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.7qHQ1nffGEGXTihq"}},"_stats":{"systemId":"pf2e","systemVersion":"4.6.8","coreVersion":"10.291","createdTime":1670961497158,"modifiedTime":1674775652274,"lastModifiedBy":"SCUQoZ7lvePPTab6"},"folder":null,"sort":0,"_id":"ya0hNKP4l4uOfoGJ"}
