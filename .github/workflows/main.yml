name: Release Creation

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm ci
      - name: Build macro pack
        run: node build/pack.mjs

      # get part of the tag after the `v`
      - name: Extract tag version number
        id: get_version
        uses: battila7/get-version-action@v2

      # Substitute the Manifest and Download URLs in the module.json
      - name: Substitute Manifest and Download Links For Versioned Ones
        id: sub_manifest_link_version
        uses: microsoft/variable-substitution@v1
        with:
          files: "module.json"
        env:
          version: ${{steps.get_version.outputs.version-without-v}}
          url: https://github.com/${{github.repository}}
          manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
          download: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.zip

      # Create a zip file with all files required by the module to add to the release
      - run: zip -r ./module.zip module.json README.md LICENSE styles/ scripts/ templates/ languages/ module/ packs/ assets/ cover.png

      # Create a release for this specific version
      - name: Update Release with Files
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true # Set this to false if you want to prevent updating existing releases
          name: ${{ github.event.release.name }}
          prerelease: ${{ github.event.release.prerelease }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "./module.json, ./module.zip, ./module/autorec.json"
          tag: ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}

      # Publish to FoundryVTT
      - name: Publish to Foundry VTT Repo
        if: ${{ !github.event.release.prerelease }}
        id: publish_foundry_repo
        run: npx @ghost-fvtt/foundry-publish@2.4.0
        env:
          FVTT_MANIFEST_PATH: "module.json"
          FVTT_PACKAGE_ID: "pf2e-jb2a-macros"
          FVTT_USE_NEW_PACKAGE_ADMINISTRATION_INTERFACE: true
          FVTT_USERNAME: ${{ secrets.FOUNDRY_ADMIN_USERNAME }}
          FVTT_PASSWORD: ${{ secrets.FOUNDRY_ADMIN_PASSWORD }}
          FVTT_MANIFEST_URL: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.json
